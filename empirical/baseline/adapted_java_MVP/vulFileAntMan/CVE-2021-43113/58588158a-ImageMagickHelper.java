package com.itextpdf.io.util;
import com.itextpdf.io.IoExceptionMessage;
import java.io.IOException;
public class ImageMagickHelper {
    public static final String MAGICK_COMPARE_ENVIRONMENT_VARIABLE = "ITEXT_MAGICK_COMPARE_EXEC";
    @Deprecated
    static final String MAGICK_COMPARE_ENVIRONMENT_VARIABLE_LEGACY = "compareExec";
    static final String MAGICK_COMPARE_KEYWORD = "ImageMagick Studio LLC";
    private String compareExec;
    public ImageMagickHelper() {
        this(null);
    }
    
    public ImageMagickHelper(String newCompareExec) {
        compareExec = newCompareExec;
        if (compareExec == null) {
            compareExec = SystemUtil.getPropertyOrEnvironmentVariable(MAGICK_COMPARE_ENVIRONMENT_VARIABLE);
            if (compareExec == null) {
                compareExec = SystemUtil.getPropertyOrEnvironmentVariable(MAGICK_COMPARE_ENVIRONMENT_VARIABLE_LEGACY);
            }
            
        }
        
        if (!CliCommandUtil.isVersionCommandExecutable(compareExec, MAGICK_COMPARE_KEYWORD)) {
            throw new IllegalArgumentException(IoExceptionMessage.COMPARE_COMMAND_SPECIFIED_INCORRECTLY);
        }
        
    }
    
    public String getCliExecutionCommand() {
        return compareExec;
    }
    
    public boolean runImageMagickImageCompare(String outImageFilePath, String cmpImageFilePath, String diffImageName) throws IOException, InterruptedException {
        return runImageMagickImageCompare(outImageFilePath, cmpImageFilePath, diffImageName, null);
    }
    
    public boolean runImageMagickImageCompare(String outImageFilePath, String cmpImageFilePath, String diffImageName, String fuzzValue) throws IOException, InterruptedException {
        fuzzValue = (fuzzValue == null) ? "" : " -metric AE -fuzz <fuzzValue>%".replace("<fuzzValue>", fuzzValue);
        StringBuilder currCompareParams = new StringBuilder();
        currCompareParams .append(fuzzValue).append(" '") .append(outImageFilePath).append("' '") .append(cmpImageFilePath).append("' '") .append(diffImageName).append("'");
        return SystemUtil.runProcessAndWait(compareExec, currCompareParams.toString());
    }
    
}



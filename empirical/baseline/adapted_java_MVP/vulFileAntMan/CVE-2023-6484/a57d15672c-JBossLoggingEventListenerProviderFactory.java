package org.keycloak.events.log;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import org.jboss.logging.Logger;
import org.keycloak.Config;
import org.keycloak.events.EventListenerProvider;
import org.keycloak.events.EventListenerProviderFactory;
import org.keycloak.models.KeycloakSession;
import org.keycloak.models.KeycloakSessionFactory;
import org.keycloak.provider.ProviderConfigProperty;
import org.keycloak.provider.ProviderConfigurationBuilder;
public class JBossLoggingEventListenerProviderFactory implements EventListenerProviderFactory {
    public static final String ID = "jboss-logging";
    private static final Logger logger = Logger.getLogger("org.keycloak.events");
    private Logger.Level successLevel;
    private Logger.Level errorLevel;
    public EventListenerProvider create(KeycloakSession session) {
        return new JBossLoggingEventListenerProvider(session, logger, successLevel, errorLevel);
    }
    
    public void init(Config.Scope config) {
        successLevel = Logger.Level.valueOf(config.get("success-level", "debug").toUpperCase());
        errorLevel = Logger.Level.valueOf(config.get("error-level", "warn").toUpperCase());
    }
    
    public void postInit(KeycloakSessionFactory factory) {
    }
    
    public void close() {
    }
    
    public String getId() {
        return ID;
    }
    
    public List<ProviderConfigProperty> getConfigMetadata() {
        String[] logLevels = Arrays.stream(Logger.Level.values()) .map(Logger.Level::name) .map(String::toLowerCase) .sorted(Comparator.naturalOrder()) .toArray(String[]::new);
        return ProviderConfigurationBuilder.create() .property() .name("success-level") .type("string") .helpText("The log level for success messages.") .options(logLevels) .defaultValue("debug") .add() .property() .name("error-level") .type("string") .helpText("The log level for error messages.") .options(logLevels) .defaultValue("warn") .add() .build();
    }
    
}



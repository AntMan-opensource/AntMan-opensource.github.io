package io.jenkins.plugins.bitbucketpushandpullrequest.action;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.Nonnull;
import hudson.model.InvisibleAction;
import io.jenkins.plugins.bitbucketpushandpullrequest.model.BitBucketPPRPayload;
public class BitBucketPPRPullRequestAction extends InvisibleAction implements BitBucketPPRAction {
  private final @Nonnull BitBucketPPRPayload payload;
  private List<String> scmUrls = new ArrayList<>(2);
  public BitBucketPPRPullRequestAction(@Nonnull BitBucketPPRPayload payload) {
    this.payload = payload;
    scmUrls.add(payload.getRepository().getLinks().getHtml().getHref());
  }
  
  public String getSourceBranch() {
    return payload.getPullRequest().getSource().getBranch().getName();
  }
  
  public String getTargetBranch() {
    return payload.getPullRequest().getDestination().getBranch().getName();
  }
  
  public String getLatestCommitFromRef() {
    return payload.getPullRequest().getSource().getCommit().getHash();
  }
  
  public String getLatestCommitToRef() {
    return payload.getPullRequest().getDestination().getCommit().getHash();
  }
  
  public String getPullRequestUrl() {
    return payload.getPullRequest().getLinks().getHtml().getHref();
  }
  
  public String getTitle() {
    return payload.getPullRequest().getTitle();
  }
  
  public String getDescription() {
    return payload.getPullRequest().getDescription();
  }
  
  public BitBucketPPRPayload getPayload() {
    return payload;
  }
  
  public String getScm() {
    return payload.getRepository().getScm() != null ? payload.getRepository().getScm() : "git";
  }
  
  public String getUser() {
    return payload.getActor().getNickname();
  }
  
  public String getRepositoryName() {
    return payload.getRepository().getName();
  }
  
  public List<String> getScmUrls() {
    return scmUrls;
  }
  
  public String getPullRequestId() {
    return payload.getPullRequest().getId();
  }
  
  public String getComment() {
    if (payload.getComment() == null || payload.getComment().getContent() == null || payload.getComment().getContent().getRaw() == null) {
      return "";
    }
    
    return payload.getComment().getContent().getRaw();
  }
  
  public String getLinkHtml() {
    return payload.getPullRequest().getLinks().getHtml().getHref();
  }
  
  public String getLinkSelf() {
    return payload.getPullRequest().getLinks().getSelf().getHref();
  }
  
  public String getLinkApprove() {
    return payload.getPullRequest().getLinks().getApprove().getHref();
  }
  
  public String getLinkDecline() {
    return payload.getPullRequest().getLinks().getDecline().getHref();
  }
  
  public String getLinkStatuses() {
    return payload.getPullRequest().getLinks().getStatuses().getHref();
  }
  
  public String getLatestCommit() {
    return payload.getPullRequest().getSource().getCommit().getHash();
  }
  
  public String getCommitLink() {
    return payload.getPullRequest().getSource().getCommit().getLinks().getSelf().getHref();
  }
  
  public String toString() {
    return "BitBucketPPRPullRequestAction";
  }
  
}



package net.mingsoft.cms.action.web;
import cn.hutool.core.util.ObjectUtil;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import net.mingsoft.base.entity.ResultData;
import net.mingsoft.basic.bean.EUListBean;
import net.mingsoft.basic.util.BasicUtil;
import net.mingsoft.cms.bean.ContentBean;
import net.mingsoft.cms.biz.IContentBiz;
import net.mingsoft.cms.biz.IHistoryLogBiz;
import net.mingsoft.cms.entity.ContentEntity;
import net.mingsoft.cms.entity.HistoryLogEntity;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import springfox.documentation.annotations.ApiIgnore;
import java.util.Date;
import java.util.List;
public class ContentAction extends net.mingsoft.cms.action.BaseAction{
	private IContentBiz contentBiz;
	private IHistoryLogBiz historyLogBiz;
	 @ApiOperation(value = "查询文章列表接口")
	@ApiImplicitParams({ @ApiImplicitParam(name = "contentTitle", value = "文章标题", required =false,paramType="query"), @ApiImplicitParam(name = "categoryId", value = "所属栏目", required =false,paramType="query"), @ApiImplicitParam(name = "contentType", value = "文章类型", required =false,paramType="query"), @ApiImplicitParam(name = "contentDisplay", value = "是否显示", required =false,paramType="query"), @ApiImplicitParam(name = "contentAuthor", value = "文章作者", required =false,paramType="query"), @ApiImplicitParam(name = "contentSource", value = "文章来源", required =false,paramType="query"), @ApiImplicitParam(name = "contentDatetime", value = "发布时间", required =false,paramType="query"), })
	public ResultData list(@ModelAttribute @ApiIgnore ContentBean content) {
		BasicUtil.startPage();
		List contentList = contentBiz.query(content);
		return ResultData.build().success(new EUListBean(contentList,(int)BasicUtil.endPage(contentList).getTotal()));
	}
	
	 @ApiOperation(value = "获取文章列表接口")
    @ApiImplicitParam(name = "id", value = "编号", required =true,paramType="query")
	public ResultData get(@ModelAttribute @ApiIgnore ContentEntity content){
		if(content.getId()==null) {
			return ResultData.build().error();
		}
		
		ContentEntity _content = (ContentEntity)contentBiz.getById(content.getId());;
		return ResultData.build().success(_content);
	}
	
	 @ApiOperation(value = "查看文章点击数")
	@ApiImplicitParam(name = "contentId", value = "文章编号", required = true,paramType="path")
	@GetMapping(value = "/{contentId}/hit")
	public String hit(@PathVariable @ApiIgnore String contentId) {
		if(StringUtils.isEmpty(contentId)){
			return "document.write(0)";
		}
		
	 	 String ip = BasicUtil.getIp();
		 boolean isMobileDevice = BasicUtil.isMobileDevice();
		ContentEntity content = contentBiz.getById(contentId);
		if(content == null){
			return "document.write(0)";
		}
		
	 	 if(ObjectUtil.isNotEmpty(content.getContentHit())){
			content.setContentHit(content.getContentHit()+1);
		}
		else {
			content.setContentHit(1);
		}
		
		contentBiz.updateById(content);
		 HistoryLogEntity entity = new HistoryLogEntity();
		entity.setHlIsMobile(isMobileDevice);
		entity.setHlIp(ip);
		entity.setContentId(content.getId());
		entity.setCreateDate(new Date());
		historyLogBiz.saveEntity(entity);
		return "document.write(" + content.getContentHit() + ")";
	}
	
}



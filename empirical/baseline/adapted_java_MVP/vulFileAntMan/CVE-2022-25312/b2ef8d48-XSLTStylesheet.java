package org.apache.any23.extractor.rdfa;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.w3c.dom.Document;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;
import java.io.InputStream;
import java.io.Writer;
import java.util.HashMap;
import java.util.Map;
public class XSLTStylesheet {
    private final static Logger log = LoggerFactory.getLogger(XSLTStylesheet.class);
    private final Transformer transformer;
    public XSLTStylesheet(InputStream xsltFile) {
        try {
            transformer = TransformerFactory.newInstance().newTransformer(new StreamSource(xsltFile));
        }
         catch (TransformerConfigurationException e) {
            throw new RuntimeException("Should not happen, we use the default configuration", e);
        }
        
    }
    
    public synchronized void applyTo(Document document, Writer output) throws XSLTStylesheetException {
        this.applyTo(document, output, new HashMap<String, String>());
    }
    
    public synchronized void applyTo(Document document, Writer output, Map<String, String> parameters) throws XSLTStylesheetException {
        for (String parameterKey : parameters.keySet()) {
            transformer.setParameter(parameterKey, parameters.get(parameterKey));
        }
        
        try {
            transformer.transform(new DOMSource(document, document.getBaseURI()), new StreamResult(output));
        }
         catch (TransformerException te) {
            log.error("------ BEGIN XSLT Transformer Exception ------");
            log.error("Exception in XSLT Stylesheet transformation.", te);
            log.error("Input DOM node:", document);
            log.error("Input DOM node getBaseIRI:", document.getBaseURI());
            log.error("Output writer:", output);
            log.error("------ END XSLT Transformer Exception ------");
            throw new XSLTStylesheetException(" An error occurred during the XSLT transformation", te);
        }
        
    }
    
}


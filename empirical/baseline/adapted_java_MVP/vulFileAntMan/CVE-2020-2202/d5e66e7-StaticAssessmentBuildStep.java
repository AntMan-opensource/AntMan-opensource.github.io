package org.jenkinsci.plugins.fodupload;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import hudson.Extension;
import hudson.FilePath;
import hudson.Launcher;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.model.BuildListener;
import hudson.model.Run;
import hudson.model.TaskListener;
import hudson.security.Permission;
import hudson.tasks.BuildStepDescriptor;
import hudson.tasks.BuildStepMonitor;
import hudson.tasks.Publisher;
import hudson.tasks.Recorder;
import hudson.util.FormValidation;
import hudson.util.ListBoxModel;
import hudson.util.Secret;
import jenkins.tasks.SimpleBuildStep;
import org.jenkinsci.plugins.fodupload.models.JobModel;
import org.kohsuke.stapler.DataBoundConstructor;
import javax.annotation.Nonnull;
import java.io.File;
import java.io.IOException;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.net.URISyntaxException;
import jenkins.model.Jenkins;
import org.jenkinsci.plugins.fodupload.models.AuthenticationModel;
import org.kohsuke.stapler.QueryParameter;
import org.kohsuke.stapler.verb.POST;
public class StaticAssessmentBuildStep extends Recorder implements SimpleBuildStep {
    SharedUploadBuildStep sharedBuildStep;
    public StaticAssessmentBuildStep(String releaseId, String bsiToken, boolean overrideGlobalConfig, String username, String personalAccessToken, String tenantId, boolean purchaseEntitlements, String entitlementPreference, String srcLocation, String remediationScanPreferenceType, String inProgressScanActionType) {
        sharedBuildStep = new SharedUploadBuildStep(releaseId, bsiToken, overrideGlobalConfig, username, personalAccessToken, tenantId, purchaseEntitlements, entitlementPreference, srcLocation, remediationScanPreferenceType, inProgressScanActionType);
    }
    
    public boolean prebuild(AbstractBuild<?, ?> build, BuildListener listener) {
        return sharedBuildStep.prebuild(build, listener);
    }
    
    public void perform(@Nonnull Run<?, ?> build, @Nonnull FilePath workspace, @Nonnull Launcher launcher, @Nonnull TaskListener listener) {
        sharedBuildStep.perform(build, workspace, launcher, listener);
    }
    
    public StaticAssessmentStepDescriptor getDescriptor() {
        return (StaticAssessmentStepDescriptor) super.getDescriptor();
    }
    
    public BuildStepMonitor getRequiredMonitorService() {
        return BuildStepMonitor.NONE;
    }
    
    public String getReleaseId() {
        return sharedBuildStep.getModel().getReleaseId();
    }
    
    public String getBsiToken() {
        return sharedBuildStep.getModel().getBsiTokenOriginal();
    }
    
    public String getUsername() {
        return sharedBuildStep.getAuthModel().getUsername();
    }
    
    public String getPersonalAccessToken() {
        return sharedBuildStep.getAuthModel().getPersonalAccessToken();
    }
    
    public String getTenantId() {
        return sharedBuildStep.getAuthModel().getTenantId();
    }
    
    public boolean getOverrideGlobalConfig() {
        return sharedBuildStep.getAuthModel().getOverrideGlobalConfig();
    }
    
    public String getEntitlementPreference() {
        return sharedBuildStep.getModel().getEntitlementPreference();
    }
    
    public boolean getPurchaseEntitlements() {
        return sharedBuildStep.getModel().isPurchaseEntitlements();
    }
    
    public String getSrcLocation() {
        return sharedBuildStep.getModel().getSrcLocation();
    }
    
    public String getRemediationScanPreferenceType() {
        return sharedBuildStep.getModel().getRemediationScanPreferenceType();
    }
    
    public String getInProgressScanActionType() {
        return sharedBuildStep.getModel().getInProgressScanActionType();
    }
    
    public static final class StaticAssessmentStepDescriptor extends BuildStepDescriptor<Publisher> {
        public StaticAssessmentStepDescriptor() {
            super();
            load();
        }
        
        public boolean isApplicable(Class<? extends AbstractProject> aClass) {
            return true;
        }
        
        public FormValidation doCheckReleaseId(@QueryParameter String releaseId, @QueryParameter String bsiToken) {
            Jenkins.get().checkPermission(Jenkins.ADMINISTER);
            return SharedUploadBuildStep.doCheckReleaseId(releaseId, bsiToken);
        }
        
        public FormValidation doCheckBsiToken(@QueryParameter String bsiToken, @QueryParameter String releaseId) {
            Jenkins.get().checkPermission(Jenkins.ADMINISTER);
            return SharedUploadBuildStep.doCheckBsiToken(bsiToken, releaseId);
        }
        
        public String getDisplayName() {
            return "Fortify on Demand Static Assessment";
        }
        
        @SuppressWarnings({"ThrowableResultOfMethodCallIgnored", "unused"})
        public FormValidation doTestPersonalAccessTokenConnection(@QueryParameter(SharedUploadBuildStep.USERNAME) final String username, @QueryParameter(SharedUploadBuildStep.PERSONAL_ACCESS_TOKEN) final String personalAccessToken, @QueryParameter(SharedUploadBuildStep.TENANT_ID) final String tenantId) {
            Jenkins.get().checkPermission(Jenkins.ADMINISTER);
            return SharedUploadBuildStep.doTestPersonalAccessTokenConnection(username, personalAccessToken, tenantId);
        }
        
        public ListBoxModel doFillEntitlementPreferenceItems() {
            return SharedUploadBuildStep.doFillEntitlementPreferenceItems();
        }
        
        public ListBoxModel doFillRemediationScanPreferenceTypeItems() {
            return SharedUploadBuildStep.doFillRemediationScanPreferenceTypeItems();
        }
        
        public ListBoxModel doFillUsernameItems() {
            return SharedUploadBuildStep.doFillStringCredentialsItems();
        }
        
        public ListBoxModel doFillPersonalAccessTokenItems() {
            return SharedUploadBuildStep.doFillStringCredentialsItems();
        }
        
        public ListBoxModel doFillTenantIdItems() {
            return SharedUploadBuildStep.doFillStringCredentialsItems();
        }
        
        public ListBoxModel doFillInProgressScanActionTypeItems() {
            return SharedUploadBuildStep.doFillInProgressScanActionTypeItems();
        }
        
    }
    
}



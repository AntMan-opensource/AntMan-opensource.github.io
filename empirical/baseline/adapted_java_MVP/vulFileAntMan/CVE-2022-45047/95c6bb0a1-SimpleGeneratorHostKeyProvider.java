package org.apache.sshd.server.keyprovider;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.nio.file.Path;
import java.security.GeneralSecurityException;
import java.security.KeyPair;
import java.security.spec.InvalidKeySpecException;
import java.util.Collections;
import org.apache.sshd.common.NamedResource;
import org.apache.sshd.common.session.SessionContext;
public class SimpleGeneratorHostKeyProvider extends AbstractGeneratorHostKeyProvider {
    public SimpleGeneratorHostKeyProvider() {
        super();
    }
    
    public SimpleGeneratorHostKeyProvider(Path path) {
        setPath(path);
    }
    
    protected Iterable<KeyPair> doReadKeyPairs(SessionContext session, NamedResource resourceKey, InputStream inputStream) throws IOException, GeneralSecurityException {
        KeyPair kp;
        try (ObjectInputStream r = new ObjectInputStream(inputStream)) {
            try {
                kp = (KeyPair) r.readObject();
            }
             catch (ClassNotFoundException e) {
                throw new InvalidKeySpecException("Missing classes: " + e.getMessage(), e);
            }
            
        }
        
        return Collections.singletonList(kp);
    }
    
    protected void doWriteKeyPair(NamedResource resourceKey, KeyPair kp, OutputStream outputStream) throws IOException, GeneralSecurityException {
        try (ObjectOutputStream w = new ObjectOutputStream(outputStream)) {
            w.writeObject(kp);
        }
        
    }
    
}



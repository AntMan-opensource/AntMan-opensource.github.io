package org.apache.inlong.manager.web.controller;
import org.apache.inlong.manager.pojo.audit.AuditRequest;
import org.apache.inlong.manager.pojo.audit.AuditSourceRequest;
import org.apache.inlong.manager.pojo.audit.AuditSourceResponse;
import org.apache.inlong.manager.pojo.audit.AuditVO;
import org.apache.inlong.manager.pojo.common.Response;
import org.apache.inlong.manager.pojo.user.LoginUserUtils;
import org.apache.inlong.manager.service.core.AuditService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import javax.validation.Valid;
import java.util.List;
@Api(tags = "Audit-API")
public class AuditController {
    private AuditService auditService;
    @PostMapping(value = "/audit/list")
    @ApiOperation(value = "Query audit list according to conditions")
    public Response<List<AuditVO>> listByCondition(@Valid @RequestBody AuditRequest request) throws Exception {
        return Response.success(auditService.listByCondition(request));
    }
    
    @ApiOperation(value = "Refresh audit base item cache")
    public Response<Boolean> refreshCache() {
        return Response.success(auditService.refreshBaseItemCache());
    }
    
    @ApiOperation(value = "Update the audit source")
    @PostMapping(value = "/audit/updateSource")
    public Response<Integer> updateAuditSource(@RequestBody AuditSourceRequest request) {
        return Response.success(auditService.updateAuditSource(request, LoginUserUtils.getLoginUser().getName()));
    }
    
    @ApiOperation(value = "Get the audit source")
    public Response<AuditSourceResponse> getAuditSource() {
        return Response.success(auditService.getAuditSource());
    }
    
}



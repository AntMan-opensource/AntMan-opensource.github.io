package com.cloudbees.jenkins.plugins.bitbucket.api;
import com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketCloudEndpoint;
import com.cloudbees.plugins.credentials.common.StandardCredentials;
import jenkins.authentication.tokens.api.AuthenticationTokenContext;
import org.apache.http.HttpHost;
import org.apache.http.HttpRequest;
import org.apache.http.client.protocol.HttpClientContext;
import org.apache.http.impl.client.HttpClientBuilder;
public abstract class BitbucketAuthenticator {
    private final String id;
    public static final String SERVER_URL = "bitbucket.server.uri";
    public static final String SCHEME = "bitbucket.server.uri.scheme";
    public static final String BITBUCKET_INSTANCE_TYPE = "bitbucket.server.type";
    public static final String BITBUCKET_INSTANCE_TYPE_CLOUD = "BITBUCKET_CLOUD";
    public static final String BITBUCKET_INSTANCE_TYPE_SERVER = "BITBUCKET_SERVER";
    public BitbucketAuthenticator(StandardCredentials credentials) {
        id = credentials.getId();
    }
    
    public String getId() {
        return id;
    }
    
    public void configureBuilder(HttpClientBuilder builder) {
    }
    
    public void configureContext(HttpClientContext context, HttpHost host) {
    }
    
    public void configureRequest(HttpRequest request) {
    }
    
    public BitbucketHref addAuthToken(BitbucketHref bitbucketHref) {
        return bitbucketHref;
    }
    
    public static AuthenticationTokenContext<BitbucketAuthenticator> authenticationContext(String serverUrl) {
        if (serverUrl == null) {
            serverUrl = BitbucketCloudEndpoint.SERVER_URL;
        }
        
        String scheme = serverUrl.split(":")[0].toLowerCase();
        boolean isCloud = serverUrl.equals(BitbucketCloudEndpoint.SERVER_URL);
        return AuthenticationTokenContext.builder(BitbucketAuthenticator.class) .with(SERVER_URL, serverUrl) .with(SCHEME, scheme) .with(BITBUCKET_INSTANCE_TYPE, isCloud ? BITBUCKET_INSTANCE_TYPE_CLOUD : BITBUCKET_INSTANCE_TYPE_SERVER) .build();
    }
    
}



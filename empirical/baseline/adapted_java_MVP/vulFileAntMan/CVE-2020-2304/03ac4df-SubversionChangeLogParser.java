package hudson.scm;
import hudson.model.Run;
import hudson.scm.SubversionChangeLogSet.LogEntry;
import hudson.scm.SubversionChangeLogSet.Path;
import hudson.util.Digester2;
import org.apache.commons.digester.Digester;
import org.xml.sax.SAXException;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
public class SubversionChangeLogParser extends ChangeLogParser {
    private boolean ignoreDirPropChanges;
    public SubversionChangeLogParser() {
      this(false);
    }
    
    public SubversionChangeLogParser(boolean ignoreDirPropChanges) {
      this.ignoreDirPropChanges = ignoreDirPropChanges;
    }
    
 public SubversionChangeLogSet parse(@SuppressWarnings("rawtypes") Run build, RepositoryBrowser<?> browser, File changelogFile) throws IOException, SAXException {
        Digester digester = new Digester2();
        ArrayList<LogEntry> r = new ArrayList<>();
        digester.push(r);
        digester.addObjectCreate("*/logentry", LogEntry.class);
        digester.addSetProperties("*/logentry");
        digester.addBeanPropertySetter("*/logentry/author","user");
        digester.addBeanPropertySetter("*/logentry/date");
        digester.addBeanPropertySetter("*/logentry/msg");
        digester.addSetNext("*/logentry","add");
        digester.addObjectCreate("*/logentry/paths/path", Path.class);
        digester.addSetProperties("*/logentry/paths/path");
        digester.addBeanPropertySetter("*/logentry/paths/path","value");
        digester.addSetNext("*/logentry/paths/path","addPath");
        try {
            digester.parse(changelogFile);
        }
         catch (IOException | SAXException e) {
            throw new IOException("Failed to parse " + changelogFile,e);
        }
        
        for (LogEntry e : r) {
            e.finish();
        }
        
        return new SubversionChangeLogSet(build, browser, r, ignoreDirPropChanges);
    }
    
}



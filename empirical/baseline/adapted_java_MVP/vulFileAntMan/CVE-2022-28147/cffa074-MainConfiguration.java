package ci.with.toad.edge;
import java.io.File;
import org.jvnet.localizer.Localizable;
import org.jvnet.localizer.ResourceBundleHolder;
import org.kohsuke.stapler.QueryParameter;
import org.kohsuke.stapler.StaplerRequest;
import hudson.Extension;
import hudson.util.FormValidation;
import jenkins.model.GlobalConfiguration;
import net.sf.json.JSONObject;
public class MainConfiguration extends GlobalConfiguration {
	public MainConfiguration() {
		load();
	}
	
	 private String libs;
	 public String getDisplayName() {
		return "Continuous Integration with Toad Edge";
	}
	
	public boolean configure(StaplerRequest req, JSONObject formData) throws FormException {
		libs = formData.getString("libs");
		 save();
		 return super.configure(req, formData);
	}
	
	 public String getLibs() {
		return libs;
	}
	
	 public FormValidation doCheckLibs(@QueryParameter String value) {
		FormValidation emptyValidation = FormValidationUtil.doCheckEmptyValue(value, new Localizable(ResourceBundleHolder.get(MainConfiguration.class), "LibrariesFolder").toString());
		if (emptyValidation != FormValidation.ok()) {
			return emptyValidation;
		}
		
		File file = new File(value);
		if (!file.exists()) {
			return FormValidation.error(new Localizable(ResourceBundleHolder.get(MainConfiguration.class), "FileNonExistent").toString());
		}
		
		 if (!value.endsWith(".zip")) {
			return FormValidation.error(new Localizable(ResourceBundleHolder.get(MainConfiguration.class), "ExpectingZippedLibs").toString());
		}
		
		 return FormValidation.ok();
	}
	
	 public FormValidation doCheckLicense(@QueryParameter String value) {
		FormValidation emptyValidation = FormValidationUtil.doCheckEmptyValue(value, new Localizable(ResourceBundleHolder.get(MainConfiguration.class), "LicenseKey").toString());
		if (emptyValidation != FormValidation.ok()) {
			return emptyValidation;
		}
		
		 return FormValidation.ok();
	}
	
}



package org.apache.ignite.internal.cluster;
import java.io.Serializable;
import java.util.Objects;
import org.apache.ignite.IgniteCheckedException;
import org.apache.ignite.IgniteLogger;
import org.apache.ignite.internal.GridKernalContext;
import org.apache.ignite.internal.IgniteInternalFuture;
import org.apache.ignite.internal.processors.configuration.distributed.DistributePropertyListener;
import org.apache.ignite.internal.processors.configuration.distributed.DistributedChangeableProperty;
import org.apache.ignite.internal.processors.configuration.distributed.DistributedConfigurationLifecycleListener;
import org.apache.ignite.internal.processors.configuration.distributed.DistributedProperty;
import org.apache.ignite.internal.processors.configuration.distributed.DistributedPropertyDispatcher;
import org.apache.ignite.internal.processors.subscription.GridInternalSubscriptionProcessor;
import org.apache.ignite.internal.util.future.GridFutureAdapter;
import org.apache.ignite.internal.util.typedef.internal.CU;
import org.apache.ignite.lang.IgniteInClosure;
import org.jetbrains.annotations.NotNull;
import static java.lang.String.format;
import static org.apache.ignite.internal.processors.configuration.distributed.DistributedBooleanProperty.detachedBooleanProperty;
import static org.apache.ignite.internal.processors.configuration.distributed.DistributedLongProperty.detachedLongProperty;
public class DistributedBaselineConfiguration {
    private static final int DEFAULT_PERSISTENCE_TIMEOUT = 5 * 60_000;
    private static final int DEFAULT_IN_MEMORY_TIMEOUT = 0;
    private static final String AUTO_ADJUST_CONFIGURED_MESSAGE = "Baseline auto-adjust is '%s' with timeout='%d' ms";
    private static final String PROPERTY_UPDATE_MESSAGE = "Baseline parameter '%s' was changed from '%s' to '%s'";
    private volatile long dfltTimeout;
    private volatile boolean dfltEnabled;
    private final IgniteLogger log;
    private final DistributedChangeableProperty<Boolean> baselineAutoAdjustEnabled = detachedBooleanProperty("baselineAutoAdjustEnabled");
    private final DistributedChangeableProperty<Long> baselineAutoAdjustTimeout = detachedLongProperty("baselineAutoAdjustTimeout");
    public DistributedBaselineConfiguration( GridInternalSubscriptionProcessor isp, GridKernalContext ctx, IgniteLogger log) {
        this.log = log;
        boolean persistenceEnabled = ctx.config() != null && CU.isPersistenceEnabled(ctx.config());
        dfltTimeout = persistenceEnabled ? DEFAULT_PERSISTENCE_TIMEOUT : DEFAULT_IN_MEMORY_TIMEOUT;
        dfltEnabled = !persistenceEnabled;
        isp.registerDistributedConfigurationListener( new DistributedConfigurationLifecycleListener() {
 public void onReadyToRegister(DistributedPropertyDispatcher dispatcher) {
                    baselineAutoAdjustEnabled.addListener(makeUpdateListener());
                    baselineAutoAdjustTimeout.addListener(makeUpdateListener());
                    dispatcher.registerProperties(baselineAutoAdjustEnabled, baselineAutoAdjustTimeout);
                }
                
 public void onReadyToWrite() {
                    setDefaultValue(baselineAutoAdjustEnabled, dfltEnabled, log);
                    setDefaultValue(baselineAutoAdjustTimeout, dfltTimeout, log);
                }
                
            }
             );
    }
    
    private <T extends Serializable> void setDefaultValue(DistributedProperty<T> property, T value, IgniteLogger log) {
        if (property.get() == null) {
            try {
                property.propagateAsync(null, value) .listen((IgniteInClosure<IgniteInternalFuture<?>>)future -> {
                        if (future.error() != null){
                            log.error("Cannot set default value of '" + property.getName() + '\'', future.error());
}
                    }
                    
);
            }
            
            catch (IgniteCheckedException e) {
                log.error("Cannot initiate setting default value of '" + property.getName() + '\'', e);
            }
            
        }
        
    }
    
    @NotNull private <T> DistributePropertyListener<T> makeUpdateListener() { return (name, oldVal, newVal) -> { if (!Objects.equals(oldVal, newVal))
                log.info(format(PROPERTY_UPDATE_MESSAGE, name, oldVal, newVal));
        };
    }
    
    public void onActivate() throws IgniteCheckedException {
        if (log.isInfoEnabled()){
            log.info(format(AUTO_ADJUST_CONFIGURED_MESSAGE, (isBaselineAutoAdjustEnabled() ? "enabled" : "disabled"), getBaselineAutoAdjustTimeout() ));
}
    }
    
    public boolean isBaselineAutoAdjustEnabled() {
        return baselineAutoAdjustEnabled.getOrDefault(dfltEnabled);
    }
    
    public GridFutureAdapter<?> updateBaselineAutoAdjustEnabledAsync(boolean baselineAutoAdjustEnabled) throws IgniteCheckedException {
        return this.baselineAutoAdjustEnabled.propagateAsync(!baselineAutoAdjustEnabled, baselineAutoAdjustEnabled);
    }
    
    public long getBaselineAutoAdjustTimeout() {
        return baselineAutoAdjustTimeout.getOrDefault(dfltTimeout);
    }
    
    public GridFutureAdapter<?> updateBaselineAutoAdjustTimeoutAsync( long baselineAutoAdjustTimeout) throws IgniteCheckedException {
        return this.baselineAutoAdjustTimeout.propagateAsync(baselineAutoAdjustTimeout);
    }
    
}



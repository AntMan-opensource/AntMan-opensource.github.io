package net.sf.mpxj.common;
import java.io.File;
import java.io.IOException;
public final class FileHelper {
   public static final void delete(File file) throws IOException {
      if (file != null){
         if (!file.delete()){
            throw new IOException("Failed to delete file");
         }
         
      }
      
   }
   
   public static final void deleteQuietly(File file) {
      if (file != null){
         if (file.isDirectory()){
            File[] children = file.listFiles();
            if (children != null){
               for (File child : children){
                  deleteQuietly(child);
               }
               
            }
            
         }
         
         file.delete();
      }
      
   }
   
   public static final void mkdirs(File file) throws IOException {
      if (file != null){
         if (!file.mkdirs()){
            throw new IOException("Failed to create directories");
         }
         
      }
      
   }
   
   public static final void mkdirsQuietly(File file) {
      if (file != null){
         file.mkdirs();
      }
      
   }
   
   public static final File createTempDir() throws IOException {
      File dir = File.createTempFile("mpxj", "tmp");
      delete(dir);
      mkdirs(dir);
      return dir;
   }
   
   public static final void createNewFile(File file) throws IOException {
      if (!file.createNewFile()){
         throw new IOException("Failed to create new file");
      }
      
   }
   
}



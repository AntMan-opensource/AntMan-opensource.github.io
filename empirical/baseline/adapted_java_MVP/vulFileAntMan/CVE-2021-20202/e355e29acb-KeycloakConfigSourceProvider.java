package org.keycloak.configuration;
import static org.keycloak.configuration.MicroProfileConfigProvider.NS_KEYCLOAK_PREFIX;
import java.io.File;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import org.eclipse.microprofile.config.spi.ConfigSource;
import org.eclipse.microprofile.config.spi.ConfigSourceProvider;
import org.jboss.logging.Logger;
import org.keycloak.util.Environment;
public class KeycloakConfigSourceProvider implements ConfigSourceProvider {
    private static final Logger log = Logger.getLogger(KeycloakConfigSourceProvider.class);
    public static final String KEYCLOAK_CONFIG_FILE_ENV = "KC_CONFIG_FILE";
    public static final String KEYCLOAK_CONFIG_FILE_PROP = NS_KEYCLOAK_PREFIX + "config.file";
    private static final List<ConfigSource> CONFIG_SOURCES = new ArrayList<>();
    public static PersistedConfigSource PERSISTED_CONFIG_SOURCE;
    static {
        initializeSources();
    }
    
    private static void initializeSources() {
        String profile = Environment.getProfile();
        if (profile != null) {
            System.setProperty("quarkus.profile", profile);
        }
        
        CONFIG_SOURCES.add(new ConfigArgsConfigSource());
        PERSISTED_CONFIG_SOURCE = new PersistedConfigSource(getPersistedConfigFile());
        CONFIG_SOURCES.add(PERSISTED_CONFIG_SOURCE);
        CONFIG_SOURCES.add(new SysPropConfigSource());
        Path configFile = getConfigurationFile();
        if (configFile != null) {
            CONFIG_SOURCES.add(new KeycloakPropertiesConfigSource.InFileSystem(configFile));
        }
         else {
            log.debug("Loading the default server configuration");
            CONFIG_SOURCES.add(new KeycloakPropertiesConfigSource.InJar());
        }
        
    }
    
    public static void reload() {
        CONFIG_SOURCES.clear();
        initializeSources();
    }
    
    private static Path getConfigurationFile() {
        String filePath = System.getProperty(KEYCLOAK_CONFIG_FILE_PROP);
        if (filePath == null){
            filePath = System.getenv(KEYCLOAK_CONFIG_FILE_ENV);
}
        if (filePath == null) {
            String homeDir = Environment.getHomeDir();
            if (homeDir != null) {
                File file = Paths.get(homeDir, "conf", KeycloakPropertiesConfigSource.KEYCLOAK_PROPERTIES).toFile();
                if (file.exists()) {
                    filePath = file.getAbsolutePath();
                }
                
            }
            
        }
        
        if (filePath == null) {
            return null;
        }
        
        return Paths.get(filePath);
    }
    
    public static Path getPersistedConfigFile() {
        String homeDir = Environment.getHomeDir();
        if (homeDir == null) {
            return Paths.get(System.getProperty("java.io.tmpdir"), PersistedConfigSource.KEYCLOAK_PROPERTIES);
        }
        
        return Paths.get(homeDir, "conf", PersistedConfigSource.KEYCLOAK_PROPERTIES);
    }
    
    public Iterable<ConfigSource> getConfigSources(ClassLoader forClassLoader) {
        return CONFIG_SOURCES;
    }
    
}



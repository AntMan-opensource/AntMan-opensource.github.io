package hudson.plugins.jacoco.report;
import hudson.model.ModelObject;
import hudson.model.Run;
import hudson.plugins.jacoco.model.CoverageElement;
import hudson.plugins.jacoco.model.CoverageObject;
import java.io.IOException;
public abstract class AbstractReport<PARENT extends AggregatedReport<?,PARENT,?>, SELF extends CoverageObject<SELF>> extends CoverageObject<SELF> implements ModelObject {
    private String name;
    private PARENT parent;
    public void addCoverage(CoverageElement cv) throws IOException {
        cv.addTo(this);
    }
    
    public String getName() {
        return name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    public String getDisplayName() {
        return getName();
    }
    
    protected void setParent(PARENT p) {
        this.parent = p;
    }
    
    public PARENT getParent() {
        return parent;
    }
    
    public SELF getPreviousResult() {
        PARENT p = parent;
        while(true) {
            p = p.getPreviousResult();
            if(p==null) return null;
            SELF prev = (SELF)p.getChildren().get(name);
            if(prev!=null) return prev;
        }
        
    }
    
    public Run<?,?> getBuild() {
    	return parent.getBuild();
    }
    
}



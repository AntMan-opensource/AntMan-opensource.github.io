package org.apache.inlong.manager.pojo.node.starrocks;
import org.apache.inlong.manager.common.enums.ErrorCodeEnum;
import org.apache.inlong.manager.common.exceptions.BusinessException;
import org.apache.inlong.manager.common.util.CommonBeanUtils;
import org.apache.inlong.manager.common.util.JsonUtils;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.apache.commons.lang3.StringUtils;
import javax.validation.constraints.NotNull;
@ApiModel("StarRocks data node info")
public class StarRocksDataNodeDTO {
    @ApiModelProperty("StarRocks FE http address")
    private String loadUrl;
    public static StarRocksDataNodeDTO getFromRequest(StarRocksDataNodeRequest request, String extParams) {
        StarRocksDataNodeDTO dto = StringUtils.isNotBlank(extParams) ? StarRocksDataNodeDTO.getFromJson(extParams) : new StarRocksDataNodeDTO();
        return CommonBeanUtils.copyProperties(request, dto, true);
    }
    
    public static StarRocksDataNodeDTO getFromJson(@NotNull String extParams) {
        try {
            return JsonUtils.parseObject(extParams, StarRocksDataNodeDTO.class);
        }
         catch (Exception e) {
            throw new BusinessException(ErrorCodeEnum.GROUP_INFO_INCORRECT, String.format("Failed to parse extParams for StarRocks node: %s", e.getMessage()));
        }
        
    }
    
}



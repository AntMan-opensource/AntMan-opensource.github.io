package com.codename1.impl.android;
import android.app.Activity;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.IBinder;
import com.codename1.push.PushCallback;
import com.codename1.ui.Display;
public abstract class PushNotificationService extends Service implements PushCallback {
    private java.util.Map<String,String> properties = new java.util.HashMap<String,String>();
    public IBinder onBind(Intent intent) {
        return null;
    }
    
    public void onCreate() {
    }
    
    private String getProperty(String propertyName, String defaultValue) {
        String val = properties.get(propertyName);
        if (val == null) {
            return defaultValue;
        }
        
        return val;
    }
    
    public void setProperty(String propertyName, String val) {
        properties.put(propertyName, val);
    }
    
    public static void startServiceIfRequired(Class service, Context ctx) {
        if(!AndroidImplementation.hasAndroidMarket(ctx)) {
            SharedPreferences sh = ctx.getSharedPreferences("C2DMNeeded", Context.MODE_PRIVATE);
            if(sh.getBoolean("C2DMNeeded", false)) {
                Intent i = new Intent();
                i.setAction(service.getClass().getName());
                ctx.startService(i);
            }
            
        }
        
    }
    
    public static void forceStartService(String service, Context ctx) {
        if(!AndroidImplementation.hasAndroidMarket(ctx)) {
            SharedPreferences sh = ctx.getSharedPreferences("C2DMNeeded", Context.MODE_PRIVATE);
            Editor editor = sh.edit();
            editor.putBoolean("C2DMNeeded", true);
            editor.commit();
            Intent i = new Intent();
            i.setAction(service);
            ctx.startService(i);
        }
        
    }
    
    public int onStartCommand(Intent intent, int flags, int startId) {
        AndroidImplementation.registerPolling();
        return START_STICKY;
    }
    
    public void onDestroy() {
        AndroidImplementation.stopPollingLoop();
    }
    
    public abstract PushCallback getPushCallbackInstance();
    public abstract Class getStubClass();
    public void push(final String value) {
        final PushCallback callback = getPushCallbackInstance();
        if(callback != null) {
            Display.getInstance().callSerially(new Runnable() {
                public void run() {
                    callback.push(value);
                }
                
            }
            
);
        }
         else {
            NotificationManager nm = (NotificationManager)getSystemService(NOTIFICATION_SERVICE);
            Intent newIntent = new Intent(this, getStubClass());
            PendingIntent contentIntent = PendingIntent.getActivity(this, 0, newIntent, PendingIntent.FLAG_CANCEL_CURRENT);
            Notification.Builder builder = new Notification.Builder(this) .setContentIntent(contentIntent) .setSmallIcon(android.R.drawable.stat_notify_sync) .setTicker(value) .setAutoCancel(true) .setWhen(System.currentTimeMillis()) .setContentTitle(value) .setDefaults(Notification.DEFAULT_ALL);
            Notification notif = builder.build();
            int notifId = getNotifyId();
            nm.notify(notifId, notif);
        }
        
    }
    
    static int getNotifyId() {
        return 1;
    }
    
    static void cancelNotification(Context context) {
        NotificationManager nm = (NotificationManager) context.getSystemService(Activity.NOTIFICATION_SERVICE);
        nm.cancel(getNotifyId());
    }
    
    public void registeredForPush(String deviceId) {
    }
    
    public void pushRegistrationError(String error, int errorCode) {
    }
    
}



package com.baomidou.mybatisplus.core.conditions.interfaces;
import java.io.Serializable;
import java.util.Collection;
import java.util.function.Consumer;
public interface Func<Children, R> extends Serializable {
    default Children isNull(R column) {
        return isNull(true, column);
    }
    
    Children isNull(boolean condition, R column);
    default Children isNotNull(R column) {
        return isNotNull(true, column);
    }
    
    Children isNotNull(boolean condition, R column);
    default Children in(R column, Collection<?> coll) {
        return in(true, column, coll);
    }
    
    Children in(boolean condition, R column, Collection<?> coll);
    default Children in(R column, Object... values) {
        return in(true, column, values);
    }
    
    Children in(boolean condition, R column, Object... values);
    default Children notIn(R column, Collection<?> coll) {
        return notIn(true, column, coll);
    }
    
    Children notIn(boolean condition, R column, Collection<?> coll);
    default Children notIn(R column, Object... value) {
        return notIn(true, column, value);
    }
    
    Children notIn(boolean condition, R column, Object... values);
    default Children inSql(R column, String inValue) {
        return inSql(true, column, inValue);
    }
    
    Children inSql(boolean condition, R column, String inValue);
    default Children notInSql(R column, String inValue) {
        return notInSql(true, column, inValue);
    }
    
    Children notInSql(boolean condition, R column, String inValue);
    default Children groupBy(R column, R... columns) {
        return groupBy(true, column, columns);
    }
    
    Children groupBy(boolean condition, R column, R... columns);
    default Children orderByAsc(R column, R... columns) {
        return orderByAsc(true, column, columns);
    }
    
    default Children orderByAsc(boolean condition, R column, R... columns) {
        return orderBy(condition, true, column, columns);
    }
    
    default Children orderByDesc(R column, R... columns) {
        return orderByDesc(true, column, columns);
    }
    
    default Children orderByDesc(boolean condition, R column, R... columns) {
        return orderBy(condition, false, column, columns);
    }
    
    Children orderBy(boolean condition, boolean isAsc, R column, R... columns);
    default Children having(String sqlHaving, Object... params) {
        return having(true, sqlHaving, params);
    }
    
    Children having(boolean condition, String sqlHaving, Object... params);
    default Children func(Consumer<Children> consumer) {
        return func(true, consumer);
    }
    
    Children func(boolean condition, Consumer<Children> consumer);
}



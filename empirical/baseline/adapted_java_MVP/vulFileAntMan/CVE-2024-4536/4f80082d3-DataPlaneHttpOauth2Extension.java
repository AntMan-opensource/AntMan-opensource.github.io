package org.eclipse.edc.connector.dataplane.http.oauth2;
import org.eclipse.edc.connector.dataplane.http.spi.HttpRequestParamsProvider;
import org.eclipse.edc.iam.oauth2.spi.client.Oauth2Client;
import org.eclipse.edc.keys.spi.PrivateKeyResolver;
import org.eclipse.edc.runtime.metamodel.annotation.Extension;
import org.eclipse.edc.runtime.metamodel.annotation.Inject;
import org.eclipse.edc.spi.security.Vault;
import org.eclipse.edc.spi.system.ServiceExtension;
import org.eclipse.edc.spi.system.ServiceExtensionContext;
import java.time.Clock;
@Extension(value = DataPlaneHttpOauth2Extension.NAME)
public class DataPlaneHttpOauth2Extension implements ServiceExtension {
    public static final String NAME = "Data Plane HTTP OAuth2";
    private Clock clock;
    private HttpRequestParamsProvider paramsProvider;
    private Vault vault;
    private PrivateKeyResolver privateKeyResolver;
    private Oauth2Client oauth2Client;
    public String name() {
        return NAME;
    }
    
    public void initialize(ServiceExtensionContext context) {
        var requestFactory = new Oauth2CredentialsRequestFactory(privateKeyResolver, clock, vault, context.getMonitor());
        var oauth2ParamsDecorator = new Oauth2HttpRequestParamsDecorator(requestFactory, oauth2Client);
        paramsProvider.registerSinkDecorator(oauth2ParamsDecorator);
        paramsProvider.registerSourceDecorator(oauth2ParamsDecorator);
    }
    
}



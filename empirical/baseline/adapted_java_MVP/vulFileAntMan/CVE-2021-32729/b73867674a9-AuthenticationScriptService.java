package org.xwiki.security.authentication.script;
import java.util.Collections;
import java.util.Set;
import javax.inject.Inject;
import javax.inject.Named;
import javax.inject.Provider;
import javax.inject.Singleton;
import org.slf4j.Logger;
import org.xwiki.component.annotation.Component;
import org.xwiki.component.manager.ComponentLookupException;
import org.xwiki.component.manager.ComponentManager;
import org.xwiki.script.service.ScriptService;
import org.xwiki.security.authentication.api.AuthenticationConfiguration;
import org.xwiki.security.authentication.api.AuthenticationFailureManager;
import org.xwiki.security.authentication.api.AuthenticationFailureStrategy;
import org.xwiki.security.script.SecurityScriptService;
import com.xpn.xwiki.XWikiContext;
import com.xpn.xwiki.util.Programming;
@Named(SecurityScriptService.ROLEHINT + '.' + AuthenticationScriptService.ID)
public class AuthenticationScriptService implements ScriptService {
    public static final String ID = "authentication";
    private AuthenticationFailureManager authenticationFailureManager;
    private AuthenticationConfiguration authenticationConfiguration;
    private ComponentManager componentManager;
    private Provider<XWikiContext> contextProvider;
    private Logger logger;
    public String getForm(String username) {
        return this.authenticationFailureManager.getForm(username, contextProvider.get().getRequest());
    }
    
    public String getErrorMessage(String username) {
        return this.authenticationFailureManager.getErrorMessage(username);
    }
    
    public Set<String> getAuthenticationFailureAvailableStrategies() {
        try {
            return this.componentManager.getInstanceMap(AuthenticationFailureStrategy.class).keySet();
        }
         catch (ComponentLookupException e) {
            logger.error("Error while getting the list of available authentication strategies.");
            return Collections.emptySet();
        }
        
    }
    
    public AuthenticationConfiguration getAuthenticationConfiguration() {
        return this.authenticationConfiguration;
    }
    
    public void resetAuthenticationFailureCounter(String username) {
        this.authenticationFailureManager.resetAuthenticationFailureCounter(username);
    }
    
}



package org.apache.pinot.controller.api.resources;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiKeyAuthDefinition;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;
import io.swagger.annotations.SecurityDefinition;
import io.swagger.annotations.SwaggerDefinition;
import javax.inject.Inject;
import javax.ws.rs.DefaultValue;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.HttpHeaders;
import javax.ws.rs.core.MediaType;
import org.apache.pinot.controller.api.access.AccessControl;
import org.apache.pinot.controller.api.access.AccessControlFactory;
import org.apache.pinot.controller.api.access.AccessType;
import static org.apache.pinot.spi.utils.CommonConstants.SWAGGER_AUTHORIZATION_KEY;
@Api(tags = "Auth", authorizations = {@Authorization(value = SWAGGER_AUTHORIZATION_KEY)})
@SwaggerDefinition(securityDefinition = @SecurityDefinition(apiKeyAuthDefinitions = @ApiKeyAuthDefinition(name = HttpHeaders.AUTHORIZATION, in = ApiKeyAuthDefinition.ApiKeyLocation.HEADER, key = SWAGGER_AUTHORIZATION_KEY)))
public class PinotControllerAuthResource {
  private AccessControlFactory _accessControlFactory;
  @Context
  HttpHeaders _httpHeaders;
  @ApiOperation(value = "Check whether authentication is enabled")
  @ApiResponses(value = { @ApiResponse(code = 200, message = "Verification result provided"), @ApiResponse(code = 500, message = "Verification error") })
  public boolean verify(@ApiParam(value = "Table name without type") @QueryParam("tableName") String tableName, @ApiParam(value = "API access type") @DefaultValue("READ") @QueryParam("accessType") AccessType accessType, @ApiParam(value = "Endpoint URL") @QueryParam("endpointUrl") String endpointUrl) {
    AccessControl accessControl = _accessControlFactory.create();
    return accessControl.hasAccess(tableName, accessType, _httpHeaders, endpointUrl);
  }
  
  @ApiOperation(value = "Retrieve auth workflow info")
  @ApiResponses(value = {@ApiResponse(code = 200, message = "Auth workflow info provided")})
  public AccessControl.AuthWorkflowInfo info() {
    return _accessControlFactory.create().getAuthWorkflowInfo();
  }
  
}



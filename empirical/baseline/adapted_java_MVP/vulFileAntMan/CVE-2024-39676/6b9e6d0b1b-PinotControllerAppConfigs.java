package org.apache.pinot.controller.api.resources;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiKeyAuthDefinition;
import io.swagger.annotations.Authorization;
import io.swagger.annotations.SecurityDefinition;
import io.swagger.annotations.SwaggerDefinition;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Application;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.HttpHeaders;
import javax.ws.rs.core.MediaType;
import org.apache.pinot.common.utils.PinotAppConfigs;
import org.apache.pinot.controller.api.ControllerAdminApiApplication;
import org.apache.pinot.spi.env.PinotConfiguration;
import static org.apache.pinot.spi.utils.CommonConstants.SWAGGER_AUTHORIZATION_KEY;
@Api(tags = Constants.APP_CONFIGS, authorizations = {@Authorization(value = SWAGGER_AUTHORIZATION_KEY)})
@SwaggerDefinition(securityDefinition = @SecurityDefinition(apiKeyAuthDefinitions = @ApiKeyAuthDefinition(name = HttpHeaders.AUTHORIZATION, in = ApiKeyAuthDefinition.ApiKeyLocation.HEADER, key = SWAGGER_AUTHORIZATION_KEY)))
public class PinotControllerAppConfigs {
  private Application _application;
  public String getAppConfigs() {
    PinotConfiguration pinotConfiguration = (PinotConfiguration) _application.getProperties().get(ControllerAdminApiApplication.PINOT_CONFIGURATION);
    PinotAppConfigs pinotAppConfigs = new PinotAppConfigs(pinotConfiguration);
    return pinotAppConfigs.toJSONString();
  }
  
}



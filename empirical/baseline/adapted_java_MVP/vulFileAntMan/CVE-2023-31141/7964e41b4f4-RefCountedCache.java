package org.opensearch.index.store.remote.utils.cache;
import org.opensearch.index.store.remote.utils.cache.stats.CacheStats;
import java.util.Map;
import java.util.function.BiFunction;
public interface RefCountedCache<K, V> {
    V get(K key);
    V put(K key, V value);
    void putAll(Map<? extends K, ? extends V> m);
    V computeIfPresent(K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction);
    void remove(K key);
    void removeAll(Iterable<? extends K> keys);
    void clear();
    long size();
    void incRef(K key);
    void decRef(K key);
    long prune();
    CacheUsage usage();
    CacheStats stats();
}



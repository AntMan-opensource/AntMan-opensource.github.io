package org.apache.openmeetings.db.dao.calendar;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import org.apache.openmeetings.db.entity.calendar.MeetingMember;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;
public class MeetingMemberDao {
	private static final Logger log = LoggerFactory.getLogger(MeetingMemberDao.class);
	private EntityManager em;
	public MeetingMember get(Long id) {
		List<MeetingMember> list = em.createNamedQuery("getMeetingMemberById", MeetingMember.class) .setParameter("id", id).getResultList();
		return list.size() == 1 ? list.get(0) : null;
	}
	
	public List<MeetingMember> get() {
		return em.createNamedQuery("getMeetingMembers", MeetingMember.class).getResultList();
	}
	
	public Set<Long> getMeetingMemberIdsByAppointment(Long appointmentId) {
		log.debug("getMeetingMemberIdsByAppointment: {}", appointmentId);
		return new HashSet<>(em.createNamedQuery("getMeetingMemberIdsByAppointment", Long.class) .setParameter("id", appointmentId) .getResultList());
	}
	
	 public MeetingMember update(MeetingMember meetingMember) {
		if (meetingMember.getId() == null) {
			em.persist(meetingMember);
		}
		 else {
			if (!em.contains(meetingMember)) {
				meetingMember = em.merge(meetingMember);
			}
			
		}
		
		return meetingMember;
	}
	
}



package org.apache.hive.jdbc.saml;
import com.google.common.base.Preconditions;
import java.net.URI;
import org.apache.hive.jdbc.saml.IJdbcBrowserClient.JdbcBrowserClientContext;
import org.apache.hive.service.auth.saml.HiveSamlUtils;
import org.apache.http.Header;
import org.apache.http.HttpRequest;
import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.ProtocolException;
import org.apache.http.client.RedirectStrategy;
import org.apache.http.impl.client.DefaultRedirectStrategy;
import org.apache.http.protocol.HttpContext;
public class HiveJdbcSamlRedirectStrategy extends DefaultRedirectStrategy {
  private final IJdbcBrowserClient browserClient;
  public HiveJdbcSamlRedirectStrategy(IJdbcBrowserClient browserClient) {
    this.browserClient = Preconditions.checkNotNull(browserClient);
  }
  
  public boolean isRedirected( final HttpRequest request, final HttpResponse response, final HttpContext context) throws ProtocolException {
    int status = response.getStatusLine().getStatusCode();
    if (status == HttpStatus.SC_MOVED_TEMPORARILY || status == HttpStatus.SC_SEE_OTHER) {
      URI locationUri = getLocationURI(request, response, context);
      Header clientIdentifier = response .getFirstHeader(HiveSamlUtils.SSO_CLIENT_IDENTIFIER);
      IJdbcBrowserClient.JdbcBrowserClientContext browserClientContext = new JdbcBrowserClientContext( locationUri, clientIdentifier.getValue());
      browserClient.init(browserClientContext);
    }
    
    return super.isRedirected(request, response, context);
  }
  
}



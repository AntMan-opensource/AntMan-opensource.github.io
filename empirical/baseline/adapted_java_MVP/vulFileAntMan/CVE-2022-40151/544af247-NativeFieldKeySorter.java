package com.thoughtworks.xstream.converters.reflection;
import java.lang.reflect.Field;
import java.util.Comparator;
import java.util.Map;
import java.util.TreeMap;
public class NativeFieldKeySorter implements FieldKeySorter {
    public Map<FieldKey, Field> sort(final Class<?> type, final Map<FieldKey, Field> keyedByFieldKey) {
        final Map<FieldKey, Field> map = new TreeMap<FieldKey, Field>(new Comparator<FieldKey>() { 

            public int compare(final FieldKey fieldKey1, final FieldKey fieldKey2) {
                int i = fieldKey1.getDepth() - fieldKey2.getDepth();
                if (i == 0) {
                    i = fieldKey1.getOrder() - fieldKey2.getOrder();
                }
                
                return i;
            }
            
        }
        
);
        map.putAll(keyedByFieldKey);
        return map;
    }
    
}



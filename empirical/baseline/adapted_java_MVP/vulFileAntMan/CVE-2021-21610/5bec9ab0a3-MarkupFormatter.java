package hudson.markup;
import hudson.ExtensionPoint;
import hudson.model.AbstractDescribableImpl;
import hudson.util.HttpResponses;
import java.io.IOException;
import java.io.StringWriter;
import java.io.Writer;
import edu.umd.cs.findbugs.annotations.CheckForNull;
import edu.umd.cs.findbugs.annotations.NonNull;
import org.kohsuke.stapler.HttpResponse;
import org.kohsuke.stapler.QueryParameter;
public abstract class MarkupFormatter extends AbstractDescribableImpl<MarkupFormatter> implements ExtensionPoint {
    public abstract void translate(@CheckForNull String markup, @NonNull Writer output) throws IOException;
    public final @NonNull String translate(@CheckForNull String markup) throws IOException {
        StringWriter w = new StringWriter();
        translate(markup,w);
        return w.toString();
    }
    
    public String getHelpUrl() {
        return getDescriptor().getHelpFile("syntax");
    }
    
    public MarkupFormatterDescriptor getDescriptor() {
        return (MarkupFormatterDescriptor)super.getDescriptor();
    }
    
    public HttpResponse doPreviewDescription(@QueryParameter String text) throws IOException {
        StringWriter w = new StringWriter();
        translate(text, w);
        return HttpResponses.html(w.toString());
    }
    
}



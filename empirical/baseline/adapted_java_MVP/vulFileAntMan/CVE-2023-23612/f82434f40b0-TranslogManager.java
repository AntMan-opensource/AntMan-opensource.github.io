package org.opensearch.index.translog;
import java.io.IOException;
import java.util.stream.Stream;
public interface TranslogManager {
    void rollTranslogGeneration() throws TranslogException;
    int recoverFromTranslog(TranslogRecoveryRunner translogRecoveryRunner, long localCheckpoint, long recoverUpToSeqNo) throws IOException;
    boolean isTranslogSyncNeeded();
    boolean ensureTranslogSynced(Stream<Translog.Location> locations) throws IOException;
    void syncTranslog() throws IOException;
    TranslogStats getTranslogStats();
    Translog.Location getTranslogLastWriteLocation();
    void trimUnreferencedTranslogFiles() throws TranslogException;
    boolean shouldRollTranslogGeneration();
    void trimOperationsFromTranslog(long belowTerm, long aboveSeqNo) throws TranslogException;
    int restoreLocalHistoryFromTranslog(long processedCheckpoint, TranslogRecoveryRunner translogRecoveryRunner) throws IOException;
    void skipTranslogRecovery();
    Translog.Operation readOperation(Translog.Location location) throws IOException;
    Translog.Location add(Translog.Operation operation) throws IOException;
    void ensureCanFlush();
}



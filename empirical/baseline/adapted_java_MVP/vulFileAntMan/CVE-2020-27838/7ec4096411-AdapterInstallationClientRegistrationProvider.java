package org.keycloak.services.clientregistration;
import org.keycloak.events.EventBuilder;
import org.keycloak.events.EventType;
import org.keycloak.models.ClientModel;
import org.keycloak.models.KeycloakSession;
import org.keycloak.services.managers.ClientManager;
import org.keycloak.services.managers.RealmManager;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
public class AdapterInstallationClientRegistrationProvider implements ClientRegistrationProvider {
    private KeycloakSession session;
    private EventBuilder event;
    private ClientRegistrationAuth auth;
    public AdapterInstallationClientRegistrationProvider(KeycloakSession session) {
        this.session = session;
    }
    
    public Response get(@PathParam("clientId") String clientId) {
        event.event(EventType.CLIENT_INFO);
        ClientModel client = session.getContext().getRealm().getClientByClientId(clientId);
        auth.requireView(client);
        ClientManager clientManager = new ClientManager(new RealmManager(session));
        Object rep = clientManager.toInstallationRepresentation(session.getContext().getRealm(), client, session.getContext().getUri().getBaseUri());
        event.client(client.getClientId()).success();
        return Response.ok(rep).build();
    }
    
    public void setAuth(ClientRegistrationAuth auth) {
        this.auth = auth;
    }
    
    public ClientRegistrationAuth getAuth() {
        return auth;
    }
    
    public void setEvent(EventBuilder event) {
        this.event = event;
    }
    
    public EventBuilder getEvent() {
        return event;
    }
    
    public void close() {
    }
    
}



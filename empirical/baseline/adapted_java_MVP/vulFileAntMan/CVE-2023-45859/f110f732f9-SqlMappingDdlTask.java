package com.hazelcast.sql.impl.client;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.SqlMappingDdlCodec;
import com.hazelcast.instance.impl.Node;
import com.hazelcast.internal.nio.Connection;
import com.hazelcast.sql.impl.SqlInternalService;
import com.hazelcast.sql.impl.SqlServiceImpl;
import java.security.Permission;
public class SqlMappingDdlTask extends SqlAbstractMessageTask<String> {
    public SqlMappingDdlTask(ClientMessage clientMessage, Node node, Connection connection) {
        super(clientMessage, node, connection);
    }
    
    protected Object call() {
        SqlServiceImpl sqlService = nodeEngine.getSqlService();
        return sqlService.mappingDdl(parameters);
    }
    
    protected String decodeClientMessage(ClientMessage clientMessage) {
        return SqlMappingDdlCodec.decodeRequest(clientMessage);
    }
    
    protected ClientMessage encodeResponse(Object response) {
        return SqlMappingDdlCodec.encodeResponse((String) response);
    }
    
    public String getServiceName() {
        return SqlInternalService.SERVICE_NAME;
    }
    
    public String getDistributedObjectName() {
        return null;
    }
    
    public String getMethodName() {
        return "mappingDdl";
    }
    
    public Object[] getParameters() {
        return new Object[]{parameters};
    }
    
    public Permission getRequiredPermission() {
        return null;
    }
    
}



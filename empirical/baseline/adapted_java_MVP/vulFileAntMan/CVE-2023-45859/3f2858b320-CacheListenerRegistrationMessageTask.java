package com.hazelcast.client.impl.protocol.task.cache;
import com.hazelcast.cache.impl.CacheService;
import com.hazelcast.cache.impl.operation.CacheListenerRegistrationOperation;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CacheListenerRegistrationCodec;
import com.hazelcast.client.impl.protocol.task.AbstractTargetMessageTask;
import com.hazelcast.instance.impl.Node;
import com.hazelcast.internal.nio.Connection;
import com.hazelcast.spi.impl.operationservice.Operation;
import javax.cache.configuration.CacheEntryListenerConfiguration;
import java.security.Permission;
import java.util.UUID;
public class CacheListenerRegistrationMessageTask extends AbstractTargetMessageTask<CacheListenerRegistrationCodec.RequestParameters> {
    public CacheListenerRegistrationMessageTask(ClientMessage clientMessage, Node node, Connection connection) {
        super(clientMessage, node, connection);
    }
    
    protected UUID getTargetUuid() {
        return parameters.uuid;
    }
    
    protected Operation prepareOperation() {
        CacheEntryListenerConfiguration conf = nodeEngine.toObject(parameters.listenerConfig);
        return new CacheListenerRegistrationOperation(parameters.name, conf, parameters.shouldRegister);
    }
    
    protected CacheListenerRegistrationCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) {
        return CacheListenerRegistrationCodec.decodeRequest(clientMessage);
    }
    
    protected ClientMessage encodeResponse(Object response) {
        return CacheListenerRegistrationCodec.encodeResponse();
    }
    
    public String getServiceName() {
        return CacheService.SERVICE_NAME;
    }
    
    public Permission getRequiredPermission() {
        return null;
    }
    
    public String getDistributedObjectName() {
        return parameters.name;
    }
    
    public String getMethodName() {
        return null;
    }
    
    public Object[] getParameters() {
        return null;
    }
    
}



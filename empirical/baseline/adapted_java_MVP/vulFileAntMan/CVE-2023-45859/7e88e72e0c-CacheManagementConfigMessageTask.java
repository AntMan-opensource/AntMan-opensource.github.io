package com.hazelcast.client.impl.protocol.task.cache;
import com.hazelcast.cache.impl.CacheService;
import com.hazelcast.cache.impl.operation.CacheManagementConfigOperation;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.CacheManagementConfigCodec;
import com.hazelcast.client.impl.protocol.task.AbstractTargetMessageTask;
import com.hazelcast.instance.impl.Node;
import com.hazelcast.internal.nio.Connection;
import com.hazelcast.spi.impl.operationservice.Operation;
import java.security.Permission;
import java.util.UUID;
public class CacheManagementConfigMessageTask extends AbstractTargetMessageTask<CacheManagementConfigCodec.RequestParameters> {
    public CacheManagementConfigMessageTask(ClientMessage clientMessage, Node node, Connection connection) {
        super(clientMessage, node, connection);
    }
    
    protected Operation prepareOperation() {
        return new CacheManagementConfigOperation(parameters.name, parameters.isStat, parameters.enabled);
    }
    
    protected CacheManagementConfigCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) {
        return CacheManagementConfigCodec.decodeRequest(clientMessage);
    }
    
    protected ClientMessage encodeResponse(Object response) {
        return CacheManagementConfigCodec.encodeResponse();
    }
    
    protected UUID getTargetUuid() {
        return parameters.uuid;
    }
    
    public String getServiceName() {
        return CacheService.SERVICE_NAME;
    }
    
    public Permission getRequiredPermission() {
        return null;
    }
    
    public String getDistributedObjectName() {
        return parameters.name;
    }
    
    public String getMethodName() {
        return null;
    }
    
    public Object[] getParameters() {
        return null;
    }
    
}



package com.hazelcast.client.impl.protocol.task.map;
import com.hazelcast.client.impl.protocol.ClientMessage;
import com.hazelcast.client.impl.protocol.codec.ContinuousQuerySetReadCursorCodec;
import com.hazelcast.client.impl.protocol.task.AbstractPartitionMessageTask;
import com.hazelcast.instance.impl.Node;
import com.hazelcast.map.impl.MapService;
import com.hazelcast.map.impl.querycache.subscriber.operation.SetReadCursorOperation;
import com.hazelcast.internal.nio.Connection;
import com.hazelcast.spi.impl.operationservice.Operation;
import java.security.Permission;
public class MapSetReadCursorMessageTask extends AbstractPartitionMessageTask<ContinuousQuerySetReadCursorCodec.RequestParameters> {
    public MapSetReadCursorMessageTask(ClientMessage clientMessage, Node node, Connection connection) {
        super(clientMessage, node, connection);
    }
    
    protected ContinuousQuerySetReadCursorCodec.RequestParameters decodeClientMessage(ClientMessage clientMessage) {
        return ContinuousQuerySetReadCursorCodec.decodeRequest(clientMessage);
    }
    
    protected ClientMessage encodeResponse(Object response) {
        return ContinuousQuerySetReadCursorCodec.encodeResponse((Boolean) response);
    }
    
    public String getServiceName() {
        return MapService.SERVICE_NAME;
    }
    
    public Permission getRequiredPermission() {
        return null;
    }
    
    public String getDistributedObjectName() {
        return parameters.mapName;
    }
    
    public String getMethodName() {
        return null;
    }
    
    public Object[] getParameters() {
        return null;
    }
    
    protected Operation prepareOperation() {
        return new SetReadCursorOperation(parameters.mapName, parameters.cacheName, parameters.sequence, getPartitionId());
    }
    
}



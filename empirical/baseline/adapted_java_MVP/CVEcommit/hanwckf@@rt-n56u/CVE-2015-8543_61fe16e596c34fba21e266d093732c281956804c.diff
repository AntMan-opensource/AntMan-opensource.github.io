commit 61fe16e596c34fba21e266d093732c281956804c
Author: andy.padavan <andy.padavan@gmail.com>
Date:   Wed Dec 16 19:50:06 2015 +0700

    kernel-3.x.x: net: add validation for the socket syscall protocol argument (CVE-2015-8543)
    
    [ Upstream 79462ad02e ]

diff --git a/trunk/linux-3.0.x/include/net/sock.h b/trunk/linux-3.0.x/include/net/sock.h
index d74e2dae4..d90f0d15e 100644
--- a/trunk/linux-3.0.x/include/net/sock.h
+++ b/trunk/linux-3.0.x/include/net/sock.h
@@ -303,6 +303,7 @@ struct sock {
 				sk_no_check  : 2,
 				sk_userlocks : 4,
 				sk_protocol  : 8,
+#define SK_PROTOCOL_MAX U8_MAX
 				sk_type      : 16;
 	kmemcheck_bitfield_end(flags);
 	int			sk_wmem_queued;
diff --git a/trunk/linux-3.0.x/net/ax25/af_ax25.c b/trunk/linux-3.0.x/net/ax25/af_ax25.c
index 7b8db0ede..a314cfd6a 100644
--- a/trunk/linux-3.0.x/net/ax25/af_ax25.c
+++ b/trunk/linux-3.0.x/net/ax25/af_ax25.c
@@ -806,6 +806,9 @@ static int ax25_create(struct net *net, struct socket *sock, int protocol,
 	struct sock *sk;
 	ax25_cb *ax25;
 
+	if (protocol < 0 || protocol > SK_PROTOCOL_MAX)
+		return -EINVAL;
+
 	if (!net_eq(net, &init_net))
 		return -EAFNOSUPPORT;
 
diff --git a/trunk/linux-3.0.x/net/decnet/af_decnet.c b/trunk/linux-3.0.x/net/decnet/af_decnet.c
index d71f0d2b8..301a2d10e 100644
--- a/trunk/linux-3.0.x/net/decnet/af_decnet.c
+++ b/trunk/linux-3.0.x/net/decnet/af_decnet.c
@@ -680,6 +680,9 @@ static int dn_create(struct net *net, struct socket *sock, int protocol,
 {
 	struct sock *sk;
 
+	if (protocol < 0 || protocol > SK_PROTOCOL_MAX)
+		return -EINVAL;
+
 	if (!net_eq(net, &init_net))
 		return -EAFNOSUPPORT;
 
diff --git a/trunk/linux-3.0.x/net/ipv4/af_inet.c b/trunk/linux-3.0.x/net/ipv4/af_inet.c
index cc54712e5..cabd7e4af 100644
--- a/trunk/linux-3.0.x/net/ipv4/af_inet.c
+++ b/trunk/linux-3.0.x/net/ipv4/af_inet.c
@@ -283,6 +283,9 @@ static int inet_create(struct net *net, struct socket *sock, int protocol,
 		if (sock->type != SOCK_RAW && sock->type != SOCK_DGRAM)
 			build_ehash_secret();
 
+	if (protocol < 0 || protocol >= IPPROTO_MAX)
+		return -EINVAL;
+
 	sock->state = SS_UNCONNECTED;
 
 	/* Look for the requested type/protocol pair. */
diff --git a/trunk/linux-3.0.x/net/ipv6/af_inet6.c b/trunk/linux-3.0.x/net/ipv6/af_inet6.c
index b4ae36e39..507e09730 100644
--- a/trunk/linux-3.0.x/net/ipv6/af_inet6.c
+++ b/trunk/linux-3.0.x/net/ipv6/af_inet6.c
@@ -114,6 +114,9 @@ static int inet6_create(struct net *net, struct socket *sock, int protocol,
 	    !inet_ehash_secret)
 		build_ehash_secret();
 
+	if (protocol < 0 || protocol >= IPPROTO_MAX)
+		return -EINVAL;
+
 	/* Look for the requested type/protocol pair. */
 lookup_protocol:
 	err = -ESOCKTNOSUPPORT;
diff --git a/trunk/linux-3.0.x/net/irda/af_irda.c b/trunk/linux-3.0.x/net/irda/af_irda.c
index f5d011ad4..03c8ea9de 100644
--- a/trunk/linux-3.0.x/net/irda/af_irda.c
+++ b/trunk/linux-3.0.x/net/irda/af_irda.c
@@ -1106,6 +1106,9 @@ static int irda_create(struct net *net, struct socket *sock, int protocol,
 
 	IRDA_DEBUG(2, "%s()\n", __func__);
 
+	if (protocol < 0 || protocol > SK_PROTOCOL_MAX)
+		return -EINVAL;
+
 	if (net != &init_net)
 		return -EAFNOSUPPORT;
 
diff --git a/trunk/linux-3.4.x/include/net/sock.h b/trunk/linux-3.4.x/include/net/sock.h
index a452933ae..aac925202 100644
--- a/trunk/linux-3.4.x/include/net/sock.h
+++ b/trunk/linux-3.4.x/include/net/sock.h
@@ -322,6 +322,7 @@ struct sock {
 				sk_no_check  : 2,
 				sk_userlocks : 4,
 				sk_protocol  : 8,
+#define SK_PROTOCOL_MAX U8_MAX
 				sk_type      : 16;
 	kmemcheck_bitfield_end(flags);
 	int			sk_wmem_queued;
diff --git a/trunk/linux-3.4.x/net/ax25/af_ax25.c b/trunk/linux-3.4.x/net/ax25/af_ax25.c
index 8db3f11d7..e4179e1fc 100644
--- a/trunk/linux-3.4.x/net/ax25/af_ax25.c
+++ b/trunk/linux-3.4.x/net/ax25/af_ax25.c
@@ -811,6 +811,9 @@ static int ax25_create(struct net *net, struct socket *sock, int protocol,
 	struct sock *sk;
 	ax25_cb *ax25;
 
+	if (protocol < 0 || protocol > SK_PROTOCOL_MAX)
+		return -EINVAL;
+
 	if (!net_eq(net, &init_net))
 		return -EAFNOSUPPORT;
 
diff --git a/trunk/linux-3.4.x/net/decnet/af_decnet.c b/trunk/linux-3.4.x/net/decnet/af_decnet.c
index 2ba1a2814..662e0d878 100644
--- a/trunk/linux-3.4.x/net/decnet/af_decnet.c
+++ b/trunk/linux-3.4.x/net/decnet/af_decnet.c
@@ -680,6 +680,9 @@ static int dn_create(struct net *net, struct socket *sock, int protocol,
 {
 	struct sock *sk;
 
+	if (protocol < 0 || protocol > SK_PROTOCOL_MAX)
+		return -EINVAL;
+
 	if (!net_eq(net, &init_net))
 		return -EAFNOSUPPORT;
 
diff --git a/trunk/linux-3.4.x/net/ipv4/af_inet.c b/trunk/linux-3.4.x/net/ipv4/af_inet.c
index 24df6ae9d..79f2bb540 100644
--- a/trunk/linux-3.4.x/net/ipv4/af_inet.c
+++ b/trunk/linux-3.4.x/net/ipv4/af_inet.c
@@ -284,6 +284,9 @@ static int inet_create(struct net *net, struct socket *sock, int protocol,
 		if (sock->type != SOCK_RAW && sock->type != SOCK_DGRAM)
 			build_ehash_secret();
 
+	if (protocol < 0 || protocol >= IPPROTO_MAX)
+		return -EINVAL;
+
 	sock->state = SS_UNCONNECTED;
 
 	/* Look for the requested type/protocol pair. */
diff --git a/trunk/linux-3.4.x/net/ipv6/af_inet6.c b/trunk/linux-3.4.x/net/ipv6/af_inet6.c
index 389e54deb..c6f03dfe4 100644
--- a/trunk/linux-3.4.x/net/ipv6/af_inet6.c
+++ b/trunk/linux-3.4.x/net/ipv6/af_inet6.c
@@ -113,6 +113,9 @@ static int inet6_create(struct net *net, struct socket *sock, int protocol,
 	    !inet_ehash_secret)
 		build_ehash_secret();
 
+	if (protocol < 0 || protocol >= IPPROTO_MAX)
+		return -EINVAL;
+
 	/* Look for the requested type/protocol pair. */
 lookup_protocol:
 	err = -ESOCKTNOSUPPORT;
diff --git a/trunk/linux-3.4.x/net/irda/af_irda.c b/trunk/linux-3.4.x/net/irda/af_irda.c
index 12218f705..3eaf4fe85 100644
--- a/trunk/linux-3.4.x/net/irda/af_irda.c
+++ b/trunk/linux-3.4.x/net/irda/af_irda.c
@@ -1106,6 +1106,9 @@ static int irda_create(struct net *net, struct socket *sock, int protocol,
 
 	IRDA_DEBUG(2, "%s()\n", __func__);
 
+	if (protocol < 0 || protocol > SK_PROTOCOL_MAX)
+		return -EINVAL;
+
 	if (net != &init_net)
 		return -EAFNOSUPPORT;
 

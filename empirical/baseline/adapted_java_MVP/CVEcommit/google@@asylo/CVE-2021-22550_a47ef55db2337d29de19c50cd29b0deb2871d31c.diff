commit a47ef55db2337d29de19c50cd29b0deb2871d31c
Author: Chong Cai <chongc@google.com>
Date:   Fri Feb 19 13:42:29 2021 -0800

    Fix vulnerability in UntrustedCacheMalloc
    
    The pointer array is stored in untrusted memory, so we cannot trust the
    value even after validation. We should validate the pointer is pointing
    to untrusted memory after it's stored inside the enclave.
    
    PiperOrigin-RevId: 358474391
    Change-Id: I63cf6c251bdaf1b491dbf06cc0dcf77f7b141756

diff --git a/asylo/platform/primitives/sgx/untrusted_cache_malloc.cc b/asylo/platform/primitives/sgx/untrusted_cache_malloc.cc
index 7412ae01..9517763b 100644
--- a/asylo/platform/primitives/sgx/untrusted_cache_malloc.cc
+++ b/asylo/platform/primitives/sgx/untrusted_cache_malloc.cc
@@ -104,11 +104,12 @@ void *UntrustedCacheMalloc::GetBuffer() {
       buffers =
           primitives::AllocateUntrustedBuffers(kPoolIncrement, kPoolEntrySize);
       for (int i = 0; i < kPoolIncrement; i++) {
-        if (!buffers[i] ||
-            !TrustedPrimitives::IsOutsideEnclave(buffers[i], kPoolEntrySize)) {
-          abort();
+        void *buf = buffers[i];
+        if (!buf || !TrustedPrimitives::IsOutsideEnclave(buf, kPoolEntrySize)) {
+          TrustedPrimitives::BestEffortAbort(
+              "Cached buffer is not outside the enclave");
         }
-        buffer_pool_.push(buffers[i]);
+        buffer_pool_.push(buf);
       }
     }
     buffer = buffer_pool_.top();

commit 7b91e5656e27b16639c8de156878c7624346cbd4
Author: Marc Noirot <marc.noirot@gmail.com>
Date:   Sun Feb 10 14:47:57 2019 +0100

    Fix invalid memory access
    
    Metadata name was assumed to be an AMF string.
    If it was not the case, we would read non-initialized data.

diff --git a/src/dump_json.c b/src/dump_json.c
index 3c888fe..ae9fbdb 100644
--- a/src/dump_json.c
+++ b/src/dump_json.c
@@ -220,14 +220,14 @@ static int json_on_audio_tag(flv_tag * tag, flv_audio_tag at, flv_parser * parse
     return OK;
 }
 
-static int json_on_metadata_tag(flv_tag * tag, amf_data * name, amf_data * data, flv_parser * parser) {
+static int json_on_metadata_tag(flv_tag * tag, char * name, amf_data * data, flv_parser * parser) {
     json_emitter * je;
     je = (json_emitter*)parser->user_data;
 
     json_emit_object_key_z(je, "scriptDataObject");
     json_emit_object_start(je);
     json_emit_object_key_z(je, "name");
-    json_emit_string(je, (char*)amf_string_get_bytes(name), amf_string_get_size(name));
+    json_emit_string_z(je, name);
     json_emit_object_key_z(je, "metadata");
     json_amf_data_dump(data, je);
     json_emit_object_end(je);
@@ -255,17 +255,17 @@ static int json_on_stream_end(flv_parser * parser) {
 }
 
 /* JSON FLV file metadata dump callback */
-static int json_on_metadata_tag_only(flv_tag * tag, amf_data * name, amf_data * data, flv_parser * parser) {
+static int json_on_metadata_tag_only(flv_tag * tag, char * name, amf_data * data, flv_parser * parser) {
     flvmeta_opts * options = (flvmeta_opts*) parser->user_data;
 
     if (options->metadata_event == NULL) {
-        if (!strcmp((char*)amf_string_get_bytes(name), "onMetaData")) {
+        if (!strcmp(name, "onMetaData")) {
             dump_json_amf_data(data);
             return FLVMETA_DUMP_STOP_OK;
         }
     }
     else {
-        if (!strcmp((char*)amf_string_get_bytes(name), options->metadata_event)) {
+        if (!strcmp(name, options->metadata_event)) {
             dump_json_amf_data(data);
         }
     }
diff --git a/src/dump_raw.c b/src/dump_raw.c
index 35a0cae..7e3ddf3 100644
--- a/src/dump_raw.c
+++ b/src/dump_raw.c
@@ -113,8 +113,8 @@ static int raw_on_audio_tag(flv_tag * tag, flv_audio_tag at, flv_parser * parser
     return OK;
 }
 
-static int raw_on_metadata_tag(flv_tag * tag, amf_data * name, amf_data * data, flv_parser * parser) {
-    printf("* Metadata event name: %s\n", amf_string_get_bytes(name));
+static int raw_on_metadata_tag(flv_tag * tag, char * name, amf_data * data, flv_parser * parser) {
+    printf("* Metadata event name: %s\n", name);
     printf("* Metadata contents: ");
     amf_data_dump(stdout, data, 0);
     printf("\n");
@@ -132,17 +132,17 @@ static int raw_on_stream_end(flv_parser * parser) {
 }
 
 /* raw FLV file metadata dump callback */
-static int raw_on_metadata_tag_only(flv_tag * tag, amf_data * name, amf_data * data, flv_parser * parser) {
+static int raw_on_metadata_tag_only(flv_tag * tag, char * name, amf_data * data, flv_parser * parser) {
     flvmeta_opts * options = (flvmeta_opts*) parser->user_data;
 
     if (options->metadata_event == NULL) {
-        if (!strcmp((char*)amf_string_get_bytes(name), "onMetaData")) {
+        if (!strcmp(name, "onMetaData")) {
             dump_raw_amf_data(data);
             return FLVMETA_DUMP_STOP_OK;
         }
     }
     else {
-        if (!strcmp((char*)amf_string_get_bytes(name), options->metadata_event)) {
+        if (!strcmp(name, options->metadata_event)) {
             dump_raw_amf_data(data);
         }
     }
diff --git a/src/dump_xml.c b/src/dump_xml.c
index 188e4ca..343dfdc 100644
--- a/src/dump_xml.c
+++ b/src/dump_xml.c
@@ -245,8 +245,8 @@ static int xml_on_audio_tag(flv_tag * tag, flv_audio_tag at, flv_parser * parser
     return OK;
 }
 
-static int xml_on_metadata_tag(flv_tag * tag, amf_data * name, amf_data * data, flv_parser * parser) {
-    printf("    <scriptDataObject name=\"%s\">\n", amf_string_get_bytes(name));
+static int xml_on_metadata_tag(flv_tag * tag, char * name, amf_data * data, flv_parser * parser) {
+    printf("    <scriptDataObject name=\"%s\">\n", name);
     /* dump AMF data as XML, we start from level 3, meaning 6 indentations characters */
     xml_amf_data_dump(data, 1, 3);
     puts("    </scriptDataObject>");
@@ -264,17 +264,17 @@ static int xml_on_stream_end(flv_parser * parser) {
 }
 
 /* XML FLV file metadata dump callbacks */
-static int xml_on_metadata_tag_only(flv_tag * tag, amf_data * name, amf_data * data, flv_parser * parser) {
+static int xml_on_metadata_tag_only(flv_tag * tag, char * name, amf_data * data, flv_parser * parser) {
     flvmeta_opts * options = (flvmeta_opts*) parser->user_data;
 
     if (options->metadata_event == NULL) {
-        if (!strcmp((char*)amf_string_get_bytes(name), "onMetaData")) {
+        if (!strcmp(name, "onMetaData")) {
             dump_xml_amf_data(data);
             return FLVMETA_DUMP_STOP_OK;
         }
     }
     else {
-        if (!strcmp((char*)amf_string_get_bytes(name), options->metadata_event)) {
+        if (!strcmp(name, options->metadata_event)) {
             dump_xml_amf_data(data);
         }
     }
diff --git a/src/dump_yaml.c b/src/dump_yaml.c
index 1b9a330..ca4ae73 100644
--- a/src/dump_yaml.c
+++ b/src/dump_yaml.c
@@ -373,7 +373,7 @@ static int yaml_on_audio_tag(flv_tag * tag, flv_audio_tag at, flv_parser * parse
     return OK;
 }
 
-static int yaml_on_metadata_tag(flv_tag * tag, amf_data * name, amf_data * data, flv_parser * parser) {
+static int yaml_on_metadata_tag(flv_tag * tag, char * name, amf_data * data, flv_parser * parser) {
     yaml_emitter_t * emitter;
     yaml_event_t event;
 
@@ -415,17 +415,17 @@ static int yaml_on_stream_end(flv_parser * parser) {
 }
 
 /* YAML FLV file metadata dump callbacks */
-static int yaml_on_metadata_tag_only(flv_tag * tag, amf_data * name, amf_data * data, flv_parser * parser) {
+static int yaml_on_metadata_tag_only(flv_tag * tag, char * name, amf_data * data, flv_parser * parser) {
     flvmeta_opts * options = (flvmeta_opts*) parser->user_data;
 
     if (options->metadata_event == NULL) {
-        if (!strcmp((char*)amf_string_get_bytes(name), "onMetaData")) {
+        if (!strcmp(name, "onMetaData")) {
             dump_yaml_amf_data(data);
             return FLVMETA_DUMP_STOP_OK;
         }
     }
     else {
-        if (!strcmp((char*)amf_string_get_bytes(name), options->metadata_event)) {
+        if (!strcmp(name, options->metadata_event)) {
             dump_yaml_amf_data(data);
         }
     }
diff --git a/src/flv.c b/src/flv.c
index 5da1544..b59939b 100644
--- a/src/flv.c
+++ b/src/flv.c
@@ -430,6 +430,7 @@ int flv_parse(const char * file, flv_parser * parser) {
     flv_audio_tag at;
     flv_video_tag vt;
     amf_data * name, * data;
+    char * name_str;
     uint32 prev_tag_size;
     int retval;
 
@@ -502,8 +503,13 @@ int flv_parse(const char * file, flv_parser * parser) {
                 flv_close(parser->stream);
                 return retval;
             }
-            else if (retval == FLV_OK && parser->on_metadata_tag != NULL) {
-                retval = parser->on_metadata_tag(&tag, name, data, parser);
+            
+            if (retval == FLV_OK
+            && parser->on_metadata_tag != NULL
+            && amf_data_get_type(name) == AMF_TYPE_STRING) {
+                name_str = (char *)amf_string_get_bytes(name);
+
+                retval = parser->on_metadata_tag(&tag, name_str, data, parser);
                 if (retval != FLV_OK) {
                     amf_data_free(name);
                     amf_data_free(data);
@@ -511,6 +517,7 @@ int flv_parse(const char * file, flv_parser * parser) {
                     return retval;
                 }
             }
+
             amf_data_free(name);
             amf_data_free(data);
         }
diff --git a/src/flv.h b/src/flv.h
index 8111b49..d8920ce 100644
--- a/src/flv.h
+++ b/src/flv.h
@@ -201,7 +201,7 @@ typedef struct __flv_parser {
     void * user_data;
     int (* on_header)(flv_header * header, struct __flv_parser * parser);
     int (* on_tag)(flv_tag * tag, struct __flv_parser * parser);
-    int (* on_metadata_tag)(flv_tag * tag, amf_data * name, amf_data * data, struct __flv_parser * parser);
+    int (* on_metadata_tag)(flv_tag * tag, char * name, amf_data * data, struct __flv_parser * parser);
     int (* on_audio_tag)(flv_tag * tag, flv_audio_tag audio_tag, struct __flv_parser * parser);
     int (* on_video_tag)(flv_tag * tag, flv_video_tag audio_tag, struct __flv_parser * parser);
     int (* on_unknown_tag)(flv_tag * tag, struct __flv_parser * parser);

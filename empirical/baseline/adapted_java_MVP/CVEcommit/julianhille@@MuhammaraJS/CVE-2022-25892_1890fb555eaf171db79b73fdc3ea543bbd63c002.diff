commit 1890fb555eaf171db79b73fdc3ea543bbd63c002
Author: Julian Hille <julianhille@users.noreply.github.com>
Date:   Sat Oct 22 19:31:05 2022 +0200

    Fix NPE in pdf parser
    
    Fixes #214

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 539b6f9..882b38a 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -7,6 +7,10 @@ and this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.
 
 ## [Unreleased]
 
+### Fixed
+
+- NPE in parser when file ends before it really starts
+
 ## [3.1.0] - 2022-09-30
 
 ### Changed
diff --git a/src/deps/PDFWriter/PDFParser.cpp b/src/deps/PDFWriter/PDFParser.cpp
index 4cfd070..d2bc215 100755
--- a/src/deps/PDFWriter/PDFParser.cpp
+++ b/src/deps/PDFWriter/PDFParser.cpp
@@ -352,6 +352,12 @@ EStatusCode PDFParser::ParseLastXrefPosition()
 		mObjectParser.ResetReadState();
 		RefCountPtr<PDFObject> anObject(mObjectParser.ParseNewObject());
 
+		if (!anObject) {
+			status = PDFHummus::eFailure;
+			TRACE_LOG("PDFParser::ParseXrefPosition: Unable to find any object");
+			break;
+		}
+
 		if(anObject->GetType() == PDFObject::ePDFObjectInteger)
 		{
 			mLastXrefPosition = (LongFilePositionType)((PDFInteger*)anObject.GetPtr())->GetValue();
diff --git a/tests/SigSeg.js b/tests/SigSeg.js
new file mode 100644
index 0000000..57fcb3d
--- /dev/null
+++ b/tests/SigSeg.js
@@ -0,0 +1,12 @@
+var muhammara = require("../muhammara");
+const { expect } = require("chai");
+
+describe("SigSegv test", function () {
+  it("should read fields correctly", function () {
+    expect(() =>
+      muhammara.createReader(
+        __dirname + "/TestMaterials/BrokenPdfBadHeader.txt"
+      )
+    ).to.throw();
+  });
+});
diff --git a/tests/TestMaterials/BrokenPdfBadHeader.txt b/tests/TestMaterials/BrokenPdfBadHeader.txt
new file mode 100644
index 0000000..fd0b6ce
--- /dev/null
+++ b/tests/TestMaterials/BrokenPdfBadHeader.txt
@@ -0,0 +1,2 @@
+%PDF-1.4
+%%EOF
\ No newline at end of file

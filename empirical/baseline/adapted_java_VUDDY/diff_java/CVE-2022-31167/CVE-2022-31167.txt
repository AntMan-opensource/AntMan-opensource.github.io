commit 232ff452794e94be32a7177dccbaaa10d67133a1
Author: Thomas Mortagne <thomas.mortagne@gmail.com>
Date:   Mon Nov 29 16:33:11 2021 +0100

    XWIKI-18983: Regular users cannot move or delete anymore a page created by them which has been converted to terminal

diff --git a/xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-api/src/main/java/org/xwiki/security/authorization/cache/internal/DefaultSecurityCache.java b/xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-api/src/main/java/org/xwiki/security/authorization/cache/internal/DefaultSecurityCache.java
index c2c1166a185..a3b0bd2617b 100644
--- a/xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-api/src/main/java/org/xwiki/security/authorization/cache/internal/DefaultSecurityCache.java
+++ b/xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-api/src/main/java/org/xwiki/security/authorization/cache/internal/DefaultSecurityCache.java
@@ -43,6 +43,7 @@
 import org.xwiki.component.annotation.Component;
 import org.xwiki.component.phase.Initializable;
 import org.xwiki.component.phase.InitializationException;
+import org.xwiki.model.reference.EntityReference;
 import org.xwiki.model.reference.EntityReferenceSerializer;
 import org.xwiki.security.GroupSecurityReference;
 import org.xwiki.security.SecurityReference;
@@ -71,6 +72,9 @@ public class DefaultSecurityCache implements SecurityCache, Initializable
     /** Separator used for composing key for the cache. */
     private static final String KEY_CACHE_SEPARATOR = "@@";
 
+    /** Escaped separator used for composing key for the cache. */
+    private static final String KEY_CACHE_SEPARATOR_ESCAPED = KEY_CACHE_SEPARATOR + KEY_CACHE_SEPARATOR;
+
     /** Logger. **/
     @Inject
     private Logger logger;
@@ -506,13 +510,34 @@ public String toString()
         }
     }
 
+    private String escapeEntryKey(String value)
+    {
+        return value.replace(KEY_CACHE_SEPARATOR, KEY_CACHE_SEPARATOR_ESCAPED);
+    }
+
+    private String getEntryKey(boolean shadow, EntityReference userReference, EntityReference reference)
+    {
+        StringBuilder builder = new StringBuilder();
+
+        builder.append(shadow ? 's' : 'n');
+        if (userReference != null) {
+            builder.append(escapeEntryKey(this.keySerializer.serialize(userReference)));
+        }
+        builder.append(KEY_CACHE_SEPARATOR);
+        builder.append(reference.getType());
+        builder.append(':');
+        builder.append(escapeEntryKey(this.keySerializer.serialize(reference)));
+
+        return builder.toString();
+    }
+
     /**
      * @param reference the reference to build the key.
      * @return a unique key for this reference.
      */
     private String getEntryKey(SecurityReference reference)
     {
-        return keySerializer.serialize(reference);
+        return getEntryKey(null, reference);
     }
 
     /**
@@ -522,7 +547,7 @@ private String getEntryKey(SecurityReference reference)
      */
     private String getEntryKey(UserSecurityReference userReference, SecurityReference reference)
     {
-        return keySerializer.serialize(userReference) + KEY_CACHE_SEPARATOR + keySerializer.serialize(reference);
+        return getEntryKey(false, userReference, reference);
     }
 
     /**
@@ -532,7 +557,7 @@ private String getEntryKey(UserSecurityReference userReference, SecurityReferenc
      */
     private String getShadowEntryKey(SecurityReference userReference, SecurityReference root)
     {
-        return keySerializer.serialize(root) + KEY_CACHE_SEPARATOR + keySerializer.serialize(userReference);
+        return getEntryKey(true, userReference, root);
     }
 
     /**
diff --git a/xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-api/src/test/java/org/xwiki/security/AbstractSecurityTestCase.java b/xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-api/src/test/java/org/xwiki/security/AbstractSecurityTestCase.java
index ee0c5fa0cf8..ac45e160107 100644
--- a/xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-api/src/test/java/org/xwiki/security/AbstractSecurityTestCase.java
+++ b/xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-api/src/test/java/org/xwiki/security/AbstractSecurityTestCase.java
@@ -110,17 +110,17 @@ private SecurityReference getMainWikiReference()
         return mainWikiReference;
     }
 
-    private SecurityReference newEntityReference(EntityReference reference)
+    protected SecurityReference newEntityReference(EntityReference reference)
     {
         return new SecurityReference(reference, getMainWikiReference());
     }
 
-    private UserSecurityReference newUserReference(DocumentReference reference)
+    protected UserSecurityReference newUserReference(DocumentReference reference)
     {
         return new UserSecurityReference(reference, getMainWikiReference());
     }
 
-    private GroupSecurityReference newGroupReference(DocumentReference reference)
+    protected GroupSecurityReference newGroupReference(DocumentReference reference)
     {
         return new GroupSecurityReference(reference, getMainWikiReference());
     }
diff --git a/xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-api/src/test/java/org/xwiki/security/authorization/cache/internal/DefaultSecurityCacheTest.java b/xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-api/src/test/java/org/xwiki/security/authorization/cache/internal/DefaultSecurityCacheTest.java
index df4caec400b..0ccdbb14784 100644
--- a/xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-api/src/test/java/org/xwiki/security/authorization/cache/internal/DefaultSecurityCacheTest.java
+++ b/xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-api/src/test/java/org/xwiki/security/authorization/cache/internal/DefaultSecurityCacheTest.java
@@ -62,6 +62,8 @@
 import static org.hamcrest.CoreMatchers.is;
 import static org.hamcrest.CoreMatchers.nullValue;
 import static org.hamcrest.CoreMatchers.sameInstance;
+import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertSame;
 import static org.junit.Assert.assertThat;
 import static org.junit.Assert.fail;
 import static org.mockito.ArgumentMatchers.any;
@@ -862,4 +864,32 @@ public boolean keepAccess(SecurityAccessEntry entry)
             }
         });
     }
+
+    @Test
+    public void testKeyCollisions() throws Exception
+    {
+        this.securityCache.add(mockSecurityRuleEntry(newEntityReference(null)));
+        this.securityCache.add(mockSecurityRuleEntry(newEntityReference(new WikiReference("wiki"))));
+        this.securityCache.add(mockSecurityRuleEntry(newEntityReference(new SpaceReference("wiki", "page1"))));
+
+        SecurityReference spaceReference = newEntityReference(new SpaceReference("wiki", "page1", "page2"));
+        SecurityRuleEntry page1Space = mockSecurityRuleEntry(spaceReference);
+
+        // Add a cache entry associated to SPACE wiki:page1.page2
+        this.securityCache.add(page1Space);
+
+        assertSame(page1Space, this.securityCache.get(spaceReference));
+
+        SecurityReference documentReference = newEntityReference(new DocumentReference("wiki", "page1", "page2"));
+
+        assertNull(this.securityCache.get(documentReference));
+
+        SecurityRuleEntry page1Document = mockSecurityRuleEntry(documentReference);
+
+        // Add a cache entry associated to DOCUMENT wiki:page1.page2
+        this.securityCache.add(page1Document);
+
+        assertSame(page1Space, this.securityCache.get(spaceReference));
+        assertSame(page1Document, this.securityCache.get(documentReference));
+    }
 }

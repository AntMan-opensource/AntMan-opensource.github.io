commit dcd9cf98e24e0297b61331cc812577c8793565a4
Author: Brad Baker <bbaker@atlassian.com>
Date:   Mon Mar 13 16:12:18 2023 +1100

    Preventing stack overflow exceptions via limiting the depth of the parser rules - moving to 500 deep as a starting point

diff --git a/src/main/java/graphql/parser/ParserOptions.java b/src/main/java/graphql/parser/ParserOptions.java
index 4eea193f..62561660 100644
--- a/src/main/java/graphql/parser/ParserOptions.java
+++ b/src/main/java/graphql/parser/ParserOptions.java
@@ -35,12 +35,12 @@ public class ParserOptions {
     /**
      * A graphql hacking vector is to send nonsensical queries that have lots of grammar rule depth to them which
      * can cause stack overflow exceptions during the query parsing.  To prevent this for most users, graphql-java
-     * sets this value to 1000.
+     * sets this value to 500 grammar rules deep.
      * <p>
      * If you want to allow more, then {@link #setDefaultParserOptions(ParserOptions)} allows you to change this
      * JVM wide.
      */
-    public static final int MAX_RULE_DEPTH = 1_000;
+    public static final int MAX_RULE_DEPTH = 500;
 
     private static ParserOptions defaultJvmParserOptions = newParserOptions()
             .captureIgnoredChars(false)

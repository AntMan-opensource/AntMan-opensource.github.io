commit 532d714943ff8ae8dc862427d39a4b78b7f6a375
Author: Vincent Latombe <vincent@latombe.net>
Date:   Mon Dec 5 10:33:47 2022 +0100

    [SECURITY-2967]

diff --git a/src/main/java/org/jenkinsci/plugins/googlelogin/GoogleOAuth2SecurityRealm.java b/src/main/java/org/jenkinsci/plugins/googlelogin/GoogleOAuth2SecurityRealm.java
index 104d561..1559946 100644
--- a/src/main/java/org/jenkinsci/plugins/googlelogin/GoogleOAuth2SecurityRealm.java
+++ b/src/main/java/org/jenkinsci/plugins/googlelogin/GoogleOAuth2SecurityRealm.java
@@ -186,14 +186,7 @@ public class GoogleOAuth2SecurityRealm extends SecurityRealm {
     @SuppressWarnings("unused") // stapler
     @Restricted(DoNotUse.class) // stapler only
     public HttpResponse doCommenceLogin(StaplerRequest request, @QueryParameter String from,  @Header("Referer") final String referer) throws IOException {
-        final String redirectOnFinish;
-        if (from != null && ! Util.isSafeToRedirectTo(from)) {
-            redirectOnFinish = from;
-        } else if (referer != null && ! Util.isSafeToRedirectTo(referer)) {
-            redirectOnFinish = referer;
-        } else {
-            redirectOnFinish = getRootURL();
-        }
+        final String redirectOnFinish = getRedirectOnFinish(from, referer);
 
         final AuthorizationCodeFlow flow = new AuthorizationCodeFlow.Builder(
                 BearerToken.queryParameterAccessMethod(), HTTP_TRANSPORT, JSON_FACTORY, TOKEN_SERVER_URL,
@@ -255,6 +248,18 @@ public class GoogleOAuth2SecurityRealm extends SecurityRealm {
         return oAuthSession.doCommenceLogin(flow);
     }
 
+    String getRedirectOnFinish(String from, String referer) {
+        final String redirectOnFinish;
+        if (from != null && Util.isSafeToRedirectTo(from)) {
+            redirectOnFinish = from;
+        } else if (referer != null && Util.isSafeToRedirectTo(referer)) {
+            redirectOnFinish = referer;
+        } else {
+            redirectOnFinish = getRootURL();
+        }
+        return redirectOnFinish;
+    }
+
     @VisibleForTesting
     boolean isDomainValid(Object tokenDomain) {
         if (domain == null) {
diff --git a/src/test/java/org/jenkinsci/plugins/googlelogin/GoogleOAuth2SecurityRealmTest.java b/src/test/java/org/jenkinsci/plugins/googlelogin/GoogleOAuth2SecurityRealmTest.java
index a0ab1cb..d42f37b 100644
--- a/src/test/java/org/jenkinsci/plugins/googlelogin/GoogleOAuth2SecurityRealmTest.java
+++ b/src/test/java/org/jenkinsci/plugins/googlelogin/GoogleOAuth2SecurityRealmTest.java
@@ -4,16 +4,16 @@ import org.junit.Rule;
 import org.junit.Test;
 import org.jvnet.hudson.test.JenkinsRule;
 
-import org.apache.commons.lang.StringUtils;
 import java.io.IOException;
 
+import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertTrue;
 
 public class GoogleOAuth2SecurityRealmTest {
 
     @Rule
-    public JenkinsRule jenkins = new JenkinsRule();
+    public JenkinsRule r = new JenkinsRule();
 
     @Test
     public void accidentallyBlank() throws IOException {
@@ -55,4 +55,18 @@ public class GoogleOAuth2SecurityRealmTest {
         String clientSecret = "clientSecret";
         return new GoogleOAuth2SecurityRealm(clientId, clientSecret, domains);
     }
+
+    @Test
+    public void testRedirect() throws Exception {
+        GoogleOAuth2SecurityRealm instance = setupInstanceWithDomains("acme.com");
+        assertEquals("relative", instance.getRedirectOnFinish("relative", null));
+        assertEquals("relative", instance.getRedirectOnFinish("relative", "referrer"));
+        assertEquals("relative", instance.getRedirectOnFinish("relative", "http://absolute"));
+        assertEquals("relative", instance.getRedirectOnFinish("http://absolute", "relative"));
+        assertEquals("relative", instance.getRedirectOnFinish("//protocol-relative", "relative"));
+        assertEquals("relative", instance.getRedirectOnFinish(null, "relative"));
+        String rootURL = r.getURL().toExternalForm();
+        assertEquals(rootURL, instance.getRedirectOnFinish("http://absolute", null));
+        assertEquals(rootURL, instance.getRedirectOnFinish("http://absolute", "http://absolute2"));
+    }
 }

commit a927a8ff2e069afebb97f33f6798033ef4451e4f
Author: mallowlabs <mallowlabs@gmail.com>
Date:   Sun Dec 25 21:06:42 2022 +0900

    [SECURITY-2981] fix CSRF vulnerability in OAuth flow
    
    https://issues.jenkins.io/browse/SECURITY-2981

diff --git a/src/main/java/org/jenkinsci/plugins/BitbucketSecurityRealm.java b/src/main/java/org/jenkinsci/plugins/BitbucketSecurityRealm.java
index d57b8c0..d5054dc 100644
--- a/src/main/java/org/jenkinsci/plugins/BitbucketSecurityRealm.java
+++ b/src/main/java/org/jenkinsci/plugins/BitbucketSecurityRealm.java
@@ -12,6 +12,7 @@ import org.acegisecurity.context.SecurityContextHolder;
 import org.acegisecurity.userdetails.UserDetails;
 import org.acegisecurity.userdetails.UserDetailsService;
 import org.acegisecurity.userdetails.UsernameNotFoundException;
+import org.apache.commons.lang.RandomStringUtils;
 import org.apache.commons.lang.StringUtils;
 import org.jenkinsci.plugins.api.BitbucketApiService;
 import org.jenkinsci.plugins.api.BitbucketGroup;
@@ -45,6 +46,7 @@ import jenkins.security.SecurityListener;
 
 public class BitbucketSecurityRealm extends SecurityRealm {
 
+    private static final String STATE_ATTRIBUTE = BitbucketSecurityRealm.class.getName() + ".state";
     private static final String REFERER_ATTRIBUTE = BitbucketSecurityRealm.class.getName() + ".referer";
     private static final Logger LOGGER = Logger.getLogger(BitbucketSecurityRealm.class.getName());
 
@@ -117,6 +119,8 @@ public class BitbucketSecurityRealm extends SecurityRealm {
     public HttpResponse doCommenceLogin(StaplerRequest request, @Header("Referer") final String referer)
             throws IOException {
 
+        String state = RandomStringUtils.random(64, "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._~");
+        request.getSession().setAttribute(STATE_ATTRIBUTE, state);
         request.getSession().setAttribute(REFERER_ATTRIBUTE, referer);
 
         Jenkins jenkins = Jenkins.getInstance();
@@ -131,17 +135,23 @@ public class BitbucketSecurityRealm extends SecurityRealm {
 
         BitbucketApiService bitbucketApiService = new BitbucketApiService(clientID, getSecretClientSecret().getPlainText(), callback);
 
-        return new HttpRedirect(bitbucketApiService.createAuthorizationCodeURL(null));
+        return new HttpRedirect(bitbucketApiService.createAuthorizationCodeURL(null, state));
     }
 
     public HttpResponse doFinishLogin(StaplerRequest request) throws IOException {
         String code = request.getParameter("code");
+        String state = request.getParameter("state");
 
         if (StringUtils.isBlank(code)) {
             LOGGER.log(Level.SEVERE, "doFinishLogin() code = null");
             return HttpResponses.redirectToContextRoot();
         }
 
+        if (state == null || !StringUtils.equals(state, (String) request.getSession().getAttribute(STATE_ATTRIBUTE))) {
+            LOGGER.log(Level.SEVERE, "doFinishLogin() invalid state parameter");
+            return HttpResponses.redirectToContextRoot();
+        }
+
         String rawClientSecret = getSecretClientSecret().getPlainText();
 
         Token accessToken = new BitbucketApiService(clientID, rawClientSecret).getTokenByAuthorizationCode(code, null);
diff --git a/src/main/java/org/jenkinsci/plugins/api/BitbucketApiService.java b/src/main/java/org/jenkinsci/plugins/api/BitbucketApiService.java
index 7aae3b1..eb9b1e7 100644
--- a/src/main/java/org/jenkinsci/plugins/api/BitbucketApiService.java
+++ b/src/main/java/org/jenkinsci/plugins/api/BitbucketApiService.java
@@ -46,8 +46,8 @@ public class BitbucketApiService {
         return service.getRequestToken();
     }
 
-    public String createAuthorizationCodeURL(Token requestToken) {
-        return service.getAuthorizationUrl(requestToken);
+    public String createAuthorizationCodeURL(Token requestToken, String state) {
+        return service.getAuthorizationUrl(requestToken) + "&state=" + state;
     }
 
     public Token getTokenByAuthorizationCode(String code, Token requestToken) {

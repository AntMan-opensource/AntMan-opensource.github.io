commit f09ed652cc572d8ba5d7c8c8f9972fd241883c21
Author: Tim Jacomb <timjacomb1+github@gmail.com>
Date:   Mon Nov 2 14:09:17 2020 +0000

    SECURITY-2110

diff --git a/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultBuildWrapper.java b/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultBuildWrapper.java
index 1a2861e..ed077fe 100644
--- a/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultBuildWrapper.java
+++ b/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultBuildWrapper.java
@@ -28,9 +28,7 @@ import com.azure.core.credential.TokenCredential;
 import com.azure.identity.ClientSecretCredentialBuilder;
 import com.azure.security.keyvault.secrets.SecretClient;
 import com.azure.security.keyvault.secrets.models.KeyVaultSecret;
-import com.cloudbees.plugins.credentials.common.StandardListBoxModel;
 import com.microsoft.azure.util.AzureCredentials;
-import com.microsoft.azure.util.AzureImdsCredentials;
 import hudson.EnvVars;
 import hudson.Extension;
 import hudson.FilePath;
@@ -40,7 +38,6 @@ import hudson.model.AbstractProject;
 import hudson.model.Item;
 import hudson.model.Run;
 import hudson.model.TaskListener;
-import hudson.security.ACL;
 import hudson.tasks.BuildWrapperDescriptor;
 import hudson.util.ListBoxModel;
 import java.util.ArrayList;
@@ -54,6 +51,7 @@ import org.jenkinsci.Symbol;
 import org.kohsuke.stapler.AncestorInPath;
 import org.kohsuke.stapler.DataBoundConstructor;
 import org.kohsuke.stapler.DataBoundSetter;
+import org.kohsuke.stapler.verb.POST;
 
 import static hudson.Util.fixEmpty;
 import static java.lang.String.format;
@@ -288,10 +286,9 @@ public class AzureKeyVaultBuildWrapper extends SimpleBuildWrapper {
         }
 
         @SuppressWarnings("unused")
+        @POST
         public ListBoxModel doFillCredentialIDOverrideItems(@AncestorInPath Item context) {
-            return new StandardListBoxModel().includeEmptyValue()
-                    .includeAs(ACL.SYSTEM, context, AzureImdsCredentials.class)
-                    .includeAs(ACL.SYSTEM, context, AzureCredentials.class);
+            return AzureKeyVaultUtil.doFillCredentialIDItems(context);
         }
 
         @Override
diff --git a/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultGlobalConfiguration.java b/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultGlobalConfiguration.java
index ff3e2f8..fef6cb8 100644
--- a/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultGlobalConfiguration.java
+++ b/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultGlobalConfiguration.java
@@ -6,14 +6,12 @@ import com.cloudbees.plugins.credentials.Credentials;
 import com.cloudbees.plugins.credentials.CredentialsScope;
 import com.cloudbees.plugins.credentials.SystemCredentialsProvider;
 import com.cloudbees.plugins.credentials.common.IdCredentials;
-import com.cloudbees.plugins.credentials.common.StandardListBoxModel;
 import com.microsoft.azure.util.AzureBaseCredentials;
 import com.microsoft.azure.util.AzureCredentials;
 import com.microsoft.azure.util.AzureImdsCredentials;
 import hudson.Extension;
 import hudson.ExtensionList;
 import hudson.model.Item;
-import hudson.security.ACL;
 import hudson.util.FormValidation;
 import hudson.util.ListBoxModel;
 import java.io.IOException;
@@ -227,15 +225,7 @@ public class AzureKeyVaultGlobalConfiguration extends GlobalConfiguration {
     @POST
     @SuppressWarnings("unused")
     public ListBoxModel doFillCredentialIDItems(@AncestorInPath Item context) {
-        if (context == null && !Jenkins.get().hasPermission(Jenkins.ADMINISTER) ||
-                context != null && !context.hasPermission(Item.EXTENDED_READ)) {
-            return new StandardListBoxModel();
-        }
-
-        return new StandardListBoxModel()
-                .includeEmptyValue()
-                .includeAs(ACL.SYSTEM, context, AzureCredentials.class)
-                .includeAs(ACL.SYSTEM, context, AzureImdsCredentials.class);
+        return AzureKeyVaultUtil.doFillCredentialIDItems(context);
     }
 
     public static AzureKeyVaultGlobalConfiguration get() {
diff --git a/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultStep.java b/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultStep.java
index db4e816..d9c16d2 100644
--- a/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultStep.java
+++ b/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultStep.java
@@ -3,10 +3,8 @@ package org.jenkinsci.plugins.azurekeyvaultplugin;
 import com.azure.core.credential.TokenCredential;
 import com.azure.security.keyvault.secrets.SecretClient;
 import com.azure.security.keyvault.secrets.models.KeyVaultSecret;
-import com.cloudbees.plugins.credentials.common.StandardListBoxModel;
 import com.google.common.collect.ImmutableSet;
 import com.microsoft.azure.util.AzureCredentials;
-import com.microsoft.azure.util.AzureImdsCredentials;
 import edu.umd.cs.findbugs.annotations.NonNull;
 import hudson.Extension;
 import hudson.FilePath;
@@ -14,7 +12,6 @@ import hudson.Util;
 import hudson.console.ConsoleLogFilter;
 import hudson.model.Item;
 import hudson.model.Run;
-import hudson.security.ACL;
 import hudson.util.ListBoxModel;
 import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
@@ -38,6 +35,7 @@ import org.jenkinsci.plugins.workflow.steps.StepExecution;
 import org.kohsuke.stapler.AncestorInPath;
 import org.kohsuke.stapler.DataBoundConstructor;
 import org.kohsuke.stapler.DataBoundSetter;
+import org.kohsuke.stapler.verb.POST;
 
 import static java.lang.String.format;
 import static java.util.Objects.requireNonNull;
@@ -216,10 +214,9 @@ public class AzureKeyVaultStep extends Step {
         }
 
         @SuppressWarnings("unused")
+        @POST
         public ListBoxModel doFillCredentialIDItems(@AncestorInPath Item context) {
-            return new StandardListBoxModel().includeEmptyValue()
-                    .includeAs(ACL.SYSTEM, context, AzureImdsCredentials.class)
-                    .includeAs(ACL.SYSTEM, context, AzureCredentials.class);
+            return AzureKeyVaultUtil.doFillCredentialIDItems(context);
         }
 
         /**
diff --git a/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultUtil.java b/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultUtil.java
index 53e997a..38d2d92 100644
--- a/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultUtil.java
+++ b/src/main/java/org/jenkinsci/plugins/azurekeyvaultplugin/AzureKeyVaultUtil.java
@@ -24,7 +24,13 @@
 
 package org.jenkinsci.plugins.azurekeyvaultplugin;
 
+import com.cloudbees.plugins.credentials.common.StandardListBoxModel;
+import com.microsoft.azure.util.AzureCredentials;
+import com.microsoft.azure.util.AzureImdsCredentials;
 import hudson.FilePath;
+import hudson.model.Item;
+import hudson.security.ACL;
+import hudson.util.ListBoxModel;
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.OutputStream;
@@ -35,6 +41,7 @@ import java.security.KeyStore;
 import java.security.cert.Certificate;
 import java.util.Enumeration;
 import javax.xml.bind.DatatypeConverter;
+import jenkins.model.Jenkins;
 
 class AzureKeyVaultUtil {
 
@@ -72,4 +79,15 @@ class AzureKeyVaultUtil {
         URI uri = outFile.toURI();
         return uri.getPath();
     }
+
+    public static ListBoxModel doFillCredentialIDItems(Item context) {
+        if (context == null && !Jenkins.get().hasPermission(Jenkins.ADMINISTER) ||
+                context != null && !context.hasPermission(Item.CONFIGURE)) {
+            return new StandardListBoxModel();
+        }
+
+        return new StandardListBoxModel().includeEmptyValue()
+                .includeAs(ACL.SYSTEM, context, AzureImdsCredentials.class)
+                .includeAs(ACL.SYSTEM, context, AzureCredentials.class);
+    }
 }

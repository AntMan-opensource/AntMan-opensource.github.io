commit 84210baed0c866bdee3e59271f98a767a14a5509
Author: Matt Sicker <boards@gmail.com>
Date:   Thu Mar 25 07:23:20 2021 +0000

    [SECURITY-1721]

diff --git a/core/src/main/java/hudson/model/Computer.java b/core/src/main/java/hudson/model/Computer.java
index c709fa2d4a..c93735b0a9 100644
--- a/core/src/main/java/hudson/model/Computer.java
+++ b/core/src/main/java/hudson/model/Computer.java
@@ -1545,8 +1545,16 @@ public /*transient*/ abstract class Computer extends Actionable implements Acces
      */
     public void updateByXml(final InputStream source) throws IOException, ServletException {
         checkPermission(CONFIGURE);
+        Node previous = getNode();
+        if (previous == null) {
+            throw HttpResponses.notFound();
+        }
         Node result = (Node)Jenkins.XSTREAM2.fromXML(source);
-        Jenkins.get().getNodesObject().replaceNode(this.getNode(), result);
+        if (previous.getClass() != result.getClass()) {
+            // ensure node type doesn't change
+            throw HttpResponses.errorWithoutStack(SC_BAD_REQUEST, "Node types do not match");
+        }
+        Jenkins.get().getNodesObject().replaceNode(previous, result);
     }
 
     /**
diff --git a/test/src/test/java/hudson/model/ComputerConfigDotXmlSEC1721Test.java b/test/src/test/java/hudson/model/ComputerConfigDotXmlSEC1721Test.java
new file mode 100644
index 0000000000..9edf8024f7
--- /dev/null
+++ b/test/src/test/java/hudson/model/ComputerConfigDotXmlSEC1721Test.java
@@ -0,0 +1,49 @@
+package hudson.model;
+
+import com.gargoylesoftware.htmlunit.HttpMethod;
+import com.gargoylesoftware.htmlunit.WebRequest;
+import com.gargoylesoftware.htmlunit.WebResponse;
+import hudson.slaves.DumbSlave;
+import jenkins.model.Jenkins;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.TemporaryFolder;
+import org.jvnet.hudson.test.FakeLauncher;
+import org.jvnet.hudson.test.Issue;
+import org.jvnet.hudson.test.JenkinsRule;
+import org.jvnet.hudson.test.PretendSlave;
+
+import static org.hamcrest.MatcherAssert.assertThat;
+import static org.hamcrest.Matchers.*;
+
+public class ComputerConfigDotXmlSEC1721Test {
+
+    @Rule
+    public final JenkinsRule j = new JenkinsRule();
+
+    @Rule
+    public final TemporaryFolder temporaryFolder = new TemporaryFolder();
+
+    @Issue("SECURITY-1721")
+    @Test
+    public void cannotChangeNodeType() throws Exception {
+        PretendSlave agent = j.createPretendSlave(p -> new FakeLauncher.FinishedProc(0));
+        String name = agent.getNodeName();
+        assertThat(name, is(not(emptyOrNullString())));
+        Computer computer = agent.toComputer();
+        assertThat(computer, is(notNullValue()));
+
+        JenkinsRule.WebClient wc = j.createWebClient().withThrowExceptionOnFailingStatusCode(false);
+        WebRequest req = new WebRequest(wc.createCrumbedUrl(String.format("%s/config.xml", computer.getUrl())), HttpMethod.POST);
+        req.setAdditionalHeader("Content-Type", "application/xml");
+        // to ensure maximum compatibility of payload, we'll serialize a real one with the same name
+        DumbSlave mole = new DumbSlave(name, temporaryFolder.newFolder().getPath(), j.createComputerLauncher(null));
+        req.setRequestBody(Jenkins.XSTREAM.toXML(mole));
+        WebResponse response = wc.getPage(req).getWebResponse();
+        assertThat(response.getStatusCode(), is(400));
+
+        // verify node hasn't been transformed into a DumbSlave
+        Node node = j.jenkins.getNode(name);
+        assertThat(node, instanceOf(PretendSlave.class));
+    }
+}

commit dc5d0e031e6f7c49d8d9b0b3ed64e9b83d73387a
Author: velagamrakesh <velagamrakesh@gmail.com>
Date:   Wed Apr 27 19:34:05 2022 +0530

    Bugfix/zeng 257003 address security 2629 (#91)
    
     Implemented changes as recommended by Jenkins Team. Got approval for these changes for below issues
    
    https://issues.jenkins.io/browse/SECURITY-2628
    https://issues.jenkins.io/browse/SECURITY-2629
    
    Co-authored-by: rvelagam <rvelagam@IN-rvelagam-W1.adprod.bmc.com>
    Co-authored-by: rvelagam <rakesh_velagam@bmc.com>

diff --git a/src/main/java/com/compuware/ispw/git/GitToIspwPublish.java b/src/main/java/com/compuware/ispw/git/GitToIspwPublish.java
index c7cd98b..426b211 100644
--- a/src/main/java/com/compuware/ispw/git/GitToIspwPublish.java
+++ b/src/main/java/com/compuware/ispw/git/GitToIspwPublish.java
@@ -1,6 +1,7 @@
 /**
- * 
- */
+*  Copyright (c) 2020 Compuware Corporation. All rights reserved.
+* (c) Copyright 2020,2021-2022 BMC Software, Inc.
+*/
 package com.compuware.ispw.git;
 
 import java.io.IOException;
@@ -181,6 +182,13 @@ public class GitToIspwPublish extends Builder implements IGitToIspwPublish
 		public ListBoxModel doFillGitCredentialsIdItems(@AncestorInPath Jenkins context,
 				@QueryParameter String gitCredentialsId, @AncestorInPath Item project)
 		{
+			if(project == null) {
+				//Checking Permission for admin user
+				Jenkins.get().checkPermission(Jenkins.ADMINISTER);
+			}
+			else {
+				project.checkPermission(Item.CONFIGURE);				
+			}
 			return GitToIspwUtils.buildStandardCredentialsIdItems(context, gitCredentialsId, project);
 		}
 
@@ -188,12 +196,26 @@ public class GitToIspwPublish extends Builder implements IGitToIspwPublish
 		public ListBoxModel doFillConnectionIdItems(@AncestorInPath Jenkins context, @QueryParameter String connectionId,
 				@AncestorInPath Item project)
 		{
+			if(project == null) {
+				//Checking Permission for admin user
+				Jenkins.get().checkPermission(Jenkins.ADMINISTER);
+			}
+			else {
+				project.checkPermission(Item.CONFIGURE);				
+			}
 			return RestApiUtils.buildConnectionIdItems(context, connectionId, project);
 		}
 
 		public ListBoxModel doFillCredentialsIdItems(@AncestorInPath Jenkins context, @QueryParameter String credentialsId,
 				@AncestorInPath Item project)
 		{
+			if(project == null) {
+				//Checking Permission for admin user
+				Jenkins.get().checkPermission(Jenkins.ADMINISTER);
+			}
+			else {
+				project.checkPermission(Item.CONFIGURE);				
+			}
 			return GitToIspwUtils.buildStandardCredentialsIdItems(context, credentialsId, project);
 		}
 
diff --git a/src/main/java/com/compuware/ispw/git/GitToIspwPublishStep.java b/src/main/java/com/compuware/ispw/git/GitToIspwPublishStep.java
index bdb2522..32a0fae 100644
--- a/src/main/java/com/compuware/ispw/git/GitToIspwPublishStep.java
+++ b/src/main/java/com/compuware/ispw/git/GitToIspwPublishStep.java
@@ -1,3 +1,7 @@
+/**
+*  Copyright (c) 2020 Compuware Corporation. All rights reserved.
+* (c) Copyright 2020,2021-2022 BMC Software, Inc.
+*/
 package com.compuware.ispw.git;
 
 import java.io.PrintStream;
@@ -316,6 +320,13 @@ public class GitToIspwPublishStep extends AbstractStepImpl implements IGitToIspw
 		public ListBoxModel doFillGitCredentialsIdItems(@AncestorInPath Jenkins context,
 				@QueryParameter String gitCredentialsId, @AncestorInPath Item project)
 		{
+			if(project == null) {
+				//Checking Permission for admin user
+				Jenkins.get().checkPermission(Jenkins.ADMINISTER);
+			}
+			else {
+				project.checkPermission(Item.CONFIGURE);				
+			}
 			return GitToIspwUtils.buildStandardCredentialsIdItems(context, gitCredentialsId, project);
 		}
 
@@ -323,12 +334,26 @@ public class GitToIspwPublishStep extends AbstractStepImpl implements IGitToIspw
 		public ListBoxModel doFillConnectionIdItems(@AncestorInPath Jenkins context, @QueryParameter String connectionId,
 				@AncestorInPath Item project)
 		{
+			if(project == null) {
+				//Checking Permission for admin user
+				Jenkins.get().checkPermission(Jenkins.ADMINISTER);
+			}
+			else {
+				project.checkPermission(Item.CONFIGURE);				
+			}
 			return RestApiUtils.buildConnectionIdItems(context, connectionId, project);
 		}
 
 		public ListBoxModel doFillCredentialsIdItems(@AncestorInPath Jenkins context, @QueryParameter String credentialsId,
 				@AncestorInPath Item project)
 		{
+			if(project == null) {
+				//Checking Permission for admin user
+				Jenkins.get().checkPermission(Jenkins.ADMINISTER);
+			}
+			else {
+				project.checkPermission(Item.CONFIGURE);				
+			}
 			return GitToIspwUtils.buildStandardCredentialsIdItems(context, credentialsId, project);
 		}
 
diff --git a/src/main/java/com/compuware/ispw/git/RemoteSystemProperties.java b/src/main/java/com/compuware/ispw/git/RemoteSystemProperties.java
index c7eff1a..1bbeadc 100644
--- a/src/main/java/com/compuware/ispw/git/RemoteSystemProperties.java
+++ b/src/main/java/com/compuware/ispw/git/RemoteSystemProperties.java
@@ -1,7 +1,8 @@
 /**
  * The MIT License (MIT)
  * 
- * Copyright (c) 2015-2019 Compuware Corporation
+ * Copyright (c) 2015 Compuware Corporation. All rights reserved.
+ * Copyright (c) 2015,2021-2022 Compuware Corporation
  * 
  * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation
  * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy,
@@ -16,15 +17,15 @@
  */
 package com.compuware.ispw.git;
 
-import hudson.remoting.Callable;
 import java.util.Properties;
-import org.jenkinsci.remoting.RoleChecker;
+
+import jenkins.security.MasterToSlaveCallable;
 
 /**
  * Get remote system properties
  */
-public class RemoteSystemProperties implements Callable<Properties, RuntimeException>
-{
+public class RemoteSystemProperties extends MasterToSlaveCallable<Properties, RuntimeException> {
+
 	private static final long serialVersionUID = -8859580651709239685L;
 
 	public Properties call()
@@ -32,12 +33,5 @@ public class RemoteSystemProperties implements Callable<Properties, RuntimeExcep
 		return System.getProperties();
 	}
 
-	/* (non-Javadoc)
-	 * @see org.jenkinsci.remoting.RoleSensitive#checkRoles(org.jenkinsci.remoting.RoleChecker)
-	 */
-	@Override
-	public void checkRoles(RoleChecker checker)
-	{
-		// Implementation required by interface, but not using
-	}
+	
 }
diff --git a/src/main/java/com/compuware/ispw/restapi/IspwRestApiRequest.java b/src/main/java/com/compuware/ispw/restapi/IspwRestApiRequest.java
index 737170f..b073aaf 100644
--- a/src/main/java/com/compuware/ispw/restapi/IspwRestApiRequest.java
+++ b/src/main/java/com/compuware/ispw/restapi/IspwRestApiRequest.java
@@ -1,5 +1,6 @@
 /**
-* (c) Copyright 2020 BMC Software, Inc.
+*  Copyright (c) 2020 Compuware Corporation. All rights reserved.
+* (c) Copyright 2020,2021-2022 BMC Software, Inc.
 */
 package com.compuware.ispw.restapi;
 
@@ -832,11 +833,25 @@ public class IspwRestApiRequest extends Builder {
 		public ListBoxModel doFillConnectionIdItems(@AncestorInPath Jenkins context, @QueryParameter String connectionId,
 				@AncestorInPath Item project)
 		{
+			if(project == null) {
+				//Checking Permission for admin user
+				Jenkins.get().checkPermission(Jenkins.ADMINISTER);
+			}
+			else {
+				project.checkPermission(Item.CONFIGURE);				
+			}
 			return RestApiUtils.buildConnectionIdItems(context,  connectionId, project);
 		}
 		
 		public ListBoxModel doFillCredentialsIdItems(@AncestorInPath Jenkins context, @QueryParameter String credentialsId,
 				@AncestorInPath Item project) {
+			if(project == null) {
+				//Checking Permission for admin user
+				Jenkins.get().checkPermission(Jenkins.ADMINISTER);
+			}
+			else {
+				project.checkPermission(Item.CONFIGURE);				
+			}
 			return RestApiUtils.buildCredentialsIdItems(context, credentialsId, project);
 		}
 		
diff --git a/src/main/java/com/compuware/ispw/restapi/IspwRestApiRequestStep.java b/src/main/java/com/compuware/ispw/restapi/IspwRestApiRequestStep.java
index 1a12d70..bfdc91e 100644
--- a/src/main/java/com/compuware/ispw/restapi/IspwRestApiRequestStep.java
+++ b/src/main/java/com/compuware/ispw/restapi/IspwRestApiRequestStep.java
@@ -1,5 +1,6 @@
 /**
-* (c) Copyright 2020 BMC Software, Inc.
+*  Copyright (c) 2020 Compuware Corporation. All rights reserved.
+* (c) Copyright 2020,2021-2022 BMC Software, Inc.
 */
 package com.compuware.ispw.restapi;
 
@@ -295,11 +296,26 @@ public final class IspwRestApiRequestStep extends AbstractStepImpl {
 		public ListBoxModel doFillConnectionIdItems(@AncestorInPath Jenkins context, @QueryParameter String connectionId,
 				@AncestorInPath Item project)
 		{
+			
+			if(project == null) {
+				//Checking Permission for admin user
+				Jenkins.get().checkPermission(Jenkins.ADMINISTER);
+			}
+			else {
+				project.checkPermission(Item.CONFIGURE);				
+			}
 			return RestApiUtils.buildConnectionIdItems(context,  connectionId, project);
 		}
 		
 		public ListBoxModel doFillCredentialsIdItems(@AncestorInPath Jenkins context, @QueryParameter String credentialsId,
 				@AncestorInPath Item project) {
+			if(project == null) {
+				//Checking Permission for admin user
+				Jenkins.get().checkPermission(Jenkins.ADMINISTER);
+			}
+			else {
+				project.checkPermission(Item.CONFIGURE);				
+			}
 			return RestApiUtils.buildCredentialsIdItems(context, credentialsId, project);
 		
 		}

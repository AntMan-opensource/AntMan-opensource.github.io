commit e979ca8b3ccd8cf2b098533e1529d104b6bfd7da
Author: Dmitry_Platonov <platonovd32@gmail.com>
Date:   Mon Jul 18 17:33:48 2022 +0300

    Security-2762

diff --git a/src/main/java/hudson/model/ExternalJob.java b/src/main/java/hudson/model/ExternalJob.java
index 4477029..2c7ec0e 100644
--- a/src/main/java/hudson/model/ExternalJob.java
+++ b/src/main/java/hudson/model/ExternalJob.java
@@ -34,6 +34,7 @@ import jenkins.model.Jenkins;
 import org.jenkinsci.plugins.externalmonitorjob.Messages;
 import org.kohsuke.stapler.StaplerRequest;
 import org.kohsuke.stapler.StaplerResponse;
+import org.kohsuke.stapler.verb.POST;
 
 /**
  * Job that runs outside Hudson whose result is submitted to Hudson
@@ -90,6 +91,7 @@ public class ExternalJob extends ViewJob<ExternalJob,ExternalRun> implements Top
      * @param req   Remote request
      * @param rsp   Remote response
      */
+    @POST
     public void doPostBuildResult( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {
         ExternalRun run = newBuild();
         run.acceptRemoteSubmission(req.getReader());
diff --git a/src/test/java/hudson/model/Security2762Test.java b/src/test/java/hudson/model/Security2762Test.java
new file mode 100644
index 0000000..9ef8d8f
--- /dev/null
+++ b/src/test/java/hudson/model/Security2762Test.java
@@ -0,0 +1,30 @@
+package hudson.model;
+
+import com.gargoylesoftware.htmlunit.Page;
+import org.junit.Rule;
+import org.junit.Test;
+import org.jvnet.hudson.test.Issue;
+import org.jvnet.hudson.test.JenkinsRule;
+
+import java.net.HttpURLConnection;
+
+import static org.hamcrest.MatcherAssert.assertThat;
+import static org.hamcrest.Matchers.containsString;
+import static org.hamcrest.Matchers.is;
+
+public class Security2762Test {
+
+    @Rule
+    public JenkinsRule j = new JenkinsRule();
+
+    @Issue("SECURITY-2762")
+    @Test
+    public void doPostBuildResultWhenInvokedUsingGetMethodThenResourceNotFound() throws Exception {
+        j.jenkins.createProject(ExternalJob.class, "externalJob");
+        JenkinsRule.WebClient webClient = j .createWebClient().withThrowExceptionOnFailingStatusCode(false);
+        Page page = webClient.goTo("job/externalJob/postBuildResult");
+
+        assertThat(page.getWebResponse().getStatusCode(), is(HttpURLConnection.HTTP_NOT_FOUND));
+        assertThat(page.getWebResponse().getContentAsString(), containsString("Stapler processed this HTTP request as follows, but couldn't find the resource to consume the request"));
+    }
+}

commit b42d5c116473d11c79ebd2ff24e2643b9bce14d6
Author: Daniel Beck <daniel-beck@users.noreply.github.com>
Date:   Wed Mar 4 14:31:34 2020 +0100

    [SECURITY-1516]

diff --git a/src/main/java/jenkins/plugins/logstash/LogstashConfiguration.java b/src/main/java/jenkins/plugins/logstash/LogstashConfiguration.java
index f8b877e..ca088b9 100644
--- a/src/main/java/jenkins/plugins/logstash/LogstashConfiguration.java
+++ b/src/main/java/jenkins/plugins/logstash/LogstashConfiguration.java
@@ -9,6 +9,7 @@ import java.util.logging.Logger;
 
 import javax.annotation.CheckForNull;
 
+import hudson.util.Secret;
 import org.kohsuke.stapler.StaplerRequest;
 
 import com.cloudbees.syslog.MessageFormat;
@@ -162,7 +163,7 @@ public class LogstashConfiguration extends GlobalConfiguration
             redis.setHost(descriptor.getHost());
             redis.setPort(descriptor.getPort());
             redis.setKey(descriptor.getKey());
-            redis.setPassword(descriptor.getPassword());
+            redis.setPassword(Secret.fromString(descriptor.getPassword()));
             logstashIndexer = redis;
             enabled = true;
             break;
@@ -177,7 +178,7 @@ public class LogstashConfiguration extends GlobalConfiguration
               ElasticSearch es = new ElasticSearch();
               es.setUri(uri);
               es.setUsername(descriptor.getUsername());
-              es.setPassword(descriptor.getPassword());
+              es.setPassword(Secret.fromString(descriptor.getPassword()));
               logstashIndexer = es;
               enabled = true;
             }
@@ -194,7 +195,7 @@ public class LogstashConfiguration extends GlobalConfiguration
             rabbitMq.setPort(descriptor.getPort());
             rabbitMq.setQueue(descriptor.getKey());
             rabbitMq.setUsername(descriptor.getUsername());
-            rabbitMq.setPassword(descriptor.getPassword());
+            rabbitMq.setPassword(Secret.fromString(descriptor.getPassword()));
             logstashIndexer = rabbitMq;
             enabled = true;
             break;
diff --git a/src/main/java/jenkins/plugins/logstash/configuration/ElasticSearch.java b/src/main/java/jenkins/plugins/logstash/configuration/ElasticSearch.java
index 196c086..efac5c1 100644
--- a/src/main/java/jenkins/plugins/logstash/configuration/ElasticSearch.java
+++ b/src/main/java/jenkins/plugins/logstash/configuration/ElasticSearch.java
@@ -91,15 +91,15 @@ public class ElasticSearch extends LogstashIndexer<ElasticSearchDao>
     this.username = username;
   }
 
-  public String getPassword()
+  public Secret getPassword()
   {
-    return Secret.toString(password);
+    return password;
   }
 
   @DataBoundSetter
-  public void setPassword(String password)
+  public void setPassword(Secret password)
   {
-    this.password = Secret.fromString(password);
+    this.password = password;
   }
 
   @DataBoundSetter
@@ -132,7 +132,7 @@ public class ElasticSearch extends LogstashIndexer<ElasticSearchDao>
     if (getClass() != obj.getClass())
       return false;
     ElasticSearch other = (ElasticSearch) obj;
-    if (!Secret.toString(password).equals(other.getPassword()))
+    if (!Secret.toString(password).equals(other.getPassword().getPlainText()))
     {
       return false;
     }
diff --git a/src/main/java/jenkins/plugins/logstash/configuration/RabbitMq.java b/src/main/java/jenkins/plugins/logstash/configuration/RabbitMq.java
index d3c5372..7ff9866 100644
--- a/src/main/java/jenkins/plugins/logstash/configuration/RabbitMq.java
+++ b/src/main/java/jenkins/plugins/logstash/configuration/RabbitMq.java
@@ -104,15 +104,15 @@ public class RabbitMq extends HostBasedLogstashIndexer<RabbitMqDao>
     this.username = username;
   }
 
-  public String getPassword()
+  public Secret getPassword()
   {
-    return Secret.toString(password);
+    return password;
   }
 
   @DataBoundSetter
-  public void setPassword(String password)
+  public void setPassword(Secret password)
   {
-    this.password = Secret.fromString(password);
+    this.password = password;
   }
 
   @Override
@@ -125,7 +125,7 @@ public class RabbitMq extends HostBasedLogstashIndexer<RabbitMqDao>
     if (getClass() != obj.getClass())
       return false;
     RabbitMq other = (RabbitMq) obj;
-    if (!Secret.toString(password).equals(other.getPassword()))
+    if (!Secret.toString(password).equals(other.getPassword().getPlainText()))
     {
       return false;
     }
diff --git a/src/main/java/jenkins/plugins/logstash/configuration/Redis.java b/src/main/java/jenkins/plugins/logstash/configuration/Redis.java
index ebcc982..4242ca4 100644
--- a/src/main/java/jenkins/plugins/logstash/configuration/Redis.java
+++ b/src/main/java/jenkins/plugins/logstash/configuration/Redis.java
@@ -34,15 +34,15 @@ public class Redis extends HostBasedLogstashIndexer<RedisDao>
     this.key = key;
   }
 
-  public String getPassword()
+  public Secret getPassword()
   {
-    return Secret.toString(password);
+    return password;
   }
 
   @DataBoundSetter
-  public void setPassword(String password)
+  public void setPassword(Secret password)
   {
-    this.password = Secret.fromString(password);
+    this.password = password;
   }
 
   @Override
@@ -55,7 +55,7 @@ public class Redis extends HostBasedLogstashIndexer<RedisDao>
     if (getClass() != obj.getClass())
       return false;
     Redis other = (Redis) obj;
-    if (!Secret.toString(password).equals(other.getPassword()))
+    if (!Secret.toString(password).equals(other.getPassword().getPlainText()))
     {
       return false;
     }
diff --git a/src/test/java/jenkins/plugins/logstash/LogstashConfigurationMigrationTest.java b/src/test/java/jenkins/plugins/logstash/LogstashConfigurationMigrationTest.java
index 0785ffe..c8b79b5 100644
--- a/src/test/java/jenkins/plugins/logstash/LogstashConfigurationMigrationTest.java
+++ b/src/test/java/jenkins/plugins/logstash/LogstashConfigurationMigrationTest.java
@@ -82,7 +82,7 @@ public class LogstashConfigurationMigrationTest extends LogstashConfigurationTes
     assertThat(redis.getHost(),equalTo("localhost"));
     assertThat(redis.getPort(),is(4567));
     assertThat(redis.getKey(), equalTo("logstash"));
-    assertThat(redis.getPassword(), equalTo("pwd"));
+    assertThat(redis.getPassword().getPlainText(), equalTo("pwd"));
   }
 
   @Test
@@ -130,7 +130,7 @@ public class LogstashConfigurationMigrationTest extends LogstashConfigurationTes
     ElasticSearch es = (ElasticSearch) indexer;
     URI uri = new URI("http://localhost:4567/logstash");
     assertThat(es.getUri(),equalTo(uri));
-    assertThat(es.getPassword(), equalTo("pwd"));
+    assertThat(es.getPassword().getPlainText(), equalTo("pwd"));
     assertThat(es.getUsername(), equalTo("user"));
   }
 
@@ -147,7 +147,7 @@ public class LogstashConfigurationMigrationTest extends LogstashConfigurationTes
     assertThat(es.getHost(),equalTo("localhost"));
     assertThat(es.getPort(),is(4567));
     assertThat(es.getQueue(), equalTo("logstash"));
-    assertThat(es.getPassword(), equalTo("pwd"));
+    assertThat(es.getPassword().getPlainText(), equalTo("pwd"));
     assertThat(es.getUsername(), equalTo("user"));
   }
 
diff --git a/src/test/java/jenkins/plugins/logstash/configuration/ElasticSearchTest.java b/src/test/java/jenkins/plugins/logstash/configuration/ElasticSearchTest.java
index 52f1617..4e92418 100644
--- a/src/test/java/jenkins/plugins/logstash/configuration/ElasticSearchTest.java
+++ b/src/test/java/jenkins/plugins/logstash/configuration/ElasticSearchTest.java
@@ -7,6 +7,7 @@ import java.net.MalformedURLException;
 import java.net.URISyntaxException;
 import java.net.URL;
 
+import hudson.util.Secret;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
@@ -27,13 +28,13 @@ public class ElasticSearchTest
     URL url = new URL("http://localhost:4567/key");
     indexer = new ElasticSearch();
     indexer.setUri(url);
-    indexer.setPassword("password");
+    indexer.setPassword(Secret.fromString("password"));
     indexer.setUsername("user");
     indexer.setMimeType("application/json");
 
     indexer2 = new ElasticSearch();
     indexer2.setUri(url);
-    indexer2.setPassword("password");
+    indexer2.setPassword(Secret.fromString("password"));
     indexer2.setUsername("user");
     indexer2.setMimeType("application/json");
 }
@@ -47,7 +48,7 @@ public class ElasticSearchTest
   @Test
   public void passwordChangeIsNotEqual()
   {
-    indexer.setPassword("newPassword");
+    indexer.setPassword(Secret.fromString("newPassword"));
     assertThat(indexer.equals(indexer2), is(false));
   }
 
diff --git a/src/test/java/jenkins/plugins/logstash/configuration/RabbitMqTest.java b/src/test/java/jenkins/plugins/logstash/configuration/RabbitMqTest.java
index f85ae3a..18bcb32 100644
--- a/src/test/java/jenkins/plugins/logstash/configuration/RabbitMqTest.java
+++ b/src/test/java/jenkins/plugins/logstash/configuration/RabbitMqTest.java
@@ -7,6 +7,7 @@ import static org.junit.Assert.assertThat;
 import java.io.File;
 import java.nio.charset.Charset;
 
+import hudson.util.Secret;
 import org.hamcrest.core.IsInstanceOf;
 import org.junit.Before;
 import org.junit.Rule;
@@ -34,7 +35,7 @@ public class RabbitMqTest extends LogstashConfigurationTestBase
     indexer = new RabbitMq("UTF-8");
     indexer.setHost("localhost");
     indexer.setPort(4567);
-    indexer.setPassword("password");
+    indexer.setPassword(Secret.fromString("password"));
     indexer.setUsername("user");
     indexer.setQueue("queue");
     indexer.setVirtualHost("vhost");
@@ -42,7 +43,7 @@ public class RabbitMqTest extends LogstashConfigurationTestBase
     indexer2 = new RabbitMq("UTF-8");
     indexer2.setHost("localhost");
     indexer2.setPort(4567);
-    indexer2.setPassword("password");
+    indexer2.setPassword(Secret.fromString("password"));
     indexer2.setUsername("user");
     indexer2.setQueue("queue");
     indexer2.setVirtualHost("vhost");
@@ -50,7 +51,7 @@ public class RabbitMqTest extends LogstashConfigurationTestBase
     indexer3 = new RabbitMq("UTF-16");
     indexer3.setHost("localhost");
     indexer3.setPort(4567);
-    indexer3.setPassword("password");
+    indexer3.setPassword(Secret.fromString("password"));
     indexer3.setUsername("user");
     indexer3.setQueue("queue");
     indexer3.setQueue("vhost");
@@ -65,7 +66,7 @@ public class RabbitMqTest extends LogstashConfigurationTestBase
   @Test
   public void passwordChangeIsNotEqual()
   {
-    indexer.setPassword("newPassword");
+    indexer.setPassword(Secret.fromString("newPassword"));
     assertThat(indexer.equals(indexer2), is(false));
   }
 
diff --git a/src/test/java/jenkins/plugins/logstash/configuration/RedisTest.java b/src/test/java/jenkins/plugins/logstash/configuration/RedisTest.java
index 14d2f92..e9747dd 100644
--- a/src/test/java/jenkins/plugins/logstash/configuration/RedisTest.java
+++ b/src/test/java/jenkins/plugins/logstash/configuration/RedisTest.java
@@ -3,6 +3,7 @@ package jenkins.plugins.logstash.configuration;
 import static org.hamcrest.Matchers.is;
 import static org.junit.Assert.assertThat;
 
+import hudson.util.Secret;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
@@ -24,13 +25,13 @@ public class RedisTest
     indexer.setHost("localhost");
     indexer.setPort(4567);
     indexer.setKey("key");
-    indexer.setPassword("password");
+    indexer.setPassword(Secret.fromString("password"));
 
     indexer2 = new Redis();
     indexer2.setHost("localhost");
     indexer2.setPort(4567);
     indexer2.setKey("key");
-    indexer2.setPassword("password");
+    indexer2.setPassword(Secret.fromString("password"));
 }
 
   @Test
@@ -42,7 +43,7 @@ public class RedisTest
   @Test
   public void passwordChangeIsNotEqual()
   {
-    indexer.setPassword("newPassword");
+    indexer.setPassword(Secret.fromString("newPassword"));
     assertThat(indexer.equals(indexer2), is(false));
   }
 

commit 3de127e19416f55529b74a85f68b63a8218e10e4
Author: Daniel Couso <daniel.couso@liferay.com>
Date:   Thu May 14 10:27:38 2020 +0200

    LPS-113656 Prevent other users from viewing submissions that have not been sent by them

diff --git a/modules/apps/portal-workflow/portal-workflow-web/src/main/java/com/liferay/portal/workflow/web/internal/portlet/BaseWorkflowPortlet.java b/modules/apps/portal-workflow/portal-workflow-web/src/main/java/com/liferay/portal/workflow/web/internal/portlet/BaseWorkflowPortlet.java
index eed049cf4e204..a6f226639a24e 100644
--- a/modules/apps/portal-workflow/portal-workflow-web/src/main/java/com/liferay/portal/workflow/web/internal/portlet/BaseWorkflowPortlet.java
+++ b/modules/apps/portal-workflow/portal-workflow-web/src/main/java/com/liferay/portal/workflow/web/internal/portlet/BaseWorkflowPortlet.java
@@ -17,6 +17,7 @@ package com.liferay.portal.workflow.web.internal.portlet;
 import com.liferay.osgi.service.tracker.collections.map.ServiceTrackerMap;
 import com.liferay.osgi.service.tracker.collections.map.ServiceTrackerMapFactory;
 import com.liferay.portal.kernel.portlet.bridges.mvc.MVCPortlet;
+import com.liferay.portal.kernel.servlet.SessionErrors;
 import com.liferay.portal.kernel.util.ParamUtil;
 import com.liferay.portal.workflow.constants.WorkflowWebKeys;
 import com.liferay.portal.workflow.portlet.tab.WorkflowPortletTab;
@@ -72,7 +73,9 @@ public abstract class BaseWorkflowPortlet extends MVCPortlet {
 				actionRequest, actionResponse);
 		}
 
-		super.processAction(actionRequest, actionResponse);
+		if (SessionErrors.isEmpty(actionRequest)) {
+			super.processAction(actionRequest, actionResponse);
+		}
 	}
 
 	@Override
diff --git a/modules/apps/portal-workflow/portal-workflow-web/src/main/java/com/liferay/portal/workflow/web/internal/portlet/tab/MyWorkflowInstancePortletTab.java b/modules/apps/portal-workflow/portal-workflow-web/src/main/java/com/liferay/portal/workflow/web/internal/portlet/tab/MyWorkflowInstancePortletTab.java
index 989a1cff5f094..b6d57cd5baf3d 100644
--- a/modules/apps/portal-workflow/portal-workflow-web/src/main/java/com/liferay/portal/workflow/web/internal/portlet/tab/MyWorkflowInstancePortletTab.java
+++ b/modules/apps/portal-workflow/portal-workflow-web/src/main/java/com/liferay/portal/workflow/web/internal/portlet/tab/MyWorkflowInstancePortletTab.java
@@ -14,9 +14,38 @@
 
 package com.liferay.portal.workflow.web.internal.portlet.tab;
 
+import com.liferay.petra.string.StringBundler;
+import com.liferay.portal.kernel.exception.PortalException;
+import com.liferay.portal.kernel.log.Log;
+import com.liferay.portal.kernel.log.LogFactoryUtil;
+import com.liferay.portal.kernel.model.User;
+import com.liferay.portal.kernel.security.auth.PrincipalException;
+import com.liferay.portal.kernel.servlet.SessionErrors;
+import com.liferay.portal.kernel.theme.ThemeDisplay;
+import com.liferay.portal.kernel.util.GetterUtil;
+import com.liferay.portal.kernel.util.ParamUtil;
+import com.liferay.portal.kernel.util.WebKeys;
+import com.liferay.portal.kernel.workflow.WorkflowConstants;
+import com.liferay.portal.kernel.workflow.WorkflowException;
+import com.liferay.portal.kernel.workflow.WorkflowInstance;
+import com.liferay.portal.kernel.workflow.WorkflowInstanceManagerUtil;
 import com.liferay.portal.workflow.constants.WorkflowWebKeys;
 import com.liferay.portal.workflow.portlet.tab.WorkflowPortletTab;
 
+import java.io.Serializable;
+
+import java.util.Map;
+
+import javax.portlet.ActionRequest;
+import javax.portlet.ActionResponse;
+import javax.portlet.PortletContext;
+import javax.portlet.PortletException;
+import javax.portlet.PortletRequest;
+import javax.portlet.PortletRequestDispatcher;
+import javax.portlet.PortletSession;
+import javax.portlet.RenderRequest;
+import javax.portlet.RenderResponse;
+
 import org.osgi.service.component.annotations.Component;
 
 /**
@@ -34,4 +63,139 @@ public class MyWorkflowInstancePortletTab extends WorkflowInstancePortletTab {
 		return WorkflowWebKeys.WORKFLOW_TAB_MY_SUBMISSIONS;
 	}
 
+	@Override
+	public void prepareDispatch(
+			RenderRequest renderRequest, RenderResponse renderResponse)
+		throws PortletException {
+
+		if (SessionErrors.contains(
+				renderRequest, PrincipalException.getNestedClasses()) ||
+			SessionErrors.contains(
+				renderRequest, WorkflowException.class.getName())) {
+
+			PortletSession portletSession = renderRequest.getPortletSession();
+
+			PortletContext portletContext = portletSession.getPortletContext();
+
+			PortletRequestDispatcher portletRequestDispatcher =
+				portletContext.getRequestDispatcher("/instance/error.jsp");
+
+			try {
+				if (SessionErrors.contains(
+						renderRequest, PrincipalException.getNestedClasses())) {
+
+					portletRequestDispatcher.forward(
+						renderRequest, renderResponse);
+				}
+				else {
+					portletRequestDispatcher.include(
+						renderRequest, renderResponse);
+				}
+			}
+			catch (Exception exception) {
+				throw new PortletException(exception);
+			}
+		}
+
+		super.prepareDispatch(renderRequest, renderResponse);
+	}
+
+	@Override
+	public void prepareProcessAction(
+			ActionRequest actionRequest, ActionResponse actionResponse)
+		throws PortletException {
+
+		long workflowInstanceId = ParamUtil.getLong(
+			actionRequest, "workflowInstanceId");
+
+		try {
+			_checkWorkflowInstance(actionRequest, workflowInstanceId);
+		}
+		catch (Exception exception) {
+			if (workflowPreprocessorHelper.isSessionErrorException(exception)) {
+				if (_log.isWarnEnabled()) {
+					_log.warn(exception, exception);
+				}
+
+				workflowPreprocessorHelper.hideDefaultErrorMessage(
+					actionRequest);
+
+				SessionErrors.add(actionRequest, exception.getClass());
+			}
+			else {
+				throw new PortletException(exception);
+			}
+		}
+
+		super.prepareProcessAction(actionRequest, actionResponse);
+	}
+
+	@Override
+	protected void setWorkflowInstanceRenderRequestAttribute(
+			RenderRequest renderRequest)
+		throws PortalException {
+
+		super.setWorkflowInstanceRenderRequestAttribute(renderRequest);
+
+		WorkflowInstance workflowInstance =
+			(WorkflowInstance)renderRequest.getAttribute(
+				WebKeys.WORKFLOW_INSTANCE);
+
+		_checkWorkflowInstance(renderRequest, workflowInstance);
+	}
+
+	private void _checkWorkflowInstance(
+			PortletRequest portletRequest, long workflowInstanceId)
+		throws PrincipalException, WorkflowException {
+
+		ThemeDisplay themeDisplay = (ThemeDisplay)portletRequest.getAttribute(
+			WebKeys.THEME_DISPLAY);
+
+		WorkflowInstance workflowInstance =
+			WorkflowInstanceManagerUtil.getWorkflowInstance(
+				themeDisplay.getCompanyId(), workflowInstanceId);
+
+		_checkWorkflowInstance(portletRequest, workflowInstance);
+	}
+
+	private void _checkWorkflowInstance(
+			PortletRequest portletRequest, WorkflowInstance workflowInstance)
+		throws PrincipalException {
+
+		if (workflowInstance == null) {
+			return;
+		}
+
+		Map<String, Serializable> workflowContext =
+			workflowInstance.getWorkflowContext();
+
+		long companyId = GetterUtil.getLong(
+			workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
+		long userId = GetterUtil.getLong(
+			workflowContext.get(WorkflowConstants.CONTEXT_USER_ID));
+
+		ThemeDisplay themeDisplay = (ThemeDisplay)portletRequest.getAttribute(
+			WebKeys.THEME_DISPLAY);
+
+		User user = themeDisplay.getUser();
+
+		if ((user.getCompanyId() != companyId) ||
+			(user.getUserId() != userId)) {
+
+			StringBundler sb = new StringBundler(4);
+
+			sb.append("User ");
+			sb.append(userId);
+			sb.append(" is not allowed to access workflow instance ");
+			sb.append(workflowInstance.getWorkflowInstanceId());
+
+			_log.error(sb.toString());
+
+			throw new PrincipalException();
+		}
+	}
+
+	private static final Log _log = LogFactoryUtil.getLog(
+		MyWorkflowInstancePortletTab.class);
+
 }
\ No newline at end of file
diff --git a/modules/apps/portal-workflow/portal-workflow-web/src/main/java/com/liferay/portal/workflow/web/internal/portlet/tab/WorkflowInstancePortletTab.java b/modules/apps/portal-workflow/portal-workflow-web/src/main/java/com/liferay/portal/workflow/web/internal/portlet/tab/WorkflowInstancePortletTab.java
index 404018b1f98e7..1a01d8e609051 100644
--- a/modules/apps/portal-workflow/portal-workflow-web/src/main/java/com/liferay/portal/workflow/web/internal/portlet/tab/WorkflowInstancePortletTab.java
+++ b/modules/apps/portal-workflow/portal-workflow-web/src/main/java/com/liferay/portal/workflow/web/internal/portlet/tab/WorkflowInstancePortletTab.java
@@ -86,7 +86,8 @@ public class WorkflowInstancePortletTab extends BaseWorkflowPortletTab {
 
 	@Override
 	public void prepareProcessAction(
-		ActionRequest actionRequest, ActionResponse actionResponse) {
+			ActionRequest actionRequest, ActionResponse actionResponse)
+		throws PortletException {
 
 		String actionName = ParamUtil.getString(
 			actionRequest, ActionRequest.ACTION_NAME);

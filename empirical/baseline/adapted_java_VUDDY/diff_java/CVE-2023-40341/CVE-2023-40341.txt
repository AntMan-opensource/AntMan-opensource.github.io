commit 76193f5bf475050b8e66b1c7c2f79ce57fc7c50c
Author: ampuscas <apuscas@cloudbees.com>
Date:   Thu Jul 6 15:21:12 2023 +0200

    SECURITY-3116

diff --git a/blueocean-github-pipeline/src/main/java/io/jenkins/blueocean/blueocean_github_pipeline/GithubScm.java b/blueocean-github-pipeline/src/main/java/io/jenkins/blueocean/blueocean_github_pipeline/GithubScm.java
index 5d9ec4f2e..ec0ed9942 100644
--- a/blueocean-github-pipeline/src/main/java/io/jenkins/blueocean/blueocean_github_pipeline/GithubScm.java
+++ b/blueocean-github-pipeline/src/main/java/io/jenkins/blueocean/blueocean_github_pipeline/GithubScm.java
@@ -170,7 +170,7 @@ public class GithubScm extends AbstractScm {
     @GET
     @WebMethod(name = "repository")
     @TreeResponse
-    public GithubRepository getRepository(@QueryParameter String jobName, @QueryParameter String apiUrl) {
+    public GithubRepository getRepository(@QueryParameter String jobName) {
         Item item = Jenkins.get().getItem( jobName);
         if (item == null){
             throw new ServiceException.NotFoundException(String.format("Job %s not found", jobName));
@@ -186,7 +186,7 @@ public class GithubScm extends AbstractScm {
         String accessToken = credential.getPassword().getPlainText();
 
         try {
-            String url = String.format("%s/repos/%s/%s", apiUrl, repoOwner, repoName);
+            String url = String.format("%s/repos/%s/%s", gitHubSCMSource.getApiUri(), repoOwner, repoName);
             GHRepository ghRepository = HttpRequest.get(url).withAuthorizationToken(accessToken).to(GHRepository.class);
             return new GithubRepository(ghRepository, credential, this);
         } catch (IOException e) {

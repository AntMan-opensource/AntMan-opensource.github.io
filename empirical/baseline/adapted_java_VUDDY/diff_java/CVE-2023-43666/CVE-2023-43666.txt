commit 6b50691690f315cb2b57255be9207621831b385a
Author: Hao <1780095+hnrainll@users.noreply.github.com>
Date:   Wed Aug 2 14:27:07 2023 +0800

    [INLONG-8622][Manager] User API Permissions Optimization (#8623)

diff --git a/inlong-manager/manager-web/src/main/java/org/apache/inlong/manager/web/controller/UserController.java b/inlong-manager/manager-web/src/main/java/org/apache/inlong/manager/web/controller/UserController.java
index 8d5d39f60..340f55c93 100644
--- a/inlong-manager/manager-web/src/main/java/org/apache/inlong/manager/web/controller/UserController.java
+++ b/inlong-manager/manager-web/src/main/java/org/apache/inlong/manager/web/controller/UserController.java
@@ -27,6 +27,7 @@ import org.apache.inlong.manager.service.user.UserService;
 
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiOperation;
+import org.apache.shiro.authz.annotation.Logical;
 import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.validation.annotation.Validated;
@@ -74,12 +75,14 @@ public class UserController {
 
     @GetMapping("/user/getByName/{name}")
     @ApiOperation(value = "Get user by name")
+    @RequiresRoles(logical = Logical.OR, value = {UserRoleCode.INLONG_ADMIN, UserRoleCode.INLONG_OPERATOR})
     public Response<UserInfo> getByName(@PathVariable String name) {
         return Response.success(userService.getByName(name));
     }
 
     @PostMapping("/user/listAll")
     @ApiOperation(value = "List all users")
+    @RequiresRoles(logical = Logical.OR, value = {UserRoleCode.INLONG_ADMIN, UserRoleCode.TENANT_ADMIN})
     public Response<PageResult<UserInfo>> list(@RequestBody UserRequest request) {
         return Response.success(userService.list(request));
     }
@@ -93,7 +96,7 @@ public class UserController {
 
     @DeleteMapping("/user/delete")
     @ApiOperation(value = "Delete user by id")
-    @RequiresRoles(value = UserRoleCode.TENANT_ADMIN)
+    @RequiresRoles(value = UserRoleCode.INLONG_ADMIN)
     public Response<Boolean> delete(@RequestParam("id") Integer id) {
         String currentUser = LoginUserUtils.getLoginUser().getName();
         return Response.success(userService.delete(id, currentUser));

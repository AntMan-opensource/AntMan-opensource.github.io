commit b6db35e432e62fdff0447cf513369f0b8a848abf
Author: Fabian Diet <fabian.diet@spaceapplications.com>
Date:   Sat Oct 7 16:55:51 2023 +0200

    Fix traversal vuln. on fs buckets. Reported by @visionspacetec

diff --git a/yamcs-core/src/main/java/org/yamcs/yarch/FileSystemBucket.java b/yamcs-core/src/main/java/org/yamcs/yarch/FileSystemBucket.java
index 870ab3c4a..e953c1782 100644
--- a/yamcs-core/src/main/java/org/yamcs/yarch/FileSystemBucket.java
+++ b/yamcs-core/src/main/java/org/yamcs/yarch/FileSystemBucket.java
@@ -142,11 +142,7 @@ public class FileSystemBucket implements Bucket {
             throws IOException {
         // TODO: do something with metadata
 
-        // Prevent directory traversal
-        Path path = root.resolve(objectName);
-        if (!path.toFile().getCanonicalPath().startsWith(root.toFile().getCanonicalPath())) {
-            throw new IOException("Directory traversal attempted: " + path);
-        }
+        Path path = resolvePath(objectName);
 
         if (objectName.endsWith("/")) {
             if (!Files.exists(path)) {
@@ -192,7 +188,7 @@ public class FileSystemBucket implements Bucket {
 
     @Override
     public byte[] getObject(String objectName) throws IOException {
-        Path path = root.resolve(objectName);
+        Path path = resolvePath(objectName);
         if (Files.exists(path)) {
             return Files.readAllBytes(path);
         } else {
@@ -202,13 +198,13 @@ public class FileSystemBucket implements Bucket {
 
     @Override
     public void deleteObject(String objectName) throws IOException {
-        Path path = root.resolve(objectName);
+        Path path = resolvePath(objectName);
         Files.delete(path);
     }
 
     @Override
     public ObjectProperties findObject(String objectName) throws IOException {
-        Path path = root.resolve(objectName);
+        Path path = resolvePath(objectName);
         if (Files.exists(path)) {
             BasicFileAttributes attrs = Files.readAttributes(path, BasicFileAttributes.class);
             return toObjectProperties(objectName, path, attrs);
@@ -217,6 +213,17 @@ public class FileSystemBucket implements Bucket {
         }
     }
 
+    private Path resolvePath(String objectName) throws IOException {
+        Path path = root.resolve(objectName);
+
+        // Prevent directory traversal
+        if (!path.toFile().getCanonicalPath().startsWith(root.toFile().getCanonicalPath())) {
+            throw new IOException("Directory traversal attempted: " + path);
+        }
+
+        return path;
+    }
+
     public Path getBucketRoot() {
         return root;
     }

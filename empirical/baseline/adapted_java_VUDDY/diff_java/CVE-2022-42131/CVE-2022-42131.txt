commit cacbd9dd45963a5a4770f507fa4819ca41b6359a
Author: Rodrigo Paulino <rodrigo.paulino@liferay.com>
Date:   Fri Sep 17 18:59:27 2021 -0300

    LPS-138332 Given key store was being overriden by init call, so loadTrustMaterial call is useless. Also, give the option of being secure to the trust manager instead of always trusting self signed certificates

diff --git a/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/BaseJSONWebServiceClientImpl.java b/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/BaseJSONWebServiceClientImpl.java
index 3775195d8cfa0..a40b2f72db434 100644
--- a/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/BaseJSONWebServiceClientImpl.java
+++ b/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/BaseJSONWebServiceClientImpl.java
@@ -75,7 +75,6 @@ import org.apache.http.client.protocol.HttpClientContext;
 import org.apache.http.client.utils.URLEncodedUtils;
 import org.apache.http.config.Registry;
 import org.apache.http.config.RegistryBuilder;
-import org.apache.http.conn.ssl.TrustSelfSignedStrategy;
 import org.apache.http.entity.StringEntity;
 import org.apache.http.impl.auth.BasicScheme;
 import org.apache.http.impl.client.BasicAuthCache;
@@ -710,6 +709,13 @@ public abstract class BaseJSONWebServiceClientImpl
 		_proxyWorkstation = proxyWorkstation;
 	}
 
+	@Override
+	public void setTrustSelfSignedCertificates(
+		boolean trustSelfSignedCertificates) {
+
+		_trustSelfSignedCertificates = trustSelfSignedCertificates;
+	}
+
 	protected BaseJSONWebServiceClientImpl() {
 		_objectMapper.configure(
 			DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
@@ -898,13 +904,15 @@ public abstract class BaseJSONWebServiceClientImpl
 		SSLContext sslContext = null;
 
 		try {
-			sslContextBuilder.loadTrustMaterial(
-				_keyStore, new TrustSelfSignedStrategy());
-
 			sslContext = sslContextBuilder.build();
 
 			sslContext.init(
-				null, new TrustManager[] {new X509TrustManagerImpl()}, null);
+				null,
+				new TrustManager[] {
+					new X509TrustManagerImpl(
+						_keyStore, _trustSelfSignedCertificates)
+				},
+				null);
 		}
 		catch (Exception exception) {
 			throw new RuntimeException(exception);
@@ -1213,5 +1221,6 @@ public abstract class BaseJSONWebServiceClientImpl
 	private String _proxyLogin;
 	private String _proxyPassword;
 	private String _proxyWorkstation;
+	private boolean _trustSelfSignedCertificates = true;
 
 }
\ No newline at end of file
diff --git a/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/JSONWebServiceClient.java b/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/JSONWebServiceClient.java
index e4bc6c99f3b9e..accb701b3991e 100644
--- a/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/JSONWebServiceClient.java
+++ b/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/JSONWebServiceClient.java
@@ -183,4 +183,8 @@ public interface JSONWebServiceClient {
 
 	public void setProtocol(String protocol);
 
+	public default void setTrustSelfSignedCertificates(
+		boolean trustSelfSignedCertificates) {
+	}
+
 }
\ No newline at end of file
diff --git a/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/internal/JSONWebServiceClientImpl.java b/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/internal/JSONWebServiceClientImpl.java
index a9a589098defb..060574a3b3d5e 100644
--- a/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/internal/JSONWebServiceClientImpl.java
+++ b/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/internal/JSONWebServiceClientImpl.java
@@ -81,6 +81,11 @@ public class JSONWebServiceClientImpl extends BaseJSONWebServiceClientImpl {
 			setProxyPassword(getString("proxyPassword", properties));
 		}
 
+		if (properties.containsKey("trustSelfSignedCertificates")) {
+			setTrustSelfSignedCertificates(
+				(boolean)properties.get("trustSelfSignedCertificates"));
+		}
+
 		afterPropertiesSet();
 	}
 
diff --git a/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/internal/X509TrustManagerImpl.java b/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/internal/X509TrustManagerImpl.java
index 762df592e2b94..5880721067fea 100644
--- a/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/internal/X509TrustManagerImpl.java
+++ b/modules/apps/petra/petra-json-web-service-client/src/main/java/com/liferay/petra/json/web/service/client/internal/X509TrustManagerImpl.java
@@ -14,6 +14,8 @@
 
 package com.liferay.petra.json.web.service.client.internal;
 
+import com.liferay.portal.kernel.util.ArrayUtil;
+
 import java.security.KeyStore;
 import java.security.cert.CertificateException;
 import java.security.cert.X509Certificate;
@@ -30,25 +32,29 @@ public class X509TrustManagerImpl implements X509TrustManager {
 
 	public X509TrustManagerImpl() {
 		try {
-			X509TrustManager x509TrustManager = null;
-
-			TrustManagerFactory trustManagerFactory =
-				TrustManagerFactory.getInstance(
-					TrustManagerFactory.getDefaultAlgorithm());
-
-			trustManagerFactory.init((KeyStore)null);
+			_defaultX509TrustManager = _getX509TrustManager(null);
+			_extraX509TrustManager = null;
+			_trustSelfSignedCertificates = true;
+		}
+		catch (Exception exception) {
+			throw new RuntimeException(exception);
+		}
+	}
 
-			for (TrustManager trustManager :
-					trustManagerFactory.getTrustManagers()) {
+	public X509TrustManagerImpl(
+		KeyStore keyStore, boolean trustSelfSignedCertificates) {
 
-				if (trustManager instanceof X509TrustManager) {
-					x509TrustManager = (X509TrustManager)trustManager;
+		try {
+			_defaultX509TrustManager = _getX509TrustManager(null);
 
-					break;
-				}
+			if (keyStore != null) {
+				_extraX509TrustManager = _getX509TrustManager(keyStore);
+			}
+			else {
+				_extraX509TrustManager = null;
 			}
 
-			_x509TrustManager = x509TrustManager;
+			_trustSelfSignedCertificates = trustSelfSignedCertificates;
 		}
 		catch (Exception exception) {
 			throw new RuntimeException(exception);
@@ -60,8 +66,20 @@ public class X509TrustManagerImpl implements X509TrustManager {
 			X509Certificate[] x509Certificates, String authType)
 		throws CertificateException {
 
-		if (x509Certificates.length != 1) {
-			_x509TrustManager.checkClientTrusted(x509Certificates, authType);
+		if (!_trustSelfSignedCertificates || (x509Certificates.length != 1)) {
+			try {
+				_defaultX509TrustManager.checkClientTrusted(
+					x509Certificates, authType);
+			}
+			catch (CertificateException certificateException) {
+				if (_extraX509TrustManager != null) {
+					_extraX509TrustManager.checkClientTrusted(
+						x509Certificates, authType);
+				}
+				else {
+					throw certificateException;
+				}
+			}
 		}
 	}
 
@@ -70,16 +88,56 @@ public class X509TrustManagerImpl implements X509TrustManager {
 			X509Certificate[] x509Certificates, String authType)
 		throws CertificateException {
 
-		if (x509Certificates.length != 1) {
-			_x509TrustManager.checkServerTrusted(x509Certificates, authType);
+		if (!_trustSelfSignedCertificates || (x509Certificates.length != 1)) {
+			try {
+				_defaultX509TrustManager.checkServerTrusted(
+					x509Certificates, authType);
+			}
+			catch (CertificateException certificateException) {
+				if (_extraX509TrustManager != null) {
+					_extraX509TrustManager.checkServerTrusted(
+						x509Certificates, authType);
+				}
+				else {
+					throw certificateException;
+				}
+			}
 		}
 	}
 
 	@Override
 	public X509Certificate[] getAcceptedIssuers() {
-		return _x509TrustManager.getAcceptedIssuers();
+		if (_extraX509TrustManager != null) {
+			return ArrayUtil.append(
+				_defaultX509TrustManager.getAcceptedIssuers(),
+				_extraX509TrustManager.getAcceptedIssuers());
+		}
+
+		return _defaultX509TrustManager.getAcceptedIssuers();
+	}
+
+	private X509TrustManager _getX509TrustManager(KeyStore keyStore)
+		throws Exception {
+
+		TrustManagerFactory trustManagerFactory =
+			TrustManagerFactory.getInstance(
+				TrustManagerFactory.getDefaultAlgorithm());
+
+		trustManagerFactory.init(keyStore);
+
+		for (TrustManager trustManager :
+				trustManagerFactory.getTrustManagers()) {
+
+			if (trustManager instanceof X509TrustManager) {
+				return (X509TrustManager)trustManager;
+			}
+		}
+
+		return null;
 	}
 
-	private final X509TrustManager _x509TrustManager;
+	private final X509TrustManager _defaultX509TrustManager;
+	private final X509TrustManager _extraX509TrustManager;
+	private final boolean _trustSelfSignedCertificates;
 
 }
\ No newline at end of file

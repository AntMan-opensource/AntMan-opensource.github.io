commit a146c28c849ffe643ece46eaa5940d1fd6ab048e
Author: Adrien Lecharpentier <adrien.lecharpentier@gmail.com>
Date:   Thu May 6 14:40:35 2021 +0200

    [SECURITY-2200]

diff --git a/src/main/java/hudson/plugins/s3/S3ArtifactsAction.java b/src/main/java/hudson/plugins/s3/S3ArtifactsAction.java
index 1f4608a..84676e7 100644
--- a/src/main/java/hudson/plugins/s3/S3ArtifactsAction.java
+++ b/src/main/java/hudson/plugins/s3/S3ArtifactsAction.java
@@ -3,6 +3,7 @@ package hudson.plugins.s3;
 import java.io.File;
 import java.io.IOException;
 
+import java.util.Collections;
 import java.util.Date;
 import java.util.List;
 
@@ -11,6 +12,7 @@ import javax.servlet.ServletException;
 import com.amazonaws.services.s3.AmazonS3Client;
 import com.amazonaws.services.s3.model.GeneratePresignedUrlRequest;
 import com.amazonaws.services.s3.model.ResponseHeaderOverrides;
+import hudson.Functions;
 import jenkins.model.RunAction2;
 import org.kohsuke.stapler.StaplerRequest;
 import org.kohsuke.stapler.StaplerResponse;
@@ -39,7 +41,7 @@ public class S3ArtifactsAction implements RunAction2 {
     }
 
     public String getIconFileName() {
-        return "fingerprint.png";
+        return hasAccess() ? "fingerprint.png" : null;
     }
 
     public String getDisplayName() {
@@ -47,7 +49,11 @@ public class S3ArtifactsAction implements RunAction2 {
     }
 
     public String getUrlName() {
-        return "s3";
+        return hasAccess() ? "s3" : null;
+    }
+
+    private boolean hasAccess () {
+        return !Functions.isArtifactsPermissionEnabled() || build.getParent().hasPermission(Run.ARTIFACTS);
     }
 
     @Override
@@ -63,10 +69,16 @@ public class S3ArtifactsAction implements RunAction2 {
 
     @Exported
     public List<FingerprintRecord> getArtifacts() {
+        if (!hasAccess()) {
+            return Collections.emptyList();
+        }
         return artifacts;
     }
 
     public void doDownload(final StaplerRequest request, final StaplerResponse response) throws IOException, ServletException {
+        if (Functions.isArtifactsPermissionEnabled()) {
+            build.getParent().checkPermission(Run.ARTIFACTS);
+        }
         final String restOfPath = request.getRestOfPath();
         if (restOfPath == null) {
             return;
diff --git a/src/main/java/hudson/plugins/s3/S3ArtifactsProjectAction.java b/src/main/java/hudson/plugins/s3/S3ArtifactsProjectAction.java
index ff2e560..4659ac6 100644
--- a/src/main/java/hudson/plugins/s3/S3ArtifactsProjectAction.java
+++ b/src/main/java/hudson/plugins/s3/S3ArtifactsProjectAction.java
@@ -2,6 +2,7 @@ package hudson.plugins.s3;
 
 import java.util.List;
 
+import hudson.Functions;
 import hudson.model.Action;
 import hudson.model.AbstractProject;
 import hudson.model.Run;
@@ -20,6 +21,9 @@ public class S3ArtifactsProjectAction implements Action {
 
     @SuppressWarnings("unused")
     public S3ArtifactsAction getLatestDeployedArtifacts() {
+        if (Functions.isArtifactsPermissionEnabled() && !project.hasPermission(Run.ARTIFACTS)) {
+            return null;
+        }
         Run latestSuccessfulBuild = getLastSuccessfulBuild();
         if (latestSuccessfulBuild == null) {
             return null;
@@ -51,4 +55,4 @@ public class S3ArtifactsProjectAction implements Action {
     public String getUrlName() {
         return null;
     }
-}
\ No newline at end of file
+}

commit f2279b76827f32190adfa9bd5229b7d5a147fa92
Author: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
Date:   Sat Jul 30 01:40:45 2022 +0000

    vuln-fix: Zip Slip Vulnerability
    
    This fixes a Zip-Slip vulnerability.
    
    This change does one of two things. This change either
    
    1. Inserts a guard to protect against Zip Slip.
    OR
    2. Replaces `dir.getCanonicalPath().startsWith(parent.getCanonicalPath())`, which is vulnerable to partial path traversal attacks, with the more secure `dir.getCanonicalFile().toPath().startsWith(parent.getCanonicalFile().toPath())`.
    
    For number 2, consider `"/usr/outnot".startsWith("/usr/out")`.
    The check is bypassed although `/outnot` is not under the `/out` directory.
    It's important to understand that the terminating slash may be removed when using various `String` representations of the `File` object.
    For example, on Linux, `println(new File("/var"))` will print `/var`, but `println(new File("/var", "/")` will print `/var/`;
    however, `println(new File("/var", "/").getCanonicalPath())` will print `/var`.
    
    Weakness: CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')
    Severity: High
    CVSSS: 7.4
    Detection: CodeQL (https://codeql.github.com/codeql-query-help/java/java-zipslip/) & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.ZipSlip)
    
    Reported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
    Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
    
    Bug-tracker: https://github.com/JLLeitschuh/security-research/issues/16
    
    Co-authored-by: Moderne <team@moderne.io>

diff --git a/src/main/java/widoco/WidocoUtils.java b/src/main/java/widoco/WidocoUtils.java
index 1053376..0e6bf82 100644
--- a/src/main/java/widoco/WidocoUtils.java
+++ b/src/main/java/widoco/WidocoUtils.java
@@ -257,7 +257,10 @@ public class WidocoUtils {
 
 			while (ze != null) {
 				String fileName = ze.getName();
-				File newFile = new File(outputFolder + File.separator + fileName);
+				File newFile = new File(outputFolder, fileName);
+				if (!newFile.toPath().normalize().startsWith(outputFolder)) {
+					throw new RuntimeException("Bad zip entry");
+				}
 				// System.out.println("file unzip : "+ newFile.getAbsoluteFile());
 				if (ze.isDirectory()) {
 					String temp = newFile.getAbsolutePath();

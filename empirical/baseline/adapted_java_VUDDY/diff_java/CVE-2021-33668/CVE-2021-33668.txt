commit 1f24c1be290f677535d35854a89a19ab8baa133e
Author: Karaimin <aleyidin.karaimin@sap.com>
Date:   Thu Feb 11 11:46:03 2021 +0200

    change password handling

diff --git a/scimono-client/src/main/java/com/sap/scimono/client/ClientJacksonResolver.java b/scimono-client/src/main/java/com/sap/scimono/client/ClientJacksonResolver.java
new file mode 100644
index 0000000..d3c6c1c
--- /dev/null
+++ b/scimono-client/src/main/java/com/sap/scimono/client/ClientJacksonResolver.java
@@ -0,0 +1,29 @@
+package com.sap.scimono.client;
+
+import static com.fasterxml.jackson.annotation.JsonProperty.Access.READ_WRITE;
+import static com.sap.scimono.api.API.APPLICATION_JSON_SCIM;
+
+import javax.ws.rs.Consumes;
+import javax.ws.rs.Produces;
+import javax.ws.rs.ext.ContextResolver;
+
+import com.fasterxml.jackson.annotation.JsonProperty;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.sap.scimono.api.helper.ObjectMapperFactory;
+import com.sap.scimono.entity.User;
+
+@Consumes(APPLICATION_JSON_SCIM)
+@Produces(APPLICATION_JSON_SCIM)
+public class ClientJacksonResolver implements ContextResolver<ObjectMapper> {
+  @Override
+  public ObjectMapper getContext(Class<?> type) {
+    ObjectMapper mapper = ObjectMapperFactory.createObjectMapper();
+    mapper.addMixIn(User.class, UserWithSerializablePassword.class);
+    return mapper;
+  }
+
+  private static class UserWithSerializablePassword {
+    @JsonProperty(access = READ_WRITE)
+    private String password;
+  }
+}
diff --git a/scimono-client/src/main/java/com/sap/scimono/client/SCIMClientService.java b/scimono-client/src/main/java/com/sap/scimono/client/SCIMClientService.java
index e27cbdb..2f763f0 100644
--- a/scimono-client/src/main/java/com/sap/scimono/client/SCIMClientService.java
+++ b/scimono-client/src/main/java/com/sap/scimono/client/SCIMClientService.java
@@ -1,6 +1,5 @@
 package com.sap.scimono.client;
 
-import com.sap.scimono.api.helper.JacksonResolver;
 import com.sap.scimono.client.authentication.OauthClientCredentialsAuthenticator;
 import com.sap.scimono.client.authentication.TargetSystemAuthenticator;
 
@@ -121,7 +120,7 @@ public class SCIMClientService {
     }
 
     private List<Object> getDefaultResolvers() {
-      return new ArrayList<>(Collections.singletonList(new JacksonResolver()));
+      return new ArrayList<>(Collections.singletonList(new ClientJacksonResolver()));
     }
 
     private void registerResolvers(Client client) {
diff --git a/scimono-server/src/main/java/com/sap/scimono/api/ServletRequestProviderFilter.java b/scimono-server/src/main/java/com/sap/scimono/api/ServletRequestProviderFilter.java
index 9032750..7620a62 100644
--- a/scimono-server/src/main/java/com/sap/scimono/api/ServletRequestProviderFilter.java
+++ b/scimono-server/src/main/java/com/sap/scimono/api/ServletRequestProviderFilter.java
@@ -21,7 +21,6 @@ public class ServletRequestProviderFilter implements ContainerRequestFilter, Con
   @Override
   public void filter(ContainerRequestContext requestContext) throws IOException {
     ContextResolver.bind(servletRequest);
-
   }
 
   @Override
diff --git a/scimono-server/src/main/java/com/sap/scimono/entity/User.java b/scimono-server/src/main/java/com/sap/scimono/entity/User.java
index 785ba02..9144511 100644
--- a/scimono-server/src/main/java/com/sap/scimono/entity/User.java
+++ b/scimono-server/src/main/java/com/sap/scimono/entity/User.java
@@ -18,6 +18,7 @@
 
 package com.sap.scimono.entity;
 
+import static com.fasterxml.jackson.annotation.JsonProperty.Access.WRITE_ONLY;
 import static com.sap.scimono.entity.definition.CoreUserAttributes.Constants.ACTIVE_FIELD;
 import static com.sap.scimono.entity.definition.CoreUserAttributes.Constants.ADDRESSES_FIELD;
 import static com.sap.scimono.entity.definition.CoreUserAttributes.Constants.EMAILS_FIELD;
@@ -27,6 +28,7 @@ import static com.sap.scimono.entity.definition.CoreUserAttributes.Constants.IMS
 import static com.sap.scimono.entity.definition.CoreUserAttributes.Constants.LOCALE_FIELD;
 import static com.sap.scimono.entity.definition.CoreUserAttributes.Constants.NAME_FIELD;
 import static com.sap.scimono.entity.definition.CoreUserAttributes.Constants.NICK_NAME_FIELD;
+import static com.sap.scimono.entity.definition.CoreUserAttributes.Constants.PASSWORD_FIELD;
 import static com.sap.scimono.entity.definition.CoreUserAttributes.Constants.PHONE_NUMBERS_FIELD;
 import static com.sap.scimono.entity.definition.CoreUserAttributes.Constants.PHOTOS_FIELD;
 import static com.sap.scimono.entity.definition.CoreUserAttributes.Constants.PREFERRED_LANGUAGE_FIELD;
@@ -105,7 +107,10 @@ public final class User extends Resource<User> {
   private final String locale;
   private final String timezone;
   private final Boolean active;
+
+  @JsonProperty(access = WRITE_ONLY)
   private final String password;
+
   @ValidEmails
   private final List<Email> emails;
   @Valid
@@ -126,16 +131,34 @@ public final class User extends Resource<User> {
   private final List<X509Certificate> x509Certificates;
 
   @JsonCreator
-  private User(@JsonProperty(ID_FIELD) final String id, @JsonProperty(EXTERNAL_ID_FIELD) final String externalId, @JsonProperty(META_FIELD) final Meta meta,
-      @JsonProperty(value = SCHEMAS_FIELD, required = true) final Set<String> schemas, @JsonProperty(value = USER_NAME_FIELD, required = true) final String userName,
-      @JsonProperty(NAME_FIELD) final Name name, @JsonProperty(DISPLAY_NAME_FIELD) final String displayName, @JsonProperty(NICK_NAME_FIELD) final String nickName,
-      @JsonProperty(PROFILE_URL_FIELD) final String profileUrl, @JsonProperty(TITLE_FIELD) final String title, @JsonProperty(USER_TYPE_FIELD) final String userType,
-      @JsonProperty(PREFERRED_LANGUAGE_FIELD) final String preferredLanguage, @JsonProperty(LOCALE_FIELD) final String locale,
-      @JsonProperty(TIMEZONE_FIELD) final String timezone, @JsonProperty(ACTIVE_FIELD) final Boolean active, @JsonProperty(EMAILS_FIELD) final List<Email> emails,
-      @JsonProperty(PHONE_NUMBERS_FIELD) final List<PhoneNumber> phoneNumbers, @JsonProperty(IMS_FIELD) final List<Im> ims,
-      @JsonProperty(PHOTOS_FIELD) final List<Photo> photos, @JsonProperty(ADDRESSES_FIELD) final List<Address> addresses,
-      @JsonProperty(GROUPS_FIELD) final List<GroupRef> groups, @JsonProperty(ENTITLEMENTS_FIELD) final List<Entitlement> entitlements,
-      @JsonProperty(ROLES_FIELD) final List<Role> roles, @JsonProperty(X509_CERTIFICATES_FIELD) final List<X509Certificate> x509Certificates) {
+  private User(
+      // @formatter:off
+      @JsonProperty(ID_FIELD) final String id,
+      @JsonProperty(EXTERNAL_ID_FIELD) final String externalId,
+      @JsonProperty(META_FIELD) final Meta meta,
+      @JsonProperty(value = SCHEMAS_FIELD, required = true) final Set<String> schemas,
+      @JsonProperty(value = USER_NAME_FIELD, required = true) final String userName,
+      @JsonProperty(NAME_FIELD) final Name name,
+      @JsonProperty(DISPLAY_NAME_FIELD) final String displayName,
+      @JsonProperty(NICK_NAME_FIELD) final String nickName,
+      @JsonProperty(PROFILE_URL_FIELD) final String profileUrl,
+      @JsonProperty(TITLE_FIELD) final String title,
+      @JsonProperty(USER_TYPE_FIELD) final String userType,
+      @JsonProperty(PREFERRED_LANGUAGE_FIELD) final String preferredLanguage,
+      @JsonProperty(LOCALE_FIELD) final String locale,
+      @JsonProperty(TIMEZONE_FIELD) final String timezone,
+      @JsonProperty(ACTIVE_FIELD) final Boolean active,
+      @JsonProperty(PASSWORD_FIELD) final String password,
+      @JsonProperty(EMAILS_FIELD) final List<Email> emails,
+      @JsonProperty(PHONE_NUMBERS_FIELD) final List<PhoneNumber> phoneNumbers,
+      @JsonProperty(IMS_FIELD) final List<Im> ims,
+      @JsonProperty(PHOTOS_FIELD) final List<Photo> photos,
+      @JsonProperty(ADDRESSES_FIELD) final List<Address> addresses,
+      @JsonProperty(GROUPS_FIELD) final List<GroupRef> groups,
+      @JsonProperty(ENTITLEMENTS_FIELD) final List<Entitlement> entitlements,
+      @JsonProperty(ROLES_FIELD) final List<Role> roles,
+      @JsonProperty(X509_CERTIFICATES_FIELD) final List<X509Certificate> x509Certificates) {
+    // @formatter:on
     super(id, externalId, meta, schemas);
     this.userName = userName != null ? userName : "";
     this.name = name;
@@ -148,6 +171,7 @@ public final class User extends Resource<User> {
     this.locale = locale;
     this.timezone = timezone;
     this.active = active;
+    this.password = password;
 
     this.emails = sameOrEmpty(emails);
     this.phoneNumbers = sameOrEmpty(phoneNumbers);
@@ -158,8 +182,6 @@ public final class User extends Resource<User> {
     this.entitlements = sameOrEmpty(entitlements);
     this.roles = sameOrEmpty(roles);
     this.x509Certificates = sameOrEmpty(x509Certificates);
-
-    password = null;
   }
 
   private User(final Builder builder) {
@@ -333,9 +355,6 @@ public final class User extends Resource<User> {
    * For more detailed information please look at the <a href="http://tools.ietf.org/html/draft-ietf-scim-core-schema-02#section-6">SCIM core schema
    * 2.0, section 6</a>
    * </p>
-   * <p>
-   * client info: if the actual user is loaded from the OSIAM server the password of the user will always be null
-   * </p>
    *
    * @return the password of the {@link User}
    */
diff --git a/scimono-server/src/main/java/com/sap/scimono/entity/definition/CoreUserAttributes.java b/scimono-server/src/main/java/com/sap/scimono/entity/definition/CoreUserAttributes.java
index bae886c..1c31a3f 100644
--- a/scimono-server/src/main/java/com/sap/scimono/entity/definition/CoreUserAttributes.java
+++ b/scimono-server/src/main/java/com/sap/scimono/entity/definition/CoreUserAttributes.java
@@ -196,5 +196,6 @@ public enum CoreUserAttributes implements ScimAttribute<CoreUserAttributes> {
     String ADDRESSES_REGION_FIELD = "region";
     String ADDRESSES_POSTAL_CODE_FIELD = "postalCode";
     String ADDRESSES_COUNTRY_FIELD = "country";
+    String PASSWORD_FIELD = "password";
   }
 }

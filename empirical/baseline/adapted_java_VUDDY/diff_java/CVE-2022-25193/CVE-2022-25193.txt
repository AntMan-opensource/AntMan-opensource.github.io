commit 4fb4e68e8e7be3168721a06ad08b263252c276f1
Author: Colin Kealty <colin.kealty@snowsoftware.com>
Date:   Thu Oct 14 10:39:17 2021 -0400

    CMSC-21922 Update all public formvalidation functions to require post
    and check permissions for admin

diff --git a/src/main/java/com/embotics/vlm/plugin/VCommanderConfig.java b/src/main/java/com/embotics/vlm/plugin/VCommanderConfig.java
index f4c3c7c..3adff40 100644
--- a/src/main/java/com/embotics/vlm/plugin/VCommanderConfig.java
+++ b/src/main/java/com/embotics/vlm/plugin/VCommanderConfig.java
@@ -186,7 +186,9 @@ public final class VCommanderConfig extends GlobalConfiguration {
 	/**
 	 * Called by jelly, to validate address field
 	 */
+	@POST
 	public FormValidation doCheckAddress(@QueryParameter String value) throws IOException, ServletException {
+		Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);
 		if (value.length() == 0)
 			return FormValidation.error(Messages.VCommanderConfig_errors_missingAddress());
 
@@ -196,6 +198,7 @@ public final class VCommanderConfig extends GlobalConfiguration {
 	/**
 	 * Called by jelly, to validate credential field
 	 */
+	@POST
 	public FormValidation doCheckCredentialsId(@AncestorInPath Item item, @QueryParameter String address, @QueryParameter String credentialsId) {
 		// Return no-op validation results for users that do not have permission to list
 		// credentials
diff --git a/src/main/java/com/embotics/vlm/plugin/actions/AbstractVCommanderAction.java b/src/main/java/com/embotics/vlm/plugin/actions/AbstractVCommanderAction.java
index fcd32c3..b4fc8a8 100644
--- a/src/main/java/com/embotics/vlm/plugin/actions/AbstractVCommanderAction.java
+++ b/src/main/java/com/embotics/vlm/plugin/actions/AbstractVCommanderAction.java
@@ -3,6 +3,7 @@ package com.embotics.vlm.plugin.actions;
 import java.io.IOException;
 
 import javax.servlet.ServletException;
+import javax.ws.rs.POST;
 
 import org.kohsuke.stapler.QueryParameter;
 
@@ -11,6 +12,7 @@ import com.embotics.vlm.plugin.VCommanderAction;
 
 import hudson.model.Descriptor;
 import hudson.util.FormValidation;
+import jenkins.model.Jenkins;
 
 /**
  * A base class to be extended by the vCommadner actions.
@@ -60,7 +62,9 @@ public abstract class AbstractVCommanderAction implements VCommanderAction {
 		/**
 		 * Called by jelly, to validate timeout field
 		 */
+		@POST
 		public FormValidation doCheckTimeout(@QueryParameter Long value) throws IOException, ServletException {
+			Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);
 			if (value == null || value < MINIMUM_TIMEOUT_VALUE) {
 				return FormValidation.error(Messages.VCommanderBuilder_errors_missingTimeout());
 			}
@@ -71,7 +75,9 @@ public abstract class AbstractVCommanderAction implements VCommanderAction {
 		/**
 		 * Called by jelly, to validate polling field
 		 */
+		@POST
 		public FormValidation doCheckPolling(@QueryParameter Long polling, @QueryParameter Long timeout) throws IOException, ServletException {
+			Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);
 			if (polling == null ||polling < MINIMUM_POLLING_VALUE) {
 				return FormValidation.error(Messages.VCommanderBuilder_errors_missingPolling());
 			}
diff --git a/src/main/java/com/embotics/vlm/plugin/actions/VCommanderRequestNewServiceAction.java b/src/main/java/com/embotics/vlm/plugin/actions/VCommanderRequestNewServiceAction.java
index 3784adb..40f4601 100644
--- a/src/main/java/com/embotics/vlm/plugin/actions/VCommanderRequestNewServiceAction.java
+++ b/src/main/java/com/embotics/vlm/plugin/actions/VCommanderRequestNewServiceAction.java
@@ -14,6 +14,7 @@ package com.embotics.vlm.plugin.actions;
 import java.io.IOException;
 import java.net.ConnectException;
 import java.util.List;
+import javax.ws.rs.POST;
 
 import javax.servlet.ServletException;
 
@@ -37,6 +38,7 @@ import hudson.model.Descriptor;
 import hudson.model.Run;
 import hudson.model.TaskListener;
 import hudson.util.FormValidation;
+import jenkins.model.Jenkins;
 
 /**
  * A vCommander Action, which submits a new service request
@@ -192,7 +194,9 @@ public class VCommanderRequestNewServiceAction extends AbstractVCommanderAction
 		/**
 		 * Called by jelly, to validate payload field
 		 */
+		@POST
 		public FormValidation doCheckPayload(@QueryParameter String payload) throws IOException, ServletException {
+			Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);
 			// if no content, do not return error;
 			// we do not want to show the initial form with error
 			if (StringUtils.isBlank(payload)) {
diff --git a/src/main/java/com/embotics/vlm/plugin/actions/VCommanderRunWorkflowAction.java b/src/main/java/com/embotics/vlm/plugin/actions/VCommanderRunWorkflowAction.java
index 36d32b8..57ef66b 100644
--- a/src/main/java/com/embotics/vlm/plugin/actions/VCommanderRunWorkflowAction.java
+++ b/src/main/java/com/embotics/vlm/plugin/actions/VCommanderRunWorkflowAction.java
@@ -15,6 +15,7 @@ import java.io.IOException;
 import java.net.ConnectException;
 
 import javax.servlet.ServletException;
+import javax.ws.rs.POST;
 
 import org.apache.commons.lang.StringUtils;
 import org.codehaus.jettison.json.JSONException;
@@ -35,6 +36,7 @@ import hudson.model.Run;
 import hudson.model.TaskListener;
 import hudson.util.ComboBoxModel;
 import hudson.util.FormValidation;
+import jenkins.model.Jenkins;
 
 /**
  * A vCommander Action, which triggers a command workflow
@@ -156,7 +158,9 @@ public class VCommanderRunWorkflowAction extends AbstractVCommanderAction {
 		/**
 		 * Called by jelly, to validate targetType field
 		 */
+		@POST
 		public FormValidation doCheckTargetType(@QueryParameter String targetType) throws IOException, ServletException {
+			Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);
 			// if no content, do not return error;
 			// we do not want to show the initial form with error
 			if (StringUtils.isBlank(targetType)) {
@@ -173,7 +177,9 @@ public class VCommanderRunWorkflowAction extends AbstractVCommanderAction {
 		/**
 		 * Called by jelly, to validate targetName field
 		 */
+		@POST
 		public FormValidation doCheckTargetName(@QueryParameter String targetType, @QueryParameter String targetName) throws IOException, ServletException {
+			Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);
 			// if no content, do not return error;
 			// we do not want to show the initial form with error
 			if (StringUtils.isBlank(targetName)) {
@@ -190,7 +196,9 @@ public class VCommanderRunWorkflowAction extends AbstractVCommanderAction {
 		/**
 		 * Called by jelly, to validate workflowName field
 		 */
+		@POST
 		public FormValidation doCheckWorkflowName(@QueryParameter String targetType, @QueryParameter String workflowName) throws IOException, ServletException {
+			Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);
 			// if no content, do not return error;
 			// we do not want to show the initial form with error
 			if (StringUtils.isBlank(workflowName)) {
diff --git a/src/main/java/com/embotics/vlm/plugin/actions/VCommanderWaitForRequestNewServiceAction.java b/src/main/java/com/embotics/vlm/plugin/actions/VCommanderWaitForRequestNewServiceAction.java
index befacd5..d13f8f6 100644
--- a/src/main/java/com/embotics/vlm/plugin/actions/VCommanderWaitForRequestNewServiceAction.java
+++ b/src/main/java/com/embotics/vlm/plugin/actions/VCommanderWaitForRequestNewServiceAction.java
@@ -14,6 +14,7 @@ package com.embotics.vlm.plugin.actions;
 import java.io.IOException;
 
 import javax.servlet.ServletException;
+import javax.ws.rs.POST;
 
 import org.apache.commons.lang.StringUtils;
 import org.kohsuke.stapler.DataBoundConstructor;
@@ -31,6 +32,7 @@ import hudson.model.Descriptor;
 import hudson.model.Run;
 import hudson.model.TaskListener;
 import hudson.util.FormValidation;
+import jenkins.model.Jenkins;
 
 /**
  * A vCommander Action, which should be used in pair with VCommanderRequestNewServiceAction
@@ -110,7 +112,9 @@ public class VCommanderWaitForRequestNewServiceAction extends AbstractVCommander
 		/**
 		 * Called by jelly, to validate requestId field
 		 */
+		@POST
 		public FormValidation doCheckRequestId(@QueryParameter String requestId) throws IOException, ServletException {
+			Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);
 			if(PluginUtils.isNumericOrVariable(requestId)) {
 				return FormValidation.ok();
 			} else {
diff --git a/src/main/java/com/embotics/vlm/plugin/actions/VCommanderWaitForRunWorkflowAction.java b/src/main/java/com/embotics/vlm/plugin/actions/VCommanderWaitForRunWorkflowAction.java
index e258e92..3a5f884 100644
--- a/src/main/java/com/embotics/vlm/plugin/actions/VCommanderWaitForRunWorkflowAction.java
+++ b/src/main/java/com/embotics/vlm/plugin/actions/VCommanderWaitForRunWorkflowAction.java
@@ -14,6 +14,7 @@ package com.embotics.vlm.plugin.actions;
 import java.io.IOException;
 
 import javax.servlet.ServletException;
+import javax.ws.rs.POST;
 
 import org.apache.commons.lang.StringUtils;
 import org.kohsuke.stapler.DataBoundConstructor;
@@ -31,6 +32,7 @@ import hudson.model.Descriptor;
 import hudson.model.Run;
 import hudson.model.TaskListener;
 import hudson.util.FormValidation;
+import jenkins.model.Jenkins;
 
 /**
  * A vCommander Action, which should be used in pair with VCommanderRunWorkflowAction
@@ -100,7 +102,9 @@ public class VCommanderWaitForRunWorkflowAction extends AbstractVCommanderAction
 		/**
 		 * Called by jelly, to validate task ID field
 		 */
+		@POST
 		public FormValidation doCheckTaskId(@QueryParameter String taskId) throws IOException, ServletException {
+			Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);
 			if(PluginUtils.isNumericOrVariable(taskId)) {
 				return FormValidation.ok();
 			} else {

commit 11fb5e21c252ce4751b85fccf5b8076156e0b4f0
Author: Miguel Moquillon <miguel.moquillon@silverpeas.com>
Date:   Thu May 23 08:55:35 2024 +0200

    ug #14156 Fix the vuln by defined a dedicated attribute in
    AuthenticationCredentials for authentication successfully performed
    outside of Silverpeas.

diff --git a/core-api/src/main/java/org/silverpeas/core/security/authentication/AuthenticationCredential.java b/core-api/src/main/java/org/silverpeas/core/security/authentication/AuthenticationCredential.java
index 5bc7e2940b..6117fef08c 100644
--- a/core-api/src/main/java/org/silverpeas/core/security/authentication/AuthenticationCredential.java
+++ b/core-api/src/main/java/org/silverpeas/core/security/authentication/AuthenticationCredential.java
@@ -63,6 +63,7 @@ public class AuthenticationCredential {
   private String login;
   private String password;
   private String domainId;
+  private boolean authenticated;
 
   private AuthenticationCredential() {
   }
@@ -102,6 +103,14 @@ public class AuthenticationCredential {
     return this;
   }
 
+  /**
+   * Sets the principal behind this credential has been already successfully authenticated by a
+   * remote authentication mechanism.
+   */
+  public void setRemotelyAuthenticated() {
+    this.authenticated = true;
+  }
+
   /**
    * Gets the user login to use in the authentication.
    * @return the login.
@@ -174,13 +183,13 @@ public class AuthenticationCredential {
   }
 
   /**
-   * Is the password set in this credential?
-   * According to some security policy, the password isn't required to participate in an
-   * authentication;
-   * for example in an NTLM negotiation.
-   * @return true if the password attribute is set in this credential, false otherwise.
+   * Is this credential comes from an external authentication mechanism? In this case, the
+   * authentication has been already operated out of Silverpeas and the credential contains only
+   * information to identify the authenticated user.
+   * @return true if the authentication has been already successfully done out of Silverpeas.
+   * False otherwise.
    */
-  public boolean isPasswordSet() {
-    return this.password != null;
+  public boolean hasBeenRemotelyAuthenticated() {
+    return authenticated;
   }
 }
diff --git a/core-library/src/main/java/org/silverpeas/core/security/authentication/AuthenticationService.java b/core-library/src/main/java/org/silverpeas/core/security/authentication/AuthenticationService.java
index aa3e1d86aa..0e7eba7b8b 100644
--- a/core-library/src/main/java/org/silverpeas/core/security/authentication/AuthenticationService.java
+++ b/core-library/src/main/java/org/silverpeas/core/security/authentication/AuthenticationService.java
@@ -196,10 +196,10 @@ public class AuthenticationService implements Authentication {
   private String checkAuthentication(final AuthenticationCredential userCredential)
       throws AuthenticationException {
     final String key;
-    if (userCredential.isPasswordSet()) {
-      key = authenticateByLoginAndPasswordAndDomain(userCredential);
-    } else {
+    if (userCredential.hasBeenRemotelyAuthenticated()) {
       key = authenticateByLoginAndDomain(userCredential);
+    } else {
+      key = authenticateByLoginAndPasswordAndDomain(userCredential);
     }
     return key;
   }
@@ -217,7 +217,7 @@ public class AuthenticationService implements Authentication {
     String password = credential.getPassword();
     String domainId = credential.getDomainId();
     if (password == null || domainId == null) {
-      throw  new AuthenticationException("No login or no domain is specified!");
+      throw new AuthenticationPwdNotAvailException("No password or no domain is specified!");
     }
 
     // Verify that the user can log in
diff --git a/core-web/src/main/java/org/silverpeas/core/web/authentication/AuthenticationServlet.java b/core-web/src/main/java/org/silverpeas/core/web/authentication/AuthenticationServlet.java
index f2b70e5805..93f7959a29 100644
--- a/core-web/src/main/java/org/silverpeas/core/web/authentication/AuthenticationServlet.java
+++ b/core-web/src/main/java/org/silverpeas/core/web/authentication/AuthenticationServlet.java
@@ -363,16 +363,16 @@ public class AuthenticationServlet extends SilverpeasHttpServlet {
       final AuthenticationResponse result;
       if (authenticationParameters.isUserByInternalAuthTokenMode() || authenticationParameters.
           isSsoMode() || authenticationParameters.isCasMode()) {
-        result = authService.authenticate(
-            credential.withAsDomainId(authenticationParameters.getDomainId()));
+        credential.withAsDomainId(authenticationParameters.getDomainId())
+            .setRemotelyAuthenticated();
       } else if (authenticationParameters.isSocialNetworkMode()) {
-        result = authService.authenticate(credential.withAsDomainId(authenticationParameters.
-            getDomainId()));
+        credential.withAsDomainId(authenticationParameters.getDomainId())
+            .setRemotelyAuthenticated();
       } else {
-        result = authService.authenticate(credential
-            .withAsPassword(authenticationParameters.getPassword())
-            .withAsDomainId(authenticationParameters.getDomainId()));
+        credential.withAsPassword(authenticationParameters.getPassword())
+            .withAsDomainId(authenticationParameters.getDomainId());
       }
+      result = authService.authenticate(credential);
       authenticationParameters.setCredential(credential);
       HttpSession session = request.getSession(false);
       for (Map.Entry<String, Serializable> capability : credential.getCapabilities().entrySet()) {
diff --git a/core-web/src/main/java/org/silverpeas/core/web/authentication/CredentialsServlet.java b/core-web/src/main/java/org/silverpeas/core/web/authentication/CredentialsServlet.java
index f42c597dee..dd955e344a 100644
--- a/core-web/src/main/java/org/silverpeas/core/web/authentication/CredentialsServlet.java
+++ b/core-web/src/main/java/org/silverpeas/core/web/authentication/CredentialsServlet.java
@@ -106,7 +106,8 @@ public class CredentialsServlet extends HttpServlet {
         String destinationPage = "";
         AuthenticationUserVerifierFactory.getUserCanTryAgainToLoginVerifier((User) null)
             .clearSession(request);
-        if (StringUtil.isDefined(login) && StringUtil.isDefined(domainId) && !NEW_REGISTRATION.equals(function)) {
+        if (StringUtil.isDefined(login) && StringUtil.isDefined(domainId) &&
+            !NEW_REGISTRATION.equals(function)) {
           // Verify that the user can login
           UserCanLoginVerifier userStateVerifier = AuthenticationUserVerifierFactory
                   .getUserCanLoginVerifier(getAuthenticationCredential(login, domainId));

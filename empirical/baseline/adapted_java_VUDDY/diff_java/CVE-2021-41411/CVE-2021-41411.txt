commit 42e2964aee9641ea0d30ef630d4b37593e2df66a
Author: haby0 <Ha_yub@163.com>
Date:   Wed Sep 1 01:32:16 2021 +0800

    Fix xxe injection vulnerability (#3808)
    
    Fix xxe injection vulnerability

diff --git a/drools-compiler/src/main/java/org/drools/compiler/kproject/models/KieModuleMarshaller.java b/drools-compiler/src/main/java/org/drools/compiler/kproject/models/KieModuleMarshaller.java
index 7c15b326b3..91ded1211d 100644
--- a/drools-compiler/src/main/java/org/drools/compiler/kproject/models/KieModuleMarshaller.java
+++ b/drools-compiler/src/main/java/org/drools/compiler/kproject/models/KieModuleMarshaller.java
@@ -31,6 +31,8 @@ import javax.xml.transform.Source;
 import javax.xml.transform.stream.StreamSource;
 import javax.xml.validation.Schema;
 import javax.xml.validation.SchemaFactory;
+import javax.xml.validation.Validator;
+import javax.xml.XMLConstants;
 import org.drools.core.util.AbstractXStreamConverter;
 import org.drools.core.util.IoUtils;
 import org.kie.api.builder.model.KieBaseModel;
@@ -185,12 +187,18 @@ public class KieModuleMarshaller {
 
         private static void validate(Source source, Source duplicateSource) {
             try {
-                schema.newValidator().validate(source);
+                Validator validator = schema.newValidator();
+                validator.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, "");
+                validator.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, "");
+                validator.validate(source);
             } catch (Exception schemaException) {
                 try {
                     // For backwards compatibility, validate against the old namespace (which has 6.0.0 hardcoded)
                     if (oldSchema != null) {
-                        oldSchema.newValidator().validate( duplicateSource );
+                        Validator oldValidator = oldSchema.newValidator();
+                        oldValidator.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, "");
+                        oldValidator.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, "");
+                        oldValidator.validate(duplicateSource);
                     }
                 } catch (Exception oldSchemaException) {
                     // Throw the original exception, as we want them to use that

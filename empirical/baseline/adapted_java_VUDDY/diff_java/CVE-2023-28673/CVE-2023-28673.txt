commit 28a39af3a9b2e923d4bf1cd4398d612386222db3
Author: jloisel <loisel.jerome@gmail.com>
Date:   Tue Mar 7 17:56:48 2023 +0100

    add csrf protection / permission check

diff --git a/src/main/java/org/jenkinsci/plugins/octoperf/OctoPerfTestStep.java b/src/main/java/org/jenkinsci/plugins/octoperf/OctoPerfTestStep.java
index 74dd053..503386c 100644
--- a/src/main/java/org/jenkinsci/plugins/octoperf/OctoPerfTestStep.java
+++ b/src/main/java/org/jenkinsci/plugins/octoperf/OctoPerfTestStep.java
@@ -4,7 +4,7 @@ import hudson.EnvVars;
 import hudson.Extension;
 import hudson.FilePath;
 import hudson.Launcher;
-import hudson.model.Job;
+import hudson.model.Item;
 import hudson.model.Run;
 import hudson.model.TaskListener;
 import hudson.util.ListBoxModel;
@@ -16,9 +16,11 @@ import org.jenkinsci.plugins.octoperf.client.RestClientAuthenticator;
 import org.jenkinsci.plugins.octoperf.conditions.StopConditionDescriptor;
 import org.jenkinsci.plugins.octoperf.conditions.TestStopCondition;
 import org.jenkinsci.plugins.workflow.steps.*;
+import org.kohsuke.stapler.AncestorInPath;
 import org.kohsuke.stapler.DataBoundConstructor;
 import org.kohsuke.stapler.DataBoundSetter;
 import org.kohsuke.stapler.QueryParameter;
+import org.kohsuke.stapler.verb.POST;
 
 import javax.annotation.Nonnull;
 import java.util.ArrayList;
@@ -28,6 +30,7 @@ import java.util.Set;
 
 import static com.google.common.base.Strings.nullToEmpty;
 import static com.google.common.collect.ImmutableList.of;
+import static hudson.model.Item.CONFIGURE;
 import static java.util.Objects.requireNonNull;
 import static java.util.Optional.ofNullable;
 import static org.jenkinsci.plugins.octoperf.client.RestClientService.CLIENTS;
@@ -174,38 +177,43 @@ public class OctoPerfTestStep extends Step {
       return "Runs test in OctoPerf Cloud";
     }
 
+    @POST
     public ListBoxModel doFillCredentialsIdItems(
+      @AncestorInPath final Item context,
       @QueryParameter final String credentialsId,
       final Object scope) {
       return OctoperfBuilderDescriptor
         .getDescriptor()
-        .doFillCredentialsIdItems(credentialsId, scope);
+        .doFillCredentialsIdItems(context, credentialsId, scope);
     }
 
     public ListBoxModel doFillWorkspaceIdItems(
+      @AncestorInPath final Item context,
       @QueryParameter final String credentialsId,
       @QueryParameter final String workspaceId) {
       return OctoperfBuilderDescriptor
         .getDescriptor()
-        .doFillWorkspaceIdItems(credentialsId, workspaceId);
+        .doFillWorkspaceIdItems(context, credentialsId, workspaceId);
     }
 
     public ListBoxModel doFillProjectIdItems(
+      @AncestorInPath final Item context,
       @QueryParameter final String credentialsId,
       @QueryParameter final String workspaceId,
       @QueryParameter final String projectId) {
       return OctoperfBuilderDescriptor
         .getDescriptor()
-        .doFillProjectIdItems(credentialsId, workspaceId, projectId);
+        .doFillProjectIdItems(context, credentialsId, workspaceId, projectId);
     }
 
     public ListBoxModel doFillScenarioIdItems(
+      @AncestorInPath final Item context,
       @QueryParameter final String credentialsId,
       @QueryParameter final String projectId,
       @QueryParameter final String scenarioId) {
       return OctoperfBuilderDescriptor
         .getDescriptor()
-        .doFillScenarioIdItems(credentialsId, projectId, scenarioId);
+        .doFillScenarioIdItems(context, credentialsId, projectId, scenarioId);
     }
 
     public List<StopConditionDescriptor> getStopConditionDescriptors() {
diff --git a/src/main/java/org/jenkinsci/plugins/octoperf/OctoperfBuilderDescriptor.java b/src/main/java/org/jenkinsci/plugins/octoperf/OctoperfBuilderDescriptor.java
index 4788cbe..feafbcd 100644
--- a/src/main/java/org/jenkinsci/plugins/octoperf/OctoperfBuilderDescriptor.java
+++ b/src/main/java/org/jenkinsci/plugins/octoperf/OctoperfBuilderDescriptor.java
@@ -1,5 +1,6 @@
 package org.jenkinsci.plugins.octoperf;
 
+import com.cloudbees.plugins.credentials.CredentialsProvider;
 import com.google.common.base.Strings;
 import hudson.Extension;
 import hudson.model.AbstractProject;
@@ -20,13 +21,18 @@ import org.jenkinsci.plugins.octoperf.conditions.StopConditionDescriptor;
 import org.jenkinsci.plugins.octoperf.project.Project;
 import org.jenkinsci.plugins.octoperf.scenario.Scenario;
 import org.jenkinsci.plugins.octoperf.workspace.Workspace;
+import org.kohsuke.stapler.AncestorInPath;
 import org.kohsuke.stapler.QueryParameter;
 import org.kohsuke.stapler.StaplerRequest;
+import org.kohsuke.stapler.verb.POST;
 
 import java.io.IOException;
 import java.util.*;
 
+import static com.cloudbees.plugins.credentials.CredentialsProvider.USE_ITEM;
+import static hudson.model.Item.CONFIGURE;
 import static java.util.Optional.ofNullable;
+import static jenkins.model.Jenkins.ADMINISTER;
 import static org.jenkinsci.plugins.octoperf.client.RestClientService.CLIENTS;
 import static org.jenkinsci.plugins.octoperf.constants.Constants.DEFAULT_API_URL;
 import static org.jenkinsci.plugins.octoperf.credentials.CredentialsService.CREDENTIALS_SERVICE;
@@ -67,9 +73,13 @@ public class OctoperfBuilderDescriptor extends BuildStepDescriptor<Builder> {
     return "OctoPerf";
   }
 
+  @POST
   public ListBoxModel doFillCredentialsIdItems(
+    @AncestorInPath final Item context,
     @QueryParameter("credentialsId") final String credentialsId,
     final Object scope) {
+    checkPermission(context);
+
     final ListBoxModel items = new ListBoxModel();
     final Set<String> ids = new LinkedHashSet<>();
 
@@ -86,9 +96,13 @@ public class OctoperfBuilderDescriptor extends BuildStepDescriptor<Builder> {
     return getOptions(items);
   }
 
+  @POST
   public ListBoxModel doFillWorkspaceIdItems(
+    @AncestorInPath final Item context,
     @QueryParameter("credentialsId") final String credentialsId,
     @QueryParameter("workspaceId") final String workspaceId) {
+    checkPermission(context);
+
     val credentials = getCredential(credentialsId);
     final ListBoxModel items = new ListBoxModel();
     if (credentials.isPresent()) {
@@ -110,10 +124,14 @@ public class OctoperfBuilderDescriptor extends BuildStepDescriptor<Builder> {
     return getOptions(items);
   }
 
+  @POST
   public ListBoxModel doFillProjectIdItems(
+    @AncestorInPath final Item context,
     @QueryParameter("credentialsId") final String credentialsId,
     @QueryParameter("workspaceId") final String workspaceId,
     @QueryParameter("projectId") final String projectId) {
+    checkPermission(context);
+
     val credentials = getCredential(credentialsId);
     final ListBoxModel items = new ListBoxModel();
     if (credentials.isPresent() && isDefined(workspaceId)) {
@@ -135,10 +153,14 @@ public class OctoperfBuilderDescriptor extends BuildStepDescriptor<Builder> {
     return getOptions(items);
   }
 
+  @POST
   public ListBoxModel doFillScenarioIdItems(
+    @AncestorInPath final Item context,
     @QueryParameter final String credentialsId,
     @QueryParameter final String projectId,
     @QueryParameter final String scenarioId) {
+    checkPermission(context);
+
     val credentials = getCredential(credentialsId);
 
     final ListBoxModel items = new ListBoxModel();
@@ -161,6 +183,14 @@ public class OctoperfBuilderDescriptor extends BuildStepDescriptor<Builder> {
     return getOptions(items);
   }
 
+  private static void checkPermission(final Item context) {
+    if (context == null) {
+      Jenkins.get().checkPermission(ADMINISTER);
+    } else {
+      context.checkPermission(USE_ITEM);
+    }
+  }
+
   private static boolean isDefined(final String id) {
     return ofNullable(id)
       .map(Strings::emptyToNull)

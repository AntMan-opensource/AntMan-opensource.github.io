commit ffbf4168a2d7e1e61cfeb19178c022bb1c0aab77
Author: Patrik Dudits <patrik.dudits@payara.fish>
Date:   Tue Apr 12 15:40:30 2022 +0200

    FISH-5955: Add lib/ext directory to system classpath on JDK9+
    
    If ext directory property is not set, this signals that runtime is
    more recent than Java 8, and lib/ext is added to system classpath.

diff --git a/nucleus/admin/launcher/src/main/java/com/sun/enterprise/admin/launcher/GFLauncher.java b/nucleus/admin/launcher/src/main/java/com/sun/enterprise/admin/launcher/GFLauncher.java
index eeba97837d..c0171b535e 100644
--- a/nucleus/admin/launcher/src/main/java/com/sun/enterprise/admin/launcher/GFLauncher.java
+++ b/nucleus/admin/launcher/src/main/java/com/sun/enterprise/admin/launcher/GFLauncher.java
@@ -76,7 +76,6 @@ public abstract class GFLauncher {
 
     private static final Pattern JAVA_VERSION_PATTERN = Pattern.compile(".* version \"([^\"\\-]+)(-.*)?\".*");
     private final List<String> commandLine = new ArrayList<String>();
-    private final List<String> jvmOptionsList = new ArrayList<String>();
     private final GFLauncherInfo info;
     private Map<String, String> asenvProps;
     private JavaConfig javaConfig;
@@ -227,7 +226,6 @@ public abstract class GFLauncher {
         GFLauncherLogger.addLogFileHandler(logFilename);
         setClasspath();
         setCommandLine();
-        setJvmOptions();
         logCommandLine();
         checkJDKVersion();
         // if no <network-config> element, we need to upgrade this domain
@@ -689,22 +687,12 @@ public abstract class GFLauncher {
         }
     }
 
-    void setJvmOptions() {
-        List<String> jvmOpts = getJvmOptions();
-        jvmOpts.clear();
-
-        if (jvmOptions != null) {
-            addIgnoreNull(jvmOpts, jvmOptions.toStringArray());
-        }
-
-    }
-
     /**
-     * Returns the Java Virtual Machine options
+     * Returns the Java Virtual Machine options (for testing)
      * @return 
      */
-    public final List<String> getJvmOptions() {
-        return jvmOptionsList;
+    List<String> getJvmOptions() {
+        return jvmOptions.toStringArray();
     }
 
     /**
@@ -828,9 +816,16 @@ public abstract class GFLauncher {
         List<File> prefixCP = javaConfig.getPrefixClasspath();
         List<File> suffixCP = javaConfig.getSuffixClasspath();
         List<File> profilerCP = profiler.getClasspath();
+        List<File> extCP = Collections.emptyList();
+        if (!jvmOptions.getCombinedMap().containsKey("java.ext.dirs")) {
+            extCP = Collections.singletonList(
+                    new File(info.getInstanceRootDir(), "lib/ext/*")
+            );
+        }
 
         // create a list of all the classpath pieces in the right order
         List<File> all = new ArrayList<File>();
+        all.addAll(extCP);
         all.addAll(prefixCP);
         all.addAll(profilerCP);
         all.addAll(mainCP);

commit f17dae31ebf6ea7af8c512165d9b954c2a6ea46e
Author: jeanlf <jeanlf@gpac.io>
Date:   Mon Oct 10 17:39:38 2022 +0200

    fixed #2280

diff --git a/src/isomedia/box_dump.c b/src/isomedia/box_dump.c
index 05c2212cb..860340b19 100644
--- a/src/isomedia/box_dump.c
+++ b/src/isomedia/box_dump.c
@@ -147,8 +147,8 @@ GF_Err reftype_box_dump(GF_Box *a, FILE * trace)
 	GF_TrackReferenceTypeBox *p = (GF_TrackReferenceTypeBox *)a;
 	if (!p->reference_type) return GF_OK;
 	p->type = p->reference_type;
-	//don't allow UNKN as type (possible buffer overflow when typecasting to GF_UnknownBox)
-	if (p->type==GF_ISOM_BOX_TYPE_UNKNOWN)
+	//don't allow UNKN or UUID as type (possible buffer overflow when typecasting to GF_UnknownBox)
+	if ((p->type==GF_ISOM_BOX_TYPE_UNKNOWN) || (p->type==GF_ISOM_BOX_TYPE_UUID))
 		p->type = GF_4CC('u','k','n','w');
 
 	gf_isom_box_dump_start(a, "TrackReferenceTypeBox", trace);
@@ -171,8 +171,8 @@ GF_Err ireftype_box_dump(GF_Box *a, FILE * trace)
 	if (!p->reference_type) return GF_OK;
 
 	p->type = p->reference_type;
-	//don't allow UNKN as type (possible buffer overflow when typecasting to GF_UnknownBox)
-	if (p->type==GF_ISOM_BOX_TYPE_UNKNOWN)
+	//don't allow UNKN or UUI as type (possible buffer overflow when typecasting to GF_UnknownBox)
+	if ((p->type==GF_ISOM_BOX_TYPE_UNKNOWN) || (p->type==GF_ISOM_BOX_TYPE_UUID))
 		p->type = GF_4CC('u','k','n','w');
 	gf_isom_box_dump_start(a, "ItemReferenceBox", trace);
 	gf_fprintf(trace, "from_item_id=\"%d\">\n", p->from_item_id);
@@ -903,8 +903,8 @@ GF_Err gnrm_box_dump(GF_Box *a, FILE * trace)
 	GF_GenericSampleEntryBox *p = (GF_GenericSampleEntryBox *)a;
 	if (p->EntryType) {
 		a->type = p->EntryType;
-		//don't allow UNKN as type (possible buffer overflow when typecasting to GF_UnknownBox)
-		if (a->type==GF_ISOM_BOX_TYPE_UNKNOWN)
+		//don't allow UNKN or UUID as type (possible buffer overflow when typecasting to GF_UnknownBox)
+		if ((a->type==GF_ISOM_BOX_TYPE_UNKNOWN) || (a->type==GF_ISOM_BOX_TYPE_UUID))
 			a->type = GF_4CC('u','k','n','w');
 	}
 	gf_isom_box_dump_start(a, "SampleDescriptionEntryBox", trace);
@@ -921,8 +921,8 @@ GF_Err gnrv_box_dump(GF_Box *a, FILE * trace)
 	GF_GenericVisualSampleEntryBox *p = (GF_GenericVisualSampleEntryBox *)a;
 	if (p->EntryType) {
 		a->type = p->EntryType;
-		//don't allow UNKN as type (possible buffer overflow when typecasting to GF_UnknownBox)
-		if (a->type==GF_ISOM_BOX_TYPE_UNKNOWN)
+		//don't allow UNKN or UUID as type (possible buffer overflow when typecasting to GF_UnknownBox)
+		if ((a->type==GF_ISOM_BOX_TYPE_UNKNOWN) || (a->type==GF_ISOM_BOX_TYPE_UUID))
 			a->type = GF_4CC('u','k','n','w');
 	}
 	gf_isom_box_dump_start(a, "VisualSampleDescriptionBox", trace);
@@ -941,8 +941,8 @@ GF_Err gnra_box_dump(GF_Box *a, FILE * trace)
 	GF_GenericAudioSampleEntryBox *p = (GF_GenericAudioSampleEntryBox *)a;
 	if (p->EntryType) {
 		a->type = p->EntryType;
-		//don't allow UNKN as type (possible buffer overflow when typecasting to GF_UnknownBox)
-		if (a->type==GF_ISOM_BOX_TYPE_UNKNOWN)
+		//don't allow UNKN or UUID as type (possible buffer overflow when typecasting to GF_UnknownBox)
+		if ((a->type==GF_ISOM_BOX_TYPE_UNKNOWN) || (a->type==GF_ISOM_BOX_TYPE_UUID))
 			a->type = GF_4CC('u','k','n','w');
 	}
 	gf_isom_box_dump_start(a, "AudioSampleDescriptionBox", trace);
@@ -5819,8 +5819,8 @@ GF_Err trgt_box_dump(GF_Box *a, FILE * trace)
 {
 	GF_TrackGroupTypeBox *ptr = (GF_TrackGroupTypeBox *) a;
 	a->type = ptr->group_type;
-	//don't allow UNKN as type (possible buffer overflow when typecasting to GF_UnknownBox)
-	if (a->type==GF_ISOM_BOX_TYPE_UNKNOWN)
+	//don't allow UNKN or UUID as type (possible buffer overflow when typecasting to GF_UnknownBox)
+	if ((a->type==GF_ISOM_BOX_TYPE_UNKNOWN) || (a->type==GF_ISOM_BOX_TYPE_UUID))
 		a->type = GF_4CC('u','k','n','w');
 	gf_isom_box_dump_start(a, "TrackGroupTypeBox", trace);
 	a->type = GF_ISOM_BOX_TYPE_TRGT;
@@ -5842,8 +5842,8 @@ GF_Err grptype_box_dump(GF_Box *a, FILE * trace)
 	u32 i;
 	GF_EntityToGroupTypeBox *ptr = (GF_EntityToGroupTypeBox *) a;
 	a->type = ptr->grouping_type;
-	//don't allow UNKN as type (possible buffer overflow when typecasting to GF_UnknownBox)
-	if (a->type==GF_ISOM_BOX_TYPE_UNKNOWN)
+	//don't allow UNKN or UUID as type (possible buffer overflow when typecasting to GF_UnknownBox)
+	if ((a->type==GF_ISOM_BOX_TYPE_UNKNOWN) || (a->type==GF_ISOM_BOX_TYPE_UUID))
 		a->type = GF_4CC('u','k','n','w');
 	gf_isom_box_dump_start(a, "EntityToGroupTypeBox", trace);
 	a->type = GF_ISOM_BOX_TYPE_GRPT;

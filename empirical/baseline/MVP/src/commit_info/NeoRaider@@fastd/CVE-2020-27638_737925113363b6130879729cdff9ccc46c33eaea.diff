commit 737925113363b6130879729cdff9ccc46c33eaea
Author: Matthias Schiffer <mschiffer@universe-factory.net>
Date:   Mon Oct 19 21:08:16 2020 +0200

    receive: fix buffer leak when receiving invalid packets
    
    For fastd versions before v20, this was just a memory leak (which could
    still be used for DoS, as it's remotely triggerable). With the new
    buffer management of fastd v20, this will trigger an assertion failure
    instead as soon as the buffer pool is empty.

diff --git a/src/receive.c b/src/receive.c
index 043c9f2..6bca9f4 100644
--- a/src/receive.c
+++ b/src/receive.c
@@ -169,6 +169,11 @@ static inline void handle_socket_receive_known(
 
 	case PACKET_HANDSHAKE:
 		fastd_handshake_handle(sock, local_addr, remote_addr, peer, buffer);
+		break;
+
+	default:
+		fastd_buffer_free(buffer);
+		pr_debug("received packet with invalid type from %P[%I]", peer, remote_addr);
 	}
 }
 
@@ -195,6 +200,11 @@ static inline void handle_socket_receive_unknown(
 
 	case PACKET_HANDSHAKE:
 		fastd_handshake_handle(sock, local_addr, remote_addr, NULL, buffer);
+		break;
+
+	default:
+		fastd_buffer_free(buffer);
+		pr_debug("received packet with invalid type from unknown address %I", remote_addr);
 	}
 }
 

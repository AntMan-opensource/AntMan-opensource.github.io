commit dfb708498d1286c6e6403b47e08587109670bfce
Author: Mike Jumper <mjumper@apache.org>
Date:   Sat Oct 14 01:44:41 2023 -0700

    GUACAMOLE-1867: Migrate VNC to new memory management functions.

diff --git a/src/protocols/vnc/argv.c b/src/protocols/vnc/argv.c
index e59b1de7..44fe5ee0 100644
--- a/src/protocols/vnc/argv.c
+++ b/src/protocols/vnc/argv.c
@@ -21,8 +21,10 @@
 #include "argv.h"
 #include "vnc.h"
 
+#include <guacamole/mem.h>
 #include <guacamole/protocol.h>
 #include <guacamole/socket.h>
+#include <guacamole/string.h>
 #include <guacamole/user.h>
 
 #include <pthread.h>
@@ -38,16 +40,16 @@ int guac_vnc_argv_callback(guac_user* user, const char* mimetype,
 
     /* Update username */
     if (strcmp(name, GUAC_VNC_ARGV_USERNAME) == 0) {
-        free(settings->username);
-        settings->username = strdup(value);
+        guac_mem_free(settings->username);
+        settings->username = guac_strdup(value);
     }
     
     /* Update password */
     else if (strcmp(name, GUAC_VNC_ARGV_PASSWORD) == 0) {
-        free(settings->password);
-        settings->password = strdup(value);
+        guac_mem_free(settings->password);
+        settings->password = guac_strdup(value);
     }
 
     return 0;
 
-}
\ No newline at end of file
+}
diff --git a/src/protocols/vnc/client.c b/src/protocols/vnc/client.c
index ea7d44b3..43ead098 100644
--- a/src/protocols/vnc/client.c
+++ b/src/protocols/vnc/client.c
@@ -34,6 +34,7 @@
 #endif
 
 #include <guacamole/client.h>
+#include <guacamole/mem.h>
 #include <guacamole/recording.h>
 
 #include <pthread.h>
@@ -102,7 +103,7 @@ int guac_client_init(guac_client* client) {
     client->args = GUAC_VNC_CLIENT_ARGS;
 
     /* Alloc client data */
-    guac_vnc_client* vnc_client = calloc(1, sizeof(guac_vnc_client));
+    guac_vnc_client* vnc_client = guac_mem_zalloc(sizeof(guac_vnc_client));
     client->data = vnc_client;
 
 #ifdef ENABLE_VNC_TLS_LOCKING
@@ -209,7 +210,7 @@ int guac_vnc_client_free_handler(guac_client* client) {
 #endif
 
     /* Free generic data struct */
-    free(client->data);
+    guac_mem_free(client->data);
 
     return 0;
 }
diff --git a/src/protocols/vnc/cursor.c b/src/protocols/vnc/cursor.c
index 22d45ebe..bd013f55 100644
--- a/src/protocols/vnc/cursor.c
+++ b/src/protocols/vnc/cursor.c
@@ -28,6 +28,7 @@
 #include <cairo/cairo.h>
 #include <guacamole/client.h>
 #include <guacamole/layer.h>
+#include <guacamole/mem.h>
 #include <guacamole/protocol.h>
 #include <guacamole/socket.h>
 #include <rfb/rfbclient.h>
@@ -51,7 +52,7 @@ void guac_vnc_cursor(rfbClient* client, int x, int y, int w, int h, int bpp) {
 
     /* Cairo image buffer */
     int stride = cairo_format_stride_for_width(CAIRO_FORMAT_ARGB32, w);
-    unsigned char* buffer = malloc(h*stride);
+    unsigned char* buffer = guac_mem_alloc(h, stride);
     unsigned char* buffer_row_current = buffer;
 
     /* VNC image buffer */
@@ -120,7 +121,7 @@ void guac_vnc_cursor(rfbClient* client, int x, int y, int w, int h, int bpp) {
             buffer, w, h, stride);
 
     /* Free surface */
-    free(buffer);
+    guac_mem_free(buffer);
 
     /* libvncclient does not free rcMask as it does rcSource */
     free(client->rcMask);
diff --git a/src/protocols/vnc/display.c b/src/protocols/vnc/display.c
index 7273e4b3..8848e893 100644
--- a/src/protocols/vnc/display.c
+++ b/src/protocols/vnc/display.c
@@ -27,6 +27,7 @@
 #include <cairo/cairo.h>
 #include <guacamole/client.h>
 #include <guacamole/layer.h>
+#include <guacamole/mem.h>
 #include <guacamole/protocol.h>
 #include <guacamole/socket.h>
 #include <rfb/rfbclient.h>
@@ -69,7 +70,7 @@ void guac_vnc_update(rfbClient* client, int x, int y, int w, int h) {
 
     /* Init Cairo buffer */
     stride = cairo_format_stride_for_width(CAIRO_FORMAT_RGB24, w);
-    buffer = malloc(h*stride);
+    buffer = guac_mem_alloc(h, stride);
     buffer_row_current = buffer;
 
     bpp = client->format.bitsPerPixel/8;
@@ -134,7 +135,7 @@ void guac_vnc_update(rfbClient* client, int x, int y, int w, int h) {
 
     /* Free surface */
     cairo_surface_destroy(surface);
-    free(buffer);
+    guac_mem_free(buffer);
 
 }
 
diff --git a/src/protocols/vnc/settings.c b/src/protocols/vnc/settings.c
index a476b2c1..a7171128 100644
--- a/src/protocols/vnc/settings.c
+++ b/src/protocols/vnc/settings.c
@@ -24,6 +24,7 @@
 #include "common/defaults.h"
 #include "settings.h"
 
+#include <guacamole/mem.h>
 #include <guacamole/user.h>
 #include <guacamole/wol-constants.h>
 
@@ -395,7 +396,7 @@ guac_vnc_settings* guac_vnc_parse_args(guac_user* user,
         return NULL;
     }
 
-    guac_vnc_settings* settings = calloc(1, sizeof(guac_vnc_settings));
+    guac_vnc_settings* settings = guac_mem_zalloc(sizeof(guac_vnc_settings));
 
     settings->hostname =
         guac_user_parse_args_string(user, GUAC_VNC_CLIENT_ARGS, argv,
@@ -646,43 +647,43 @@ guac_vnc_settings* guac_vnc_parse_args(guac_user* user,
 void guac_vnc_settings_free(guac_vnc_settings* settings) {
 
     /* Free settings strings */
-    free(settings->clipboard_encoding);
-    free(settings->encodings);
-    free(settings->hostname);
-    free(settings->password);
-    free(settings->recording_name);
-    free(settings->recording_path);
-    free(settings->username);
+    guac_mem_free(settings->clipboard_encoding);
+    guac_mem_free(settings->encodings);
+    guac_mem_free(settings->hostname);
+    guac_mem_free(settings->password);
+    guac_mem_free(settings->recording_name);
+    guac_mem_free(settings->recording_path);
+    guac_mem_free(settings->username);
 
 #ifdef ENABLE_VNC_REPEATER
     /* Free VNC repeater settings */
-    free(settings->dest_host);
+    guac_mem_free(settings->dest_host);
 #endif
 
 #ifdef ENABLE_COMMON_SSH
     /* Free SFTP settings */
-    free(settings->sftp_directory);
-    free(settings->sftp_root_directory);
-    free(settings->sftp_host_key);
-    free(settings->sftp_hostname);
-    free(settings->sftp_passphrase);
-    free(settings->sftp_password);
-    free(settings->sftp_port);
-    free(settings->sftp_private_key);
-    free(settings->sftp_username);
+    guac_mem_free(settings->sftp_directory);
+    guac_mem_free(settings->sftp_root_directory);
+    guac_mem_free(settings->sftp_host_key);
+    guac_mem_free(settings->sftp_hostname);
+    guac_mem_free(settings->sftp_passphrase);
+    guac_mem_free(settings->sftp_password);
+    guac_mem_free(settings->sftp_port);
+    guac_mem_free(settings->sftp_private_key);
+    guac_mem_free(settings->sftp_username);
 #endif
 
 #ifdef ENABLE_PULSE
     /* Free PulseAudio settings */
-    free(settings->pa_servername);
+    guac_mem_free(settings->pa_servername);
 #endif
     
     /* Free Wake-on-LAN strings */
-    free(settings->wol_mac_addr);
-    free(settings->wol_broadcast_addr);
+    guac_mem_free(settings->wol_mac_addr);
+    guac_mem_free(settings->wol_broadcast_addr);
 
     /* Free settings structure */
-    free(settings);
+    guac_mem_free(settings);
 
 }
 

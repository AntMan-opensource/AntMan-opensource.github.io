commit 38b164ace7d6ae1c367883a3d67d7f559783faad
Author: Yukihiro "Matz" Matsumoto <matz@ruby.or.jp>
Date:   Sat Feb 12 12:39:35 2022 +0900

    codegen.c: fix a bug in `gen_values()`.
    
    - Fix limit handling that fails 15 arguments method calls.
    - Fix too early argument packing in arrays.

diff --git a/mrbgems/mruby-compiler/core/codegen.c b/mrbgems/mruby-compiler/core/codegen.c
index c49ea7514..b90eae3e8 100644
--- a/mrbgems/mruby-compiler/core/codegen.c
+++ b/mrbgems/mruby-compiler/core/codegen.c
@@ -1551,7 +1551,7 @@ gen_values(codegen_scope *s, node *t, int val, int limit)
   while (t) {
     int is_splat = nint(t->car->car) == NODE_SPLAT;
 
-    if (is_splat || n > limit || cursp() >= slimit) { /* flush stack */
+    if (is_splat || cursp() >= slimit) { /* flush stack */
       pop_n(n);
       if (first) {
         if (n == 0) {
@@ -1590,6 +1590,11 @@ gen_values(codegen_scope *s, node *t, int val, int limit)
     }
     return -1;                  /* variable length */
   }
+  else if (n > limit) {
+    pop_n(n);
+    genop_2(s, OP_ARRAY, cursp(), n);
+    return -1;
+  }
   return n;
 }
 

                             struct MY_CONSOLE_SCREEN_BUFFER_INFOEX {





























	ULONG      cbSize;
	COORD      dwSize;
	COORD      dwCursorPosition;
	WORD       wAttributes;
	SMALL_RECT srWindow;
	COORD      dwMaximumWindowSize;
	WORD       wPopupAttributes;
	BOOL       bFullscreenSupported;
	COLORREF   ColorTable[16];
};

struct MY_CONSOLE_READCONSOLE_CONTROL {
    ULONG nLength;
    ULONG nInitialChars;
    ULONG dwCtrlWakeupMask;
    ULONG dwControlKeyState;
};

struct MY_CONSOLE_FONT_INFOEX {
    ULONG cbSize;
    DWORD nFont;
    COORD dwFontSize;
    UINT FontFamily;
    UINT FontWeight;
    WCHAR FaceName[LF_FACESIZE];
};

extern MY_CONSOLE_FONT_INFOEX g_LastSetConsoleFont;


extern bool g_IgnoreSetLargeFont;


BOOL isConsoleBadDBCS();

BOOL apiGetConsoleScreenBufferInfoEx(HANDLE hConsoleOutput, MY_CONSOLE_SCREEN_BUFFER_INFOEX* lpConsoleScreenBufferInfoEx);
BOOL apiSetConsoleScreenBufferInfoEx(HANDLE hConsoleOutput, MY_CONSOLE_SCREEN_BUFFER_INFOEX* lpConsoleScreenBufferInfoEx);

BOOL apiGetConsoleFontSize(HANDLE hOutput, int &SizeY, int &SizeX, wchar_t (&rsFontName)[LF_FACESIZE]); 
BOOL apiSetConsoleFontSize(HANDLE hOutput, int inSizeY, int inSizeX, const wchar_t *asFontName); 
BOOL apiFixFontSizeForBufferSize(HANDLE hOutput, COORD dwSize, char* pszUtfLog = NULL, int cchLogMax = 0);
BOOL apiInitConsoleFontSize(HANDLE hOutput); 

BOOL apiPauseConsoleOutput(HWND hConWnd, bool bPause);
BOOL apiGetConsoleSelectionInfo(PCONSOLE_SELECTION_INFO lpConsoleSelectionInfo);

COORD MyGetLargestConsoleWindowSize(HANDLE hConsoleOutput);

class MSetConTextAttr {
protected:
	HANDLE mh_ConOut;
	CONSOLE_SCREEN_BUFFER_INFO m_csbi;
public:
	MSetConTextAttr(HANDLE hConOut, WORD wAttributes);
	~MSetConTextAttr();
};

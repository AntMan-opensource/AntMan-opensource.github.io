












 
 






 
 
 
 
 






 
 
 
 
 
 
 
 























 



 
extern   "C" { 























































































































































































































































































































































































































































typedef struct UX_SLAVE_CLASS_RNDIS_PARAMETER_STRUCT {
    VOID                    (*ux_slave_class_rndis_instance_activate)(VOID *);
    VOID                    (*ux_slave_class_rndis_instance_deactivate)(VOID *);
    ULONG                   ux_slave_class_rndis_parameter_media;
    ULONG                   ux_slave_class_rndis_parameter_vendor_id;
    ULONG                   ux_slave_class_rndis_parameter_driver_version;
    UCHAR                   ux_slave_class_rndis_parameter_vendor_description[UX_DEVICE_CLASS_RNDIS_VENDOR_DESCRIPTION_MAX_LENGTH];
    UCHAR                   ux_slave_class_rndis_parameter_local_node_id[UX_DEVICE_CLASS_RNDIS_NODE_ID_LENGTH];
    UCHAR                   ux_slave_class_rndis_parameter_remote_node_id[UX_DEVICE_CLASS_RNDIS_NODE_ID_LENGTH];
    NX_IP                   *ux_slave_class_rndis_parameter_nx_ip;
    ULONG                   ux_slave_class_rndis_parameter_nx_ip_address;
    ULONG                   ux_slave_class_rndis_parameter_nx_ip_network_mask;
    
} UX_SLAVE_CLASS_RNDIS_PARAMETER;



typedef struct UX_SLAVE_CLASS_RNDIS_STRUCT {
    UX_SLAVE_INTERFACE                      *ux_slave_class_rndis_interface;
    UX_SLAVE_CLASS_RNDIS_PARAMETER          ux_slave_class_rndis_parameter;
    UX_SEMAPHORE                            ux_slave_class_rndis_semaphore;
    UX_SLAVE_ENDPOINT                       *ux_slave_class_rndis_interrupt_endpoint;
    UX_SLAVE_ENDPOINT                       *ux_slave_class_rndis_bulkin_endpoint;
    UX_SLAVE_ENDPOINT                       *ux_slave_class_rndis_bulkout_endpoint;
    UCHAR                                   ux_slave_class_rndis_response[UX_DEVICE_CLASS_RNDIS_MAX_CONTROL_RESPONSE_LENGTH];
    ULONG                                   ux_slave_class_rndis_response_length;
    ULONG                                   ux_slave_class_rndis_state;
    ULONG                                   ux_slave_class_rndis_major_version;
    ULONG                                   ux_slave_class_rndis_minor_version;
    ULONG                                   ux_slave_class_rndis_max_transfer_size;
    ULONG                                   ux_slave_class_rndis_request_id;
    ULONG                                   ux_slave_class_rndis_statistics_xmit_ok;
    ULONG                                   ux_slave_class_rndis_statistics_rcv_ok;
    ULONG                                   ux_slave_class_rndis_statistics_xmit_error;
    ULONG                                   ux_slave_class_rndis_statistics_rcv_error;
    ULONG                                   ux_slave_class_rndis_statistics_rcv_no_buffer;
    ULONG                                   ux_slave_class_rndis_statistics_rcv_error_alignment;
    ULONG                                   ux_slave_class_rndis_statistics_xmit_one_collision;
    ULONG                                   ux_slave_class_rndis_statistics_xmit_more_collisions;
    UCHAR                                   ux_slave_class_rndis_local_node_id[UX_DEVICE_CLASS_RNDIS_NODE_ID_LENGTH];
    UCHAR                                   ux_slave_class_rndis_remote_node_id[UX_DEVICE_CLASS_RNDIS_NODE_ID_LENGTH];
    ULONG                                   ux_slave_class_rndis_nx_ip_address;
    ULONG                                   ux_slave_class_rndis_nx_ip_network_mask;


    NX_IP                                   *ux_slave_class_rndis_nx_ip;
    NX_INTERFACE                            *ux_slave_class_rndis_nx_interface;
    NX_PACKET                               *ux_slave_class_rndis_xmit_queue;
    NX_PACKET                               *ux_slave_class_rndis_receive_queue;
    NX_PACKET_POOL                          *ux_slave_class_rndis_packet_pool;



    UX_EVENT_FLAGS_GROUP                    ux_slave_class_rndis_event_flags_group;
    UX_THREAD                               ux_slave_class_rndis_interrupt_thread;
    UX_THREAD                               ux_slave_class_rndis_bulkin_thread;
    UX_THREAD                               ux_slave_class_rndis_bulkout_thread;
    UX_MUTEX                                ux_slave_class_rndis_mutex;
    UCHAR                                   *ux_slave_class_rndis_interrupt_thread_stack;
    UCHAR                                   *ux_slave_class_rndis_bulkin_thread_stack;
    UCHAR                                   *ux_slave_class_rndis_bulkout_thread_stack;


    ULONG                                   ux_slave_class_rndis_link_state;
    VOID                                    *ux_slave_class_rndis_network_handle;
    
} UX_SLAVE_CLASS_RNDIS;





                                        

                                        









UINT  _ux_device_class_rndis_activate(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_rndis_control_request(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_rndis_deactivate(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_rndis_entry(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_rndis_initialize(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_rndis_write(VOID *rndis_class, NX_PACKET *packet);
UINT  _ux_device_class_rndis_msg_query(UX_SLAVE_CLASS_RNDIS *rndis, UX_SLAVE_TRANSFER *transfer_request);
UINT  _ux_device_class_rndis_msg_reset(UX_SLAVE_CLASS_RNDIS *rndis, UX_SLAVE_TRANSFER *transfer_request);
UINT  _ux_device_class_rndis_msg_set(UX_SLAVE_CLASS_RNDIS *rndis, UX_SLAVE_TRANSFER *transfer_request);
UINT  _ux_device_class_rndis_msg_initialize(UX_SLAVE_CLASS_RNDIS *rndis, UX_SLAVE_TRANSFER *transfer_request);
UINT  _ux_device_class_rndis_msg_keep_alive(UX_SLAVE_CLASS_RNDIS *rndis, UX_SLAVE_TRANSFER *transfer_request);
VOID  _ux_device_class_rndis_interrupt_thread(ULONG rndis_class);
VOID  _ux_device_class_rndis_bulkin_thread(ULONG rndis_class);
VOID  _ux_device_class_rndis_bulkout_thread(ULONG rndis_class);








extern ULONG ux_device_class_rndis_oid_supported_list[];

   

} 




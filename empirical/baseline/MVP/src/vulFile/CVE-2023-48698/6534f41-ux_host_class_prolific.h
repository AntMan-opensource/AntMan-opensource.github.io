













 
 







 
 
 
 
 






 

 
 
 
 
 
 
















 



 
extern   "C" { 




                                                                


































































































































typedef struct UX_HOST_CLASS_PROLIFIC_STRUCT {
    struct UX_HOST_CLASS_PROLIFIC_STRUCT   *ux_host_class_prolific_next_instance;
    UX_HOST_CLASS   *ux_host_class_prolific_class;
    UX_DEVICE       *ux_host_class_prolific_device;
    UX_ENDPOINT     *ux_host_class_prolific_bulk_in_endpoint;
    UX_ENDPOINT     *ux_host_class_prolific_bulk_out_endpoint;
    UX_ENDPOINT     *ux_host_class_prolific_interrupt_endpoint;
    UX_INTERFACE    *ux_host_class_prolific_interface;
    UINT            ux_host_class_prolific_instance_status;
    UINT            ux_host_class_prolific_state;
    UX_SEMAPHORE    ux_host_class_prolific_semaphore;
    ULONG           ux_host_class_prolific_notification_count;
    ULONG           ux_host_class_prolific_device_state;
    VOID            (*ux_host_class_prolific_device_status_change_callback)(struct UX_HOST_CLASS_PROLIFIC_STRUCT *prolific,  ULONG  device_state);
    
    ULONG           ux_host_class_prolific_version;
    UCHAR           ux_host_class_prolific_device_type;
    struct UX_HOST_CLASS_PROLIFIC_RECEPTION_STRUCT   *ux_host_class_prolific_reception;
    
} UX_HOST_CLASS_PROLIFIC;




typedef struct UX_HOST_CLASS_PROLIFIC_RECEPTION_STRUCT {

    ULONG            ux_host_class_prolific_reception_state;
    ULONG            ux_host_class_prolific_reception_block_size;
    UCHAR            *ux_host_class_prolific_reception_data_buffer;
    ULONG            ux_host_class_prolific_reception_data_buffer_size;
    UCHAR            *ux_host_class_prolific_reception_data_head;
    UCHAR            *ux_host_class_prolific_reception_data_tail;
    VOID            (*ux_host_class_prolific_reception_callback)(struct UX_HOST_CLASS_PROLIFIC_STRUCT *prolific,  UINT  status, UCHAR *reception_buffer, ULONG reception_size);



} UX_HOST_CLASS_PROLIFIC_RECEPTION;



typedef struct UX_HOST_CLASS_PROLIFIC_LINE_CODING_STRUCT {

    ULONG            ux_host_class_prolific_line_coding_dter;
    ULONG            ux_host_class_prolific_line_coding_stop_bit;
    ULONG            ux_host_class_prolific_line_coding_parity;
    ULONG            ux_host_class_prolific_line_coding_data_bits;

} UX_HOST_CLASS_PROLIFIC_LINE_CODING;



typedef struct UX_HOST_CLASS_PROLIFIC_LINE_STATE_STRUCT {

    ULONG            ux_host_class_prolific_line_state_rts;
    ULONG            ux_host_class_prolific_line_state_dtr;

} UX_HOST_CLASS_PROLIFIC_LINE_STATE;



typedef struct UX_HOST_CLASS_PROLIFIC_LINE_BREAK_STRUCT {

    ULONG            ux_host_class_prolific_line_break;

} UX_HOST_CLASS_PROLIFIC_LINE_BREAK;




UINT  _ux_host_class_prolific_activate(UX_HOST_CLASS_COMMAND *command);
UINT  _ux_host_class_prolific_configure(UX_HOST_CLASS_PROLIFIC *prolific);
UINT  _ux_host_class_prolific_deactivate(UX_HOST_CLASS_COMMAND *command);
UINT  _ux_host_class_prolific_endpoints_get(UX_HOST_CLASS_PROLIFIC *prolific);
UINT  _ux_host_class_prolific_entry(UX_HOST_CLASS_COMMAND *command);
UINT  _ux_host_class_prolific_read (UX_HOST_CLASS_PROLIFIC *prolific, UCHAR *data_pointer,  ULONG requested_length, ULONG *actual_length);
UINT  _ux_host_class_prolific_write(UX_HOST_CLASS_PROLIFIC *prolific, UCHAR *data_pointer,  ULONG requested_length, ULONG *actual_length);
UINT  _ux_host_class_prolific_ioctl(UX_HOST_CLASS_PROLIFIC *prolific, ULONG request, VOID *parameter);
UINT  _ux_host_class_prolific_command(UX_HOST_CLASS_PROLIFIC *prolific, ULONG command, ULONG value, UCHAR *data_buffer, ULONG data_length);
VOID  _ux_host_class_prolific_transfer_request_completed(UX_TRANSFER *transfer_request);
UINT  _ux_host_class_prolific_reception_stop (UX_HOST_CLASS_PROLIFIC *prolific,  UX_HOST_CLASS_PROLIFIC_RECEPTION *prolific_reception);
UINT  _ux_host_class_prolific_reception_start (UX_HOST_CLASS_PROLIFIC *prolific,  UX_HOST_CLASS_PROLIFIC_RECEPTION *prolific_reception);
                                    
VOID  _ux_host_class_prolific_reception_callback (UX_TRANSFER *transfer_request);
UINT  _ux_host_class_prolific_setup(UX_HOST_CLASS_PROLIFIC *prolific);












   

} 




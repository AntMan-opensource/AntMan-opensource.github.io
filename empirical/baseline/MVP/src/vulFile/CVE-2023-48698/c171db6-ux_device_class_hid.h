












































































extern   "C" {





















































































typedef struct UX_SLAVE_CLASS_HID_EVENT_STRUCT {
    ULONG                   ux_device_class_hid_event_report_id;
    ULONG                   ux_device_class_hid_event_report_type;
    UCHAR                   ux_device_class_hid_event_buffer[UX_DEVICE_CLASS_HID_EVENT_BUFFER_LENGTH];
    ULONG                   ux_device_class_hid_event_length;

} UX_SLAVE_CLASS_HID_EVENT;



typedef struct UX_SLAVE_CLASS_HID_STRUCT {

    UX_SLAVE_INTERFACE              *ux_slave_class_hid_interface;
    UX_SLAVE_ENDPOINT               *ux_device_class_hid_interrupt_endpoint;
    UINT                            ux_device_class_hid_state;
    UINT                            (*ux_device_class_hid_callback)(struct UX_SLAVE_CLASS_HID_STRUCT *hid, UX_SLAVE_CLASS_HID_EVENT *);
    UINT                            (*ux_device_class_hid_get_callback)(struct UX_SLAVE_CLASS_HID_STRUCT *hid, UX_SLAVE_CLASS_HID_EVENT *);
    VOID                            (*ux_slave_class_hid_instance_activate)(VOID *);
    VOID                            (*ux_slave_class_hid_instance_deactivate)(VOID *);
    UCHAR                           *ux_device_class_hid_report_address;
    ULONG                           ux_device_class_hid_report_id;
    ULONG                           ux_device_class_hid_report_length;

    UX_EVENT_FLAGS_GROUP            ux_device_class_hid_event_flags_group;

    UINT                            ux_device_class_hid_event_state;
    ULONG                           ux_device_class_hid_event_wait_start;
    UX_SLAVE_CLASS_HID_EVENT        ux_device_class_hid_event;

    ULONG                           ux_device_class_hid_event_idle_rate;
    ULONG                           ux_device_class_hid_event_wait_timeout;
    ULONG                           ux_device_class_hid_protocol;
    UX_SLAVE_CLASS_HID_EVENT        *ux_device_class_hid_event_array;
    UX_SLAVE_CLASS_HID_EVENT        *ux_device_class_hid_event_array_head;
    UX_SLAVE_CLASS_HID_EVENT        *ux_device_class_hid_event_array_tail;
    UX_SLAVE_CLASS_HID_EVENT        *ux_device_class_hid_event_array_end;


    UX_SLAVE_ENDPOINT               *ux_device_class_hid_read_endpoint;
    struct UX_DEVICE_CLASS_HID_RECEIVER_STRUCT *ux_device_class_hid_receiver;

    UX_MUTEX                        ux_device_class_hid_read_mutex;

    UCHAR                           *ux_device_class_hid_read_buffer;
    ULONG                           ux_device_class_hid_read_requested_length;
    ULONG                           ux_device_class_hid_read_actual_length;
    ULONG                           ux_device_class_hid_read_transfer_length;
    UINT                            ux_device_class_hid_read_state;
    UINT                            ux_device_class_hid_read_status;



} UX_SLAVE_CLASS_HID;




typedef struct UX_DEVICE_CLASS_HID_RECEIVED_EVENT_STRUCT {
    ULONG                   ux_device_class_hid_received_event_length;
    UCHAR                   *ux_device_class_hid_received_event_data;
} UX_DEVICE_CLASS_HID_RECEIVED_EVENT;

typedef struct UX_DEVICE_CLASS_HID_RECEIVER_STRUCT {

    VOID                    (*ux_device_class_hid_receiver_uninitialize)(struct UX_DEVICE_CLASS_HID_RECEIVER_STRUCT *receiver);
    VOID                    (*ux_device_class_hid_receiver_event_callback)(struct UX_SLAVE_CLASS_HID_STRUCT *hid);

    ULONG                   ux_device_class_hid_receiver_event_buffer_size;
    UX_DEVICE_CLASS_HID_RECEIVED_EVENT *ux_device_class_hid_receiver_events;
    UX_DEVICE_CLASS_HID_RECEIVED_EVENT *ux_device_class_hid_receiver_events_end;
    UX_DEVICE_CLASS_HID_RECEIVED_EVENT *ux_device_class_hid_receiver_event_read_pos;
    UX_DEVICE_CLASS_HID_RECEIVED_EVENT *ux_device_class_hid_receiver_event_save_pos;


    UX_THREAD               ux_device_class_hid_receiver_thread;

    UINT                    (*ux_device_class_hid_receiver_tasks_run)(struct UX_SLAVE_CLASS_HID_STRUCT *hid);

} UX_DEVICE_CLASS_HID_RECEIVER;




typedef struct UX_SLAVE_CLASS_HID_PARAMETER_STRUCT {

    VOID                    (*ux_slave_class_hid_instance_activate)(VOID *);
    VOID                    (*ux_slave_class_hid_instance_deactivate)(VOID *);
    UCHAR                   *ux_device_class_hid_parameter_report_address;
    ULONG                   ux_device_class_hid_parameter_report_id;
    ULONG                   ux_device_class_hid_parameter_report_length;
    UINT                    (*ux_device_class_hid_parameter_callback)(struct UX_SLAVE_CLASS_HID_STRUCT *hid, UX_SLAVE_CLASS_HID_EVENT *);
    UINT                    (*ux_device_class_hid_parameter_get_callback)(struct UX_SLAVE_CLASS_HID_STRUCT *hid, UX_SLAVE_CLASS_HID_EVENT *);

    UINT                    (*ux_device_class_hid_parameter_receiver_initialize)(UX_SLAVE_CLASS_HID *hid, struct UX_SLAVE_CLASS_HID_PARAMETER_STRUCT *parameter, UX_DEVICE_CLASS_HID_RECEIVER **receiver);
    ULONG                   ux_device_class_hid_parameter_receiver_event_max_number;
    ULONG                   ux_device_class_hid_parameter_receiver_event_max_length;
    VOID                    (*ux_device_class_hid_parameter_receiver_event_callback)(struct UX_SLAVE_CLASS_HID_STRUCT *hid);


} UX_SLAVE_CLASS_HID_PARAMETER;



UINT  _ux_device_class_hid_descriptor_send(UX_SLAVE_CLASS_HID *hid, ULONG descriptor_type, ULONG request_index, ULONG host_length);
UINT  _ux_device_class_hid_activate(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_hid_deactivate(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_hid_control_request(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_hid_entry(UX_SLAVE_CLASS_COMMAND *command);
VOID  _ux_device_class_hid_interrupt_thread(ULONG hid_class);
UINT  _ux_device_class_hid_initialize(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_hid_uninitialize(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_hid_event_set(UX_SLAVE_CLASS_HID *hid, UX_SLAVE_CLASS_HID_EVENT *hid_event);
UINT  _ux_device_class_hid_event_get(UX_SLAVE_CLASS_HID *hid, UX_SLAVE_CLASS_HID_EVENT *hid_event);
UINT  _ux_device_class_hid_report_set(UX_SLAVE_CLASS_HID *hid, ULONG descriptor_type, ULONG request_index, ULONG host_length);
UINT  _ux_device_class_hid_report_get(UX_SLAVE_CLASS_HID *hid, ULONG descriptor_type, ULONG request_index, ULONG host_length);

UINT  _ux_device_class_hid_tasks_run(VOID *class_instance);

UINT  _ux_device_class_hid_read(UX_SLAVE_CLASS_HID *hid, UCHAR *buffer, ULONG requested_length, ULONG *actual_length);


VOID  _ux_device_class_hid_receiver_thread(ULONG hid_class);
UINT  _ux_device_class_hid_receiver_initialize(UX_SLAVE_CLASS_HID *hid, UX_SLAVE_CLASS_HID_PARAMETER *parameter, UX_DEVICE_CLASS_HID_RECEIVER **receiver);

VOID  _ux_device_class_hid_receiver_uninitialize(UX_DEVICE_CLASS_HID_RECEIVER *receiver);
UINT  _ux_device_class_hid_receiver_event_get(UX_SLAVE_CLASS_HID *hid, UX_DEVICE_CLASS_HID_RECEIVED_EVENT *event);
UINT  _ux_device_class_hid_receiver_event_free(UX_SLAVE_CLASS_HID *hid);

UINT  _ux_device_class_hid_read_run(UX_SLAVE_CLASS_HID *hid, UCHAR *buffer, ULONG requested_length, ULONG *actual_length);

UINT  _ux_device_class_hid_receiver_tasks_run(UX_SLAVE_CLASS_HID *hid);




















}




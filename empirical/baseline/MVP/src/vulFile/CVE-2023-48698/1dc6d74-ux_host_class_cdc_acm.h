













 
 







 
 
 
 
 






 

 
 
 
 
 
 





















 



 
extern   "C" { 

















































































































































typedef struct UX_HOST_CLASS_CDC_ACM_STRUCT {
    struct UX_HOST_CLASS_CDC_ACM_STRUCT   *ux_host_class_cdc_acm_next_instance;
    UX_HOST_CLASS  *ux_host_class_cdc_acm_class;
    UX_DEVICE      *ux_host_class_cdc_acm_device;
    UX_ENDPOINT    *ux_host_class_cdc_acm_bulk_in_endpoint;
    UX_ENDPOINT    *ux_host_class_cdc_acm_bulk_out_endpoint;
    UX_ENDPOINT    *ux_host_class_cdc_acm_interrupt_endpoint;
    UX_INTERFACE   *ux_host_class_cdc_acm_interface;
    UINT           ux_host_class_cdc_acm_instance_status;
    UINT           ux_host_class_cdc_acm_state;
    ULONG          ux_host_class_cdc_acm_notification_count;
    ULONG          ux_host_class_cdc_acm_capabilities;
    ULONG          ux_host_class_cdc_acm_device_state;
    struct UX_HOST_CLASS_CDC_ACM_RECEPTION_STRUCT   *ux_host_class_cdc_acm_reception;
    
    VOID           (*ux_host_class_cdc_acm_device_status_change_callback)(struct UX_HOST_CLASS_CDC_ACM_STRUCT *cdc_acm,  ULONG  notification_type, ULONG notification_value);

    UX_SEMAPHORE   ux_host_class_cdc_acm_semaphore;

    UINT           ux_host_class_cdc_acm_status;
    VOID           *ux_host_class_cdc_acm_allocated;
    ULONG          ux_host_class_cdc_acm_interfaces_bitmap;
    ULONG          ux_host_class_cdc_acm_tick;
    struct UX_HOST_CLASS_CDC_ACM_STRUCT *ux_host_class_cdc_acm_control;
    ULONG          ux_host_class_cdc_acm_write_length;
    ULONG          ux_host_class_cdc_acm_write_count;
    VOID           (*ux_host_class_cdc_acm_write_callback)( struct UX_HOST_CLASS_CDC_ACM_STRUCT *cdc_acm, UINT status, ULONG length);

    UCHAR          ux_host_class_cdc_acm_cmd_state;
    UCHAR          ux_host_class_cdc_acm_read_state;
    UCHAR          ux_host_class_cdc_acm_write_state;
    UCHAR          ux_host_class_cdc_acm_next_state;

} UX_HOST_CLASS_CDC_ACM;




typedef struct UX_HOST_CLASS_CDC_DLC_STRUCT {
    struct UX_HOST_CLASS_CDC_DLC_STRUCT   *ux_host_class_cdc_dlc_next_instance;
    UX_HOST_CLASS  *ux_host_class_cdc_dlc_class;
    UX_DEVICE      *ux_host_class_cdc_dlc_device;
    UX_ENDPOINT    *ux_host_class_cdc_dlc_bulk_in_endpoint;
    UX_ENDPOINT    *ux_host_class_cdc_dlc_bulk_out_endpoint;
    UX_ENDPOINT    *ux_host_class_cdc_dlc_interrupt_endpoint;
    UX_INTERFACE   *ux_host_class_cdc_dlc_interface;
    UINT           ux_host_class_cdc_dlc_instance_status;
    UINT           ux_host_class_cdc_dlc_state;
    ULONG          ux_host_class_cdc_dlc_notification_count;
    ULONG          ux_host_class_cdc_dlc_capabilities;
    struct UX_HOST_CLASS_CDC_DLC_RECEPTION_STRUCT   *ux_host_class_cdc_dlc_reception;

    UX_SEMAPHORE   ux_host_class_cdc_dlc_semaphore;

    ULONG          ux_host_class_cdc_dlc_interfaces_bitmap;
    struct UX_HOST_CLASS_CDC_ACM_STRUCT *ux_host_class_cdc_dlc_control;
    ULONG          ux_host_class_cdc_dlc_write_length;
    ULONG          ux_host_class_cdc_dlc_write_count;
    VOID           (*ux_host_class_cdc_dlc_write_callback)( struct UX_HOST_CLASS_CDC_ACM_STRUCT *cdc_acm, UINT status, ULONG length);

    UCHAR          ux_host_class_cdc_dlc_cmd_state;
    UCHAR          ux_host_class_cdc_dlc_read_state;
    UCHAR          ux_host_class_cdc_dlc_write_state;
    UCHAR          ux_host_class_cdc_dlc_next_state;

} UX_HOST_CLASS_CDC_DLC;



typedef struct UX_HOST_CLASS_CDC_ACM_RECEPTION_STRUCT {

    ULONG          ux_host_class_cdc_acm_reception_state;
    ULONG          ux_host_class_cdc_acm_reception_block_size;
    UCHAR          *ux_host_class_cdc_acm_reception_data_buffer;
    ULONG          ux_host_class_cdc_acm_reception_data_buffer_size;
    UCHAR          *ux_host_class_cdc_acm_reception_data_head;
    UCHAR          *ux_host_class_cdc_acm_reception_data_tail;
    VOID           (*ux_host_class_cdc_acm_reception_callback)(struct UX_HOST_CLASS_CDC_ACM_STRUCT *cdc_acm,  UINT  status, UCHAR *reception_buffer, ULONG reception_size);



} UX_HOST_CLASS_CDC_ACM_RECEPTION;



typedef struct UX_HOST_CLASS_CDC_ACM_LINE_CODING_STRUCT {

    ULONG          ux_host_class_cdc_acm_line_coding_dter;
    ULONG          ux_host_class_cdc_acm_line_coding_stop_bit;
    ULONG          ux_host_class_cdc_acm_line_coding_parity;
    ULONG          ux_host_class_cdc_acm_line_coding_data_bits;

} UX_HOST_CLASS_CDC_ACM_LINE_CODING;



typedef struct UX_HOST_CLASS_CDC_ACM_LINE_STATE_STRUCT {

    ULONG          ux_host_class_cdc_acm_line_state_rts;
    ULONG          ux_host_class_cdc_acm_line_state_dtr;

} UX_HOST_CLASS_CDC_ACM_LINE_STATE;



typedef struct UX_HOST_CLASS_CDC_ACM_LINE_BREAK_STRUCT {

    ULONG           ux_host_class_cdc_acm_line_break;

} UX_HOST_CLASS_CDC_ACM_LINE_BREAK;



UINT  _ux_host_class_cdc_acm_activate(UX_HOST_CLASS_COMMAND *command);
UINT  _ux_host_class_cdc_acm_configure(UX_HOST_CLASS_CDC_ACM *cdc_acm);
UINT  _ux_host_class_cdc_acm_deactivate(UX_HOST_CLASS_COMMAND *command);
UINT  _ux_host_class_cdc_acm_endpoints_get(UX_HOST_CLASS_CDC_ACM *cdc_acm);
UINT  _ux_host_class_cdc_acm_entry(UX_HOST_CLASS_COMMAND *command);
UINT  _ux_host_class_cdc_acm_read (UX_HOST_CLASS_CDC_ACM *cdc_acm, UCHAR *data_pointer,  ULONG requested_length, ULONG *actual_length);
UINT  _ux_host_class_cdc_acm_write(UX_HOST_CLASS_CDC_ACM *cdc_acm, UCHAR *data_pointer,  ULONG requested_length, ULONG *actual_length);
UINT  _ux_host_class_cdc_acm_ioctl(UX_HOST_CLASS_CDC_ACM *cdc_acm, ULONG request, VOID *parameter);
UINT  _ux_host_class_cdc_acm_command(UX_HOST_CLASS_CDC_ACM *cdc_acm, ULONG command, ULONG value, UCHAR *data_buffer, ULONG data_length);
VOID  _ux_host_class_cdc_acm_transfer_request_completed(UX_TRANSFER *transfer_request);
UINT  _ux_host_class_cdc_acm_capabilities_get(UX_HOST_CLASS_CDC_ACM *cdc_acm);
UINT  _ux_host_class_cdc_acm_reception_stop (UX_HOST_CLASS_CDC_ACM *cdc_acm,  UX_HOST_CLASS_CDC_ACM_RECEPTION *cdc_acm_reception);
UINT  _ux_host_class_cdc_acm_reception_start (UX_HOST_CLASS_CDC_ACM *cdc_acm,  UX_HOST_CLASS_CDC_ACM_RECEPTION *cdc_acm_reception);
                                    
VOID  _ux_host_class_cdc_acm_reception_callback (UX_TRANSFER *transfer_request);

UINT  _ux_host_class_cdc_acm_write_with_callback(UX_HOST_CLASS_CDC_ACM *cdc_acm, UCHAR *data_pointer,  ULONG requested_length);
VOID  _ux_host_class_cdc_acm_transmission_callback(UX_TRANSFER *transfer_request);












   

} 




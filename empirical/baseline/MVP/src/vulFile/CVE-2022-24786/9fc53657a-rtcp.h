










PJ_BEGIN_DECL         typedef struct pjmedia_rtcp_sr {









    pj_uint32_t	    ntp_sec;	    
    pj_uint32_t	    ntp_frac;	    
    pj_uint32_t	    rtp_ts;	    
    pj_uint32_t	    sender_pcount;  
    pj_uint32_t	    sender_bcount;  
} pjmedia_rtcp_sr;



typedef struct pjmedia_rtcp_rr {
    pj_uint32_t	    ssrc;	    

    pj_uint32_t	    fract_lost:8;   
    pj_uint32_t	    total_lost_2:8; 
    pj_uint32_t	    total_lost_1:8; 
    pj_uint32_t	    total_lost_0:8; 

    pj_uint32_t	    fract_lost:8;   
    pj_uint32_t	    total_lost_2:8; 
    pj_uint32_t	    total_lost_1:8; 
    pj_uint32_t	    total_lost_0:8; 

    pj_uint32_t	    last_seq;	    
    pj_uint32_t	    jitter;	    
    pj_uint32_t	    lsr;	    
    pj_uint32_t	    dlsr;	    
} pjmedia_rtcp_rr;



typedef struct pjmedia_rtcp_common {

    unsigned	    version:2;	
    unsigned	    p:1;	
    unsigned	    count:5;	
    unsigned	    pt:8;	

    unsigned	    count:5;	
    unsigned	    p:1;	
    unsigned	    version:2;	
    unsigned	    pt:8;	

    unsigned	    length:16;	
    pj_uint32_t	    ssrc;	
} pjmedia_rtcp_common;



typedef struct pjmedia_rtcp_sr_pkt {
    pjmedia_rtcp_common  common;	
    pjmedia_rtcp_sr	 sr;		
    pjmedia_rtcp_rr	 rr;		
} pjmedia_rtcp_sr_pkt;


typedef struct pjmedia_rtcp_rr_pkt {
    pjmedia_rtcp_common  common;	
    pjmedia_rtcp_rr	 rr;		
} pjmedia_rtcp_rr_pkt;






typedef struct pjmedia_rtcp_sdes {
    pj_str_t	cname;		
    pj_str_t	name;		
    pj_str_t	email;		
    pj_str_t	phone;		
    pj_str_t	loc;		
    pj_str_t	tool;		
    pj_str_t	note;		
} pjmedia_rtcp_sdes;



typedef struct pjmedia_rtcp_ntp_rec {
    pj_uint32_t	    hi;		
    pj_uint32_t	    lo;		
} pjmedia_rtcp_ntp_rec;



typedef struct pjmedia_rtcp_stream_stat {
    pj_time_val	    update;	
    unsigned	    update_cnt;	
    pj_uint32_t	    pkt;	
    pj_uint32_t	    bytes;	
    unsigned	    discard;	
    unsigned	    loss;	
    unsigned	    reorder;	
    unsigned	    dup;	

    pj_math_stat    loss_period;

    struct {
	unsigned    burst:1;	
    	unsigned    random:1;	
    } loss_type;		

    pj_math_stat    jitter;	

} pjmedia_rtcp_stream_stat;



typedef struct pjmedia_rtcp_stat {
    pj_time_val		     start; 

    pjmedia_rtcp_stream_stat tx;    
    pjmedia_rtcp_stream_stat rx;    
    
    pj_math_stat	     rtt;   

    pj_uint32_t		     rtp_tx_last_ts; 
    pj_uint16_t		     rtp_tx_last_seq;


    pj_math_stat	     rx_ipdv;



    pj_math_stat	     rx_raw_jitter;


    pjmedia_rtcp_sdes	     peer_sdes;	
    char		     peer_sdes_buf_[PJMEDIA_RTCP_RX_SDES_BUF_LEN];
					

} pjmedia_rtcp_stat;



typedef struct pjmedia_rtcp_session {
    char		   *name;	
    pjmedia_rtcp_sr_pkt	    rtcp_sr_pkt;
    pjmedia_rtcp_rr_pkt	    rtcp_rr_pkt;
    
    pjmedia_rtp_seq_session seq_ctrl;	
    unsigned		    rtp_last_ts;

    unsigned		    clock_rate;	
    unsigned		    pkt_size;	
    pj_uint32_t		    received;   
    pj_uint32_t		    exp_prior;	
    pj_uint32_t		    rx_prior;	
    pj_int32_t		    transit;    
    pj_uint32_t		    jitter;	
    pj_time_val		    tv_base;	
    pj_timestamp	    ts_base;	
    pj_timestamp	    ts_freq;	
    pj_uint32_t		    rtp_ts_base;

    pj_uint32_t		    rx_lsr;	
    pj_timestamp	    rx_lsr_time;
    pj_uint32_t		    peer_ssrc;	
    
    pjmedia_rtcp_stat	    stat;	


    
    pj_bool_t		    xr_enabled;

    
    pjmedia_rtcp_xr_session xr_session;

} pjmedia_rtcp_session;



typedef struct pjmedia_rtcp_session_setting {
    char	    *name;		
    unsigned	     clock_rate;	
    unsigned	     samples_per_frame;	
    pj_uint32_t	     ssrc;		
    pj_uint32_t	     rtp_ts_base;	
} pjmedia_rtcp_session_setting;



PJ_DECL(void) pjmedia_rtcp_session_setting_default( pjmedia_rtcp_session_setting *settings);



PJ_DECL(void) pjmedia_rtcp_init_stat(pjmedia_rtcp_stat *stat);



PJ_DECL(void) pjmedia_rtcp_init( pjmedia_rtcp_session *session,  char *name, unsigned clock_rate, unsigned samples_per_frame, pj_uint32_t ssrc );






PJ_DECL(void) pjmedia_rtcp_init2(pjmedia_rtcp_session *session, const pjmedia_rtcp_session_setting *settings);



PJ_DECL(pj_status_t) pjmedia_rtcp_get_ntp_time(const pjmedia_rtcp_session *sess, pjmedia_rtcp_ntp_rec *ntp);



PJ_DECL(void) pjmedia_rtcp_fini( pjmedia_rtcp_session *session);



PJ_DECL(void) pjmedia_rtcp_rx_rtp( pjmedia_rtcp_session *session,  unsigned seq, unsigned ts, unsigned payload);





PJ_DECL(void) pjmedia_rtcp_rx_rtp2(pjmedia_rtcp_session *session,  unsigned seq, unsigned ts, unsigned payload, pj_bool_t discarded);






PJ_DECL(void) pjmedia_rtcp_tx_rtp( pjmedia_rtcp_session *session,  unsigned ptsize );



PJ_DECL(void) pjmedia_rtcp_rx_rtcp( pjmedia_rtcp_session *session, const void *rtcp_pkt, pj_size_t size);




PJ_DECL(void) pjmedia_rtcp_build_rtcp( pjmedia_rtcp_session *session,  void **rtcp_pkt, int *len);



PJ_DECL(pj_status_t) pjmedia_rtcp_build_rtcp_sdes( pjmedia_rtcp_session *session, void *buf, pj_size_t *length, const pjmedia_rtcp_sdes *sdes);





PJ_DECL(pj_status_t) pjmedia_rtcp_build_rtcp_bye( pjmedia_rtcp_session *session, void *buf, pj_size_t *length, const pj_str_t *reason);






PJ_DECL(pj_status_t) pjmedia_rtcp_enable_xr( pjmedia_rtcp_session *session,  pj_bool_t enable);




PJ_END_DECL   



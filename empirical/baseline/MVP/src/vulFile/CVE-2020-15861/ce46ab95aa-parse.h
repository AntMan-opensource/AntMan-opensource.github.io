



extern          "C" {




    











    struct variable_list;

    
    struct enum_list {
        struct enum_list *next;
        int             value;
        char           *label;
    };

    
    struct range_list {
        struct range_list *next;
        int             low, high;
    };

    
    struct index_list {
        struct index_list *next;
        char           *ilabel;
        char            isimplied;
    };

    
    struct varbind_list {
        struct varbind_list *next;
        char           *vblabel;
    };

    
    struct tree {
        struct tree    *child_list;     
        struct tree    *next_peer;      
        struct tree    *next;   
        struct tree    *parent;
        char           *label;  
        u_long          subid;  
        int             modid;  
        int             number_modules;
        int            *module_list;    
        int             tc_index;       
        int             type;   
        int             access; 
        int             status; 
        struct enum_list *enums;        
        struct range_list *ranges;
        struct index_list *indexes;
        char           *augments;
        struct varbind_list *varbinds;
        char           *hint;
        char           *units;
        int             (*printomat) (u_char **, size_t *, size_t *, int, const netsnmp_variable_list *, const struct enum_list *, const char *, const char *);


        void            (*printer) (char *, const netsnmp_variable_list *, const struct enum_list *, const char *, const char *);   
        char           *description;    
        char           *reference;    
        int             reported;       
        char           *defaultValue;
       char	       *parseErrorString; 
    };

    
    struct module_import {
        char           *label;  
        int             modid;  
    };

    struct module {
        char           *name;   
        char           *file;   
        struct module_import *imports;  
        int             no_imports;     
        
        int             modid;  
        struct module  *next;   
    };

    struct module_compatability {
        const char     *old_module;
        const char     *new_module;
        const char     *tag;    
        size_t          tag_len;        
        struct module_compatability *next;      
    };


    













































    int             netsnmp_unload_module(const char *name);

    int             unload_module(const char *name);

    void            netsnmp_init_mib_internals(void);
    void            unload_all_mibs(void);
    int             add_mibfile(const char*, const char*, FILE *);
    int             which_module(const char *);
    NETSNMP_IMPORT char           *module_name(int, char *);
    NETSNMP_IMPORT void            print_subtree(FILE *, struct tree *, int);
    NETSNMP_IMPORT void            print_ascii_dump_tree(FILE *, struct tree *, int);
    NETSNMP_IMPORT struct tree    *find_tree_node(const char *, int);
    NETSNMP_IMPORT const char     *get_tc_descriptor(int);
    NETSNMP_IMPORT const char     *get_tc_description(int);
    NETSNMP_IMPORT struct tree    *find_best_tree_node(const char *, struct tree *, u_int *);

    
    NETSNMP_IMPORT struct tree    *find_node(const char *, struct tree *);
    struct tree    *find_node2(const char *, const char *); 
    NETSNMP_IMPORT struct module  *find_module(int);
    void            adopt_orphans(void);
    NETSNMP_IMPORT char           *snmp_mib_toggle_options(char *options);
    NETSNMP_IMPORT void            snmp_mib_toggle_options_usage(const char *lead, FILE * outf);

    NETSNMP_IMPORT void            print_mib(FILE *);
    NETSNMP_IMPORT void            print_mib_tree(FILE *, struct tree *, int);
    int             get_mib_parse_error_count(void);
    NETSNMP_IMPORT int             snmp_get_token(FILE * fp, char *token, int maxtlen);
    NETSNMP_IMPORT struct tree    *find_best_tree_node(const char *name, struct tree *tree_top, u_int * match);




}



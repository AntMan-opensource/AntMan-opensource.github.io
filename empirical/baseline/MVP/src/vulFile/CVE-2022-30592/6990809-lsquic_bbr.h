








struct lsquic_bbr {
    const struct lsquic_conn_public  *bbr_conn_pub;

    enum bbr_mode {
        BBR_MODE_STARTUP, BBR_MODE_DRAIN, BBR_MODE_PROBE_BW, BBR_MODE_PROBE_RTT, }                           bbr_mode;




    enum {
        BBR_RS_NOT_IN_RECOVERY, BBR_RS_CONSERVATION, BBR_RS_GROWTH, }                           bbr_recovery_state;



    enum {
        BBR_FLAG_IN_ACK                  = 1 << 0,    BBR_FLAG_LAST_SAMPLE_APP_LIMITED = 1 << 1, BBR_FLAG_HAS_NON_APP_LIMITED     = 1 << 2, BBR_FLAG_APP_LIMITED_SINCE_LAST_PROBE_RTT = 1 << 3, BBR_FLAG_PROBE_RTT_DISABLED_IF_APP_LIMITED = 1 << 4, BBR_FLAG_PROBE_RTT_SKIPPED_IF_SIMILAR_RTT = 1 << 5, BBR_FLAG_EXIT_STARTUP_ON_LOSS    = 1 << 6, BBR_FLAG_IS_AT_FULL_BANDWIDTH    = 1 << 7, BBR_FLAG_EXITING_QUIESCENCE      = 1 << 8, BBR_FLAG_PROBE_RTT_ROUND_PASSED  = 1 << 9, BBR_FLAG_FLEXIBLE_APP_LIMITED    = 1 << 10,   BBR_FLAG_DRAIN_TO_TARGET         = 1 << 11,   BBR_FLAG_EXPIRE_ACK_AGG_IN_STARTUP = 1 << 12,   BBR_FLAG_PROBE_RTT_BASED_ON_BDP  = 1 << 13,  BBR_FLAG_SLOWER_STARTUP          = 1 << 14,  BBR_FLAG_ENABLE_ACK_AGG_IN_STARTUP = 1 << 15,  BBR_FLAG_RATE_BASED_STARTUP      = 1 << 16, }                           bbr_flags;































    
    
    unsigned                    bbr_cycle_current_offset;

    const struct lsquic_rtt_stats *bbr_rtt_stats;

    struct bw_sampler           bbr_bw_sampler;

    
    struct minmax               bbr_max_bandwidth;

    
    struct minmax               bbr_max_ack_height;

    
    uint64_t                    bbr_init_cwnd;
    
    uint64_t                    bbr_min_cwnd;
    
    uint64_t                    bbr_max_cwnd;
    
    uint64_t                    bbr_cwnd;

    
    lsquic_time_t               bbr_aggregation_epoch_start_time;
    uint64_t                    bbr_aggregation_epoch_bytes;

    lsquic_packno_t             bbr_last_sent_packno;
    lsquic_packno_t             bbr_current_round_trip_end;

    
    
    
    lsquic_packno_t             bbr_end_recovery_at;

    
    uint64_t                    bbr_round_count;

    
    uint64_t                    bbr_full_bw;

    
    uint64_t                    bbr_full_bw_count;

    
    struct bandwidth            bbr_pacing_rate;

    
    uint64_t                    bbr_startup_bytes_lost;

    
    float                       bbr_pacing_gain;

    
    float                       bbr_high_gain;

    
    float                       bbr_high_cwnd_gain;

    
    float                       bbr_drain_gain;

    
    unsigned                    bbr_num_startup_rtts;

    
    
    unsigned                    bbr_round_wo_bw_gain;

    
    float                       bbr_cwnd_gain;

    
    struct bandwidth            bbr_bw_at_last_round;

    
    lsquic_time_t               bbr_last_cycle_start;

    
    
    
    lsquic_time_t               bbr_exit_probe_rtt_at;

    lsquic_time_t               bbr_min_rtt_since_last_probe;
    lsquic_time_t               bbr_min_rtt;
    lsquic_time_t               bbr_min_rtt_timestamp;

    
    uint64_t                    bbr_recovery_window;

    
    struct {
        TAILQ_HEAD(, bw_sample) samples;
        lsquic_time_t       ack_time;
        lsquic_packno_t     max_packno;
        uint64_t            acked_bytes;
        uint64_t            lost_bytes;
        uint64_t            total_bytes_acked_before;
        uint64_t            in_flight;
        int                 has_losses;
    }                           bbr_ack_state;
};

extern const struct cong_ctl_if lsquic_cong_bbr_if;



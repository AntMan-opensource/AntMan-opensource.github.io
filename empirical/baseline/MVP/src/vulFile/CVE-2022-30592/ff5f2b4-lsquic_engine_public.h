





struct lsquic_cid;
struct lsquic_conn;
struct lsquic_engine;
struct stack_st_X509;
struct lsquic_hash;
struct lsquic_stream_if;
struct ssl_ctx_st;
struct crand;
struct evp_aead_ctx_st;
struct lsquic_server_config;
struct sockaddr;

enum warning_type {
    WT_ACKPARSE_MINI, WT_ACKPARSE_FULL, WT_NO_POISON, N_WARNING_TYPES, };






struct lsquic_engine_public {
    struct lsquic_mm                enp_mm;
    struct lsquic_engine_settings   enp_settings;
    struct token_generator         *enp_tokgen;
    lsquic_lookup_cert_f            enp_lookup_cert;
    void                           *enp_cert_lu_ctx;
    struct ssl_ctx_st *           (*enp_get_ssl_ctx)(void *peer_ctx, const struct sockaddr *);
    const struct lsquic_shared_hash_if *enp_shi;
    void                           *enp_shi_ctx;
    lsquic_time_t                   enp_last_warning[N_WARNING_TYPES];
    const struct lsquic_stream_if  *enp_stream_if;
    void                           *enp_stream_if_ctx;
    const struct lsquic_hset_if    *enp_hsi_if;
    void                           *enp_hsi_ctx;
    void                          (*enp_generate_scid)(void *, struct lsquic_conn *, struct lsquic_cid *, unsigned);
    void                           *enp_gen_scid_ctx;
    int                           (*enp_verify_cert)(void *verify_ctx, struct stack_st_X509 *chain);
    void                           *enp_verify_ctx;
    const struct lsquic_packout_mem_if *enp_pmi;
    void                           *enp_pmi_ctx;
    struct lsquic_engine           *enp_engine;
    struct lsquic_hash             *enp_srst_hash;
    enum {
        ENPUB_PROC  = (1 << 0),  ENPUB_CAN_SEND = (1 << 1), ENPUB_HTTP  = (1 << 2), }                               enp_flags;


    unsigned char                   enp_ver_tags_buf[ sizeof(lsquic_ver_tag_t) * N_LSQVER ];
    unsigned                        enp_ver_tags_len;
    struct crand                   *enp_crand;
    struct evp_aead_ctx_st         *enp_retry_aead_ctx;
    unsigned char                  *enp_alpn;   
    
    lsquic_time_t                   enp_noprog_timeout;
    lsquic_time_t                   enp_mtu_probe_timer;
    
    struct lsquic_hash             *enp_compressed_server_certs;
    struct lsquic_hash             *enp_server_certs;
    
    struct lsquic_server_config    *enp_server_config;
    
    unsigned char                   enp_quic_ctx_buf[2][200];
    unsigned                        enp_quic_ctx_sz[2];

    struct batch_size_stats {
        unsigned    min, max,    count;
        float       avg;        
    }                               enp_batch_size_stats;

};


void lsquic_engine_add_conn_to_tickable (struct lsquic_engine_public *, lsquic_conn_t *);



void lsquic_engine_add_conn_to_attq (struct lsquic_engine_public *enpub, lsquic_conn_t *, lsquic_time_t, unsigned why);


void lsquic_engine_retire_cid (struct lsquic_engine_public *, struct lsquic_conn *, unsigned cce_idx, lsquic_time_t now, lsquic_time_t drain_time);



int lsquic_engine_add_cid (struct lsquic_engine_public *, struct lsquic_conn *, unsigned cce_idx);


struct lsquic_conn * lsquic_engine_find_conn (const struct lsquic_engine_public *pub, const lsquic_cid_t *cid);




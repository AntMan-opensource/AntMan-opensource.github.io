












 
 






 
 
 
 
 






 
 
 
 
 
 
 
 


























 



 
extern   "C" { 






























































































typedef struct UX_SLAVE_CLASS_CDC_ACM_PARAMETER_STRUCT {
    VOID                    (*ux_slave_class_cdc_acm_instance_activate)(VOID *);
    VOID                    (*ux_slave_class_cdc_acm_instance_deactivate)(VOID *);
    VOID                    (*ux_slave_class_cdc_acm_parameter_change)(VOID *);

} UX_SLAVE_CLASS_CDC_ACM_PARAMETER;



typedef struct UX_SLAVE_CLASS_CDC_ACM_STRUCT {
    UX_SLAVE_INTERFACE                  *ux_slave_class_cdc_acm_interface;
    UX_SLAVE_CLASS_CDC_ACM_PARAMETER    ux_slave_class_cdc_acm_parameter;


    UX_MUTEX                            ux_slave_class_cdc_acm_endpoint_in_mutex;
    UX_MUTEX                            ux_slave_class_cdc_acm_endpoint_out_mutex;

    UCHAR                               *ux_device_class_cdc_acm_read_buffer;
    ULONG                               ux_device_class_cdc_acm_read_requested_length;
    ULONG                               ux_device_class_cdc_acm_read_transfer_length;
    ULONG                               ux_device_class_cdc_acm_read_actual_length;
    UINT                                ux_device_class_cdc_acm_read_status;
    UINT                                ux_device_class_cdc_acm_read_state;

    UCHAR                               *ux_device_class_cdc_acm_write_buffer;
    ULONG                               ux_device_class_cdc_acm_write_transfer_length;
    ULONG                               ux_device_class_cdc_acm_write_host_length;
    ULONG                               ux_device_class_cdc_acm_write_requested_length;
    ULONG                               ux_device_class_cdc_acm_write_actual_length;
    UINT                                ux_device_class_cdc_acm_write_status;
    UINT                                ux_device_class_cdc_acm_write_state;


    ULONG                               ux_slave_class_cdc_acm_baudrate;
    UCHAR                               ux_slave_class_cdc_acm_stop_bit;
    UCHAR                               ux_slave_class_cdc_acm_parity;
    UCHAR                               ux_slave_class_cdc_acm_data_bit;
    UCHAR                               ux_slave_class_cdc_acm_data_dtr_state;
    UCHAR                               ux_slave_class_cdc_acm_data_rts_state;
    UCHAR                               reserved[3];



    UX_THREAD                           ux_slave_class_cdc_acm_bulkin_thread;
    UX_THREAD                           ux_slave_class_cdc_acm_bulkout_thread;
    UX_EVENT_FLAGS_GROUP                ux_slave_class_cdc_acm_event_flags_group;
    UCHAR                               *ux_slave_class_cdc_acm_bulkin_thread_stack;
    UCHAR                               *ux_slave_class_cdc_acm_bulkout_thread_stack;

    UINT                                (*ux_device_class_cdc_acm_write_callback)(struct UX_SLAVE_CLASS_CDC_ACM_STRUCT *cdc_acm, UINT status, ULONG length);
    UINT                                (*ux_device_class_cdc_acm_read_callback)(struct UX_SLAVE_CLASS_CDC_ACM_STRUCT *cdc_acm, UINT status, UCHAR *data_pointer, ULONG length);
    ULONG                               ux_slave_class_cdc_acm_transmission_status;
    ULONG                               ux_slave_class_cdc_acm_scheduled_write;

    ULONG                               ux_slave_class_cdc_acm_callback_total_length;
    UCHAR                               *ux_slave_class_cdc_acm_callback_data_pointer;
    UCHAR                               *ux_slave_class_cdc_acm_callback_current_data_pointer;


} UX_SLAVE_CLASS_CDC_ACM;



typedef struct UX_SLAVE_CLASS_CDC_ACM_LINE_CODING_PARAMETER_STRUCT  {
    ULONG                               ux_slave_class_cdc_acm_parameter_baudrate;
    UCHAR                               ux_slave_class_cdc_acm_parameter_stop_bit;
    UCHAR                               ux_slave_class_cdc_acm_parameter_parity;
    UCHAR                               ux_slave_class_cdc_acm_parameter_data_bit;
    
} UX_SLAVE_CLASS_CDC_ACM_LINE_CODING_PARAMETER;

typedef struct UX_SLAVE_CLASS_CDC_ACM_LINE_STATE_PARAMETER_STRUCT  {
    UCHAR                               ux_slave_class_cdc_acm_parameter_rts;
    UCHAR                               ux_slave_class_cdc_acm_parameter_dtr;
    
} UX_SLAVE_CLASS_CDC_ACM_LINE_STATE_PARAMETER;

typedef struct UX_SLAVE_CLASS_CDC_ACM_CALLBACK_PARAMETER_STRUCT  {
    UINT                                (*ux_device_class_cdc_acm_parameter_write_callback)(struct UX_SLAVE_CLASS_CDC_ACM_STRUCT *cdc_acm, UINT status, ULONG length);
    UINT                                (*ux_device_class_cdc_acm_parameter_read_callback)(struct UX_SLAVE_CLASS_CDC_ACM_STRUCT *cdc_acm, UINT status, UCHAR *data_pointer, ULONG length);

} UX_SLAVE_CLASS_CDC_ACM_CALLBACK_PARAMETER;






                                        

                                        

                                        

                                        

                                        

                                        

                                        








UINT  _ux_device_class_cdc_acm_activate(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_cdc_acm_control_request(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_cdc_acm_deactivate(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_cdc_acm_entry(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_cdc_acm_initialize(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_cdc_acm_uninitialize(UX_SLAVE_CLASS_COMMAND *command);
UINT  _ux_device_class_cdc_acm_write(UX_SLAVE_CLASS_CDC_ACM *cdc_acm, UCHAR *buffer,  ULONG requested_length, ULONG *actual_length);
UINT  _ux_device_class_cdc_acm_read(UX_SLAVE_CLASS_CDC_ACM *cdc_acm, UCHAR *buffer,  ULONG requested_length, ULONG *actual_length);
UINT  _ux_device_class_cdc_acm_ioctl(UX_SLAVE_CLASS_CDC_ACM *cdc_acm, ULONG ioctl_function, VOID *parameter);
VOID  _ux_device_class_cdc_acm_bulkin_thread(ULONG class_pointer);
VOID  _ux_device_class_cdc_acm_bulkout_thread(ULONG class_pointer);
UINT  _ux_device_class_cdc_acm_write_with_callback(UX_SLAVE_CLASS_CDC_ACM *cdc_acm, UCHAR *buffer,  ULONG requested_length);

UINT  _ux_device_class_cdc_acm_write_run(UX_SLAVE_CLASS_CDC_ACM *cdc_acm, UCHAR *buffer,  ULONG requested_length, ULONG *actual_length);
UINT  _ux_device_class_cdc_acm_read_run(UX_SLAVE_CLASS_CDC_ACM *cdc_acm, UCHAR *buffer,  ULONG requested_length, ULONG *actual_length);

UINT  _ux_device_class_cdc_acm_tasks_run(VOID *instance);












   

} 


















struct JPG_TagItem;
class Image;










struct RectangleRequest : public JObject, private Explicit { 
  
  struct RectangleRequest *rr_pNext;
  RectAngle<LONG>          rr_Request;
  UWORD                    rr_usFirstComponent; 
  UWORD                    rr_usLastComponent;  
  BYTE                     rr_cPriority;        
  bool                     rr_bIncludeAlpha;    
  bool                     rr_bUpsampling;      
  bool                     rr_bColorTrafo;      
  
  RectangleRequest(void)
    : rr_pNext(NULL)
  { }
  
  
  RectangleRequest(const struct RectangleRequest &req)
    : Explicit()
  {
    
    memcpy(this,&req,sizeof(struct RectangleRequest));
    
    rr_pNext = NULL;
  }
  
  
  RectangleRequest &operator=(const struct RectangleRequest &req)
  { 
    
    memcpy(this,&req,sizeof(struct RectangleRequest));
    
    rr_pNext = NULL;
    
    return *this;
  }
  
  
  
  void ParseTags(const struct JPG_TagItem *tags,const class Image *image);
  
  
  
  
  bool Contains(const struct RectangleRequest *sub) const;
  
  
  
  bool Intersects(const RectAngle<LONG> &cmp) const {
    return rr_Request.Intersects(cmp);
  }
  
  
  struct RectangleRequest *NextOf(void) const  {
    return rr_pNext;
  }
  
  
  void Enqueue(struct RectangleRequest *&first);
};





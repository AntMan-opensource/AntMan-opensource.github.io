











namespace hermes {

using DeclarationFileListTy = std::vector<ESTree::ProgramNode *>;

namespace hbc {

class BytecodeFunction;

struct LazyCompilationData {
  
  std::shared_ptr<SerializedScope> parentScope;

  
  Identifier originalName;
  
  
  
  
  
  Identifier closureAlias;

  
  uint32_t bufferId;

  
  ESTree::NodeKind nodeKind;

  
  bool strictMode;
};
} 





bool generateIRFromESTree( ESTree::NodePtr node, Module *M, const DeclarationFileListTy &declFileList, const ScopeChain &scopeChain);









void generateIRForCJSModule( ESTree::FunctionExpressionNode *node, uint32_t id, llvh::StringRef filename, Module *M, Function *topLevelFunction, const DeclarationFileListTy &declFileList);










std::pair<Function *, Function *> generateLazyFunctionIR( hbc::BytecodeFunction *bcFunction, Module *M, llvh::SMRange sourceRange);



} 






















enum {
	
	SECG_P160 = 1,  SECG_K160,  NIST_P192,  SECG_K192,  CURVE_22103,  NIST_P224,  SECG_K224,  CURVE_4417,  CURVE_1174,  CURVE_25519,  TWEEDLEDUM,  NIST_P256,  BSI_P256,  SECG_K256,  SM2_P256,  CURVE_67254,  CURVE_383187,  NIST_P384,  CURVE_511187,  NIST_P521,  BN_P158,  BN_P254,  BN_P256,  SM9_P256,  B24_P315,  B24_P317,  B12_P377,  B12_P381,  BN_P382,  B12_P383,  BN_P446,  B12_P446,  B12_P455,  KSS_P508,  B24_P509,  OT8_P511,  GMT8_P544,  K54_P569,  B48_P575,  BN_P638,  B12_P638,  SS_P1536,  SS_P3072, };






















































































enum {
	
	EP_SS1 = 1,  EP_SS2,  EP_BN,  EP_OT8,  EP_GMT8,  EP_B12,  EP_K16,  EP_B24,  EP_B48,  EP_K54, };



































































typedef struct {
	
	fp_st x;
	
	fp_st y;
	
	fp_st z;
	
	int coord;
} ep_st;



typedef ep_st ep_t[1];


typedef ep_st *volatile ep_t;

typedef ep_st *ep_t;




typedef struct {
	
	fp_st a;
	
	fp_st b;
	
	int deg_xn;
	
	int deg_xd;
	
	int deg_yn;
	
	int deg_yd;
	
	fp_st xn[RLC_EP_CTMAP_MAX];
	
	fp_st xd[RLC_EP_CTMAP_MAX];
	
	fp_st yn[RLC_EP_CTMAP_MAX];
	
	fp_st yd[RLC_EP_CTMAP_MAX];
} iso_st;


typedef iso_st *iso_t;









































































































void ep_curve_init(void);


void ep_curve_clean(void);


dig_t *ep_curve_get_a(void);


dig_t *ep_curve_get_b(void);


dig_t *ep_curve_get_b3(void);


dig_t *ep_curve_get_beta(void);


void ep_curve_get_v1(bn_t v[]);


void ep_curve_get_v2(bn_t v[]);


int ep_curve_opt_a(void);


int ep_curve_opt_b(void);


int ep_curve_opt_b3(void);


void ep_curve_mul_a(fp_t c, const fp_t a);


void ep_curve_mul_b(fp_t c, const fp_t a);


void ep_curve_mul_b3(fp_t c, const fp_t a);

int ep_curve_is_endom(void);


int ep_curve_is_super(void);


int ep_curve_is_pairf(void);


int ep_curve_is_ctmap(void);


void ep_curve_get_gen(ep_t g);


const ep_t *ep_curve_get_tab(void);


void ep_curve_get_ord(bn_t n);


void ep_curve_get_cof(bn_t h);


iso_t ep_curve_get_iso(void);


void ep_curve_set_plain(const fp_t a, const fp_t b, const ep_t g, const bn_t r, const bn_t h, const fp_t u, int ctmap);


void ep_curve_set_super(const fp_t a, const fp_t b, const ep_t g, const bn_t r, const bn_t h, const fp_t u, int ctmap);


void ep_curve_set_endom(const fp_t a, const fp_t b, const ep_t g, const bn_t r, const bn_t h, const fp_t beta, const bn_t l, const fp_t u, int ctmap);


void ep_param_set(int param);


int ep_param_set_any(void);


int ep_param_set_any_plain(void);


int ep_param_set_any_endom(void);


int ep_param_set_any_super(void);


int ep_param_set_any_pairf(void);


int ep_param_get(void);


void ep_param_print(void);


int ep_param_level(void);


int ep_param_embed(void);


int ep_is_infty(const ep_t p);


void ep_set_infty(ep_t p);


void ep_copy(ep_t r, const ep_t p);


int ep_cmp(const ep_t p, const ep_t q);


void ep_rand(ep_t p);


void ep_blind(ep_t r, const ep_t p);


void ep_rhs(fp_t rhs, const ep_t p);


int ep_on_curve(const ep_t p);


void ep_tab(ep_t *t, const ep_t p, int w);


void ep_print(const ep_t p);


int ep_size_bin(const ep_t a, int pack);


void ep_read_bin(ep_t a, const uint8_t *bin, int len);


void ep_write_bin(uint8_t *bin, int len, const ep_t a, int pack);


void ep_neg(ep_t r, const ep_t p);


void ep_add_basic(ep_t r, const ep_t p, const ep_t q);


void ep_add_slp_basic(ep_t r, fp_t s, const ep_t p, const ep_t q);


void ep_add_projc(ep_t r, const ep_t p, const ep_t q);


void ep_add_jacob(ep_t r, const ep_t p, const ep_t q);


void ep_sub(ep_t r, const ep_t p, const ep_t q);


void ep_dbl_basic(ep_t r, const ep_t p);


void ep_dbl_slp_basic(ep_t r, fp_t s, const ep_t p);


void ep_dbl_projc(ep_t r, const ep_t p);


void ep_dbl_jacob(ep_t r, const ep_t p);


void ep_psi(ep_t r, const ep_t p);


void ep_mul_basic(ep_t r, const ep_t p, const bn_t k);


void ep_mul_slide(ep_t r, const ep_t p, const bn_t k);


void ep_mul_monty(ep_t r, const ep_t p, const bn_t k);


void ep_mul_lwnaf(ep_t r, const ep_t p, const bn_t k);


void ep_mul_lwreg(ep_t r, const ep_t p, const bn_t k);


void ep_mul_gen(ep_t r, const bn_t k);


void ep_mul_dig(ep_t r, const ep_t p, dig_t k);


void ep_mul_pre_basic(ep_t *t, const ep_t p);


void ep_mul_pre_yaowi(ep_t *t, const ep_t p);


void ep_mul_pre_nafwi(ep_t *t, const ep_t p);


void ep_mul_pre_combs(ep_t *t, const ep_t p);


void ep_mul_pre_combd(ep_t *t, const ep_t p);


void ep_mul_pre_lwnaf(ep_t *t, const ep_t p);


void ep_mul_fix_basic(ep_t r, const ep_t *t, const bn_t k);


void ep_mul_fix_yaowi(ep_t r, const ep_t *t, const bn_t k);


void ep_mul_fix_nafwi(ep_t r, const ep_t *t, const bn_t k);


void ep_mul_fix_combs(ep_t r, const ep_t *t, const bn_t k);


void ep_mul_fix_combd(ep_t r, const ep_t *t, const bn_t k);


void ep_mul_fix_lwnaf(ep_t r, const ep_t *t, const bn_t k);


void ep_mul_sim_basic(ep_t r, const ep_t p, const bn_t k, const ep_t q, const bn_t m);


void ep_mul_sim_trick(ep_t r, const ep_t p, const bn_t k, const ep_t q, const bn_t m);


void ep_mul_sim_inter(ep_t r, const ep_t p, const bn_t k, const ep_t q, const bn_t m);


void ep_mul_sim_joint(ep_t r, const ep_t p, const bn_t k, const ep_t q, const bn_t m);


void ep_mul_sim_lot(ep_t r, const ep_t p[], const bn_t k[], int n);


void ep_mul_sim_gen(ep_t r, const bn_t k, const ep_t q, const bn_t m);


void ep_mul_sim_dig(ep_t r, const ep_t p[], const dig_t k[], int n);


void ep_norm(ep_t r, const ep_t p);


void ep_norm_sim(ep_t *r, const ep_t *t, int n);


void ep_map_from_field(ep_t p, const uint8_t *uniform_bytes, int len);


void ep_map(ep_t p, const uint8_t *msg, int len);


void ep_map_dst(ep_t p, const uint8_t *msg, int len, const uint8_t *dst, int dst_len);


void ep_pck(ep_t r, const ep_t p);


int ep_upk(ep_t r, const ep_t p);



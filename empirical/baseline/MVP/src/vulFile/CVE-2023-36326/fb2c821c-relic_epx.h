






















































typedef struct {
	
	fp2_t x;
	
	fp2_t y;
	
	fp2_t z;
	
	int coord;
} ep2_st;



typedef ep2_st ep2_t[1];

typedef ep2_st *ep2_t;



typedef struct {
	
	fp3_t x;
	
	fp3_t y;
	
	fp3_t z;
	
	int coord;
} ep3_st;



typedef ep3_st ep3_t[1];

typedef ep3_st *ep3_t;



typedef struct {
	
	fp4_t x;
	
	fp4_t y;
	
	fp4_t z;
	
	int coord;
} ep4_st;



typedef ep4_st ep4_t[1];

typedef ep4_st *ep4_t;



typedef struct {
	
	fp2_t a;
	
	fp2_t b;
	
	int deg_xn;
	
	int deg_xd;
	
	int deg_yn;
	
	int deg_yd;
	
	fp2_t xn[RLC_EPX_CTMAP_MAX];
	
	fp2_t xd[RLC_EPX_CTMAP_MAX];
	
	fp2_t yn[RLC_EPX_CTMAP_MAX];
	
	fp2_t yd[RLC_EPX_CTMAP_MAX];
} iso2_st;


typedef iso2_st *iso2_t;














































































































































































































void ep2_curve_init(void);


void ep2_curve_clean(void);


fp_t *ep2_curve_get_a(void);


fp_t *ep2_curve_get_b(void);


void ep2_curve_get_vs(bn_t *v);


int ep2_curve_opt_a(void);


int ep2_curve_opt_b(void);


int ep2_curve_is_twist(void);


int ep2_curve_is_ctmap(void);


void ep2_curve_get_gen(ep2_t g);


ep2_t *ep2_curve_get_tab(void);


void ep2_curve_get_ord(bn_t n);


void ep2_curve_get_cof(bn_t h);


iso2_t ep2_curve_get_iso(void);


void ep2_curve_set(const fp2_t a, const fp2_t b, const ep2_t g, const bn_t r, const bn_t h);


void ep2_curve_set_twist(int type);


int ep2_is_infty(const ep2_t p);


void ep2_set_infty(ep2_t p);


void ep2_copy(ep2_t r, const ep2_t p);


int ep2_cmp(const ep2_t p, const ep2_t q);


void ep2_rand(ep2_t p);


void ep2_blind(ep2_t r, const ep2_t p);


void ep2_rhs(fp2_t rhs, const ep2_t p);


int ep2_on_curve(const ep2_t p);


void ep2_tab(ep2_t *t, const ep2_t p, int w);


void ep2_print(const ep2_t p);


int ep2_size_bin(const ep2_t a, int pack);


void ep2_read_bin(ep2_t a, const uint8_t *bin, int len);


void ep2_write_bin(uint8_t *bin, int len, const ep2_t a, int pack);


void ep2_neg(ep2_t r, const ep2_t p);


void ep2_add_basic(ep2_t r, const ep2_t p, const ep2_t q);


void ep2_add_slp_basic(ep2_t r, fp2_t s, const ep2_t p, const ep2_t q);


void ep2_add_projc(ep2_t r, const ep2_t p, const ep2_t q);

 
void ep2_sub(ep2_t r, const ep2_t p, const ep2_t q);


void ep2_dbl_basic(ep2_t r, const ep2_t p);


void ep2_dbl_slp_basic(ep2_t r, fp2_t s, const ep2_t p);


void ep2_dbl_projc(ep2_t r, const ep2_t p);


void ep2_mul_basic(ep2_t r, const ep2_t p, const bn_t k);


void ep2_mul_slide(ep2_t r, const ep2_t p, const bn_t k);


void ep2_mul_monty(ep2_t r, const ep2_t p, const bn_t k);


void ep2_mul_lwnaf(ep2_t r, const ep2_t p, const bn_t k);


void ep2_mul_lwreg(ep2_t r, const ep2_t p, const bn_t k);


void ep2_mul_gen(ep2_t r, const bn_t k);


void ep2_mul_dig(ep2_t r, const ep2_t p, const dig_t k);



void ep2_mul_cof(ep2_t r, const ep2_t p);


void ep2_mul_pre_basic(ep2_t *t, const ep2_t p);


void ep2_mul_pre_yaowi(ep2_t *t, const ep2_t p);


void ep2_mul_pre_nafwi(ep2_t *t, const ep2_t p);


void ep2_mul_pre_combs(ep2_t *t, const ep2_t p);


void ep2_mul_pre_combd(ep2_t *t, const ep2_t p);


void ep2_mul_pre_lwnaf(ep2_t *t, const ep2_t p);


void ep2_mul_fix_basic(ep2_t r, const ep2_t *t, const bn_t k);


void ep2_mul_fix_yaowi(ep2_t r, const ep2_t *t, const bn_t k);


void ep2_mul_fix_nafwi(ep2_t r, const ep2_t *t, const bn_t k);


void ep2_mul_fix_combs(ep2_t r, const ep2_t *t, const bn_t k);


void ep2_mul_fix_combd(ep2_t r, const ep2_t *t, const bn_t k);


void ep2_mul_fix_lwnaf(ep2_t r, const ep2_t *t, const bn_t k);


void ep2_mul_sim_basic(ep2_t r, const ep2_t p, const bn_t k, const ep2_t q, const bn_t m);


void ep2_mul_sim_trick(ep2_t r, const ep2_t p, const bn_t k, const ep2_t q, const bn_t m);


void ep2_mul_sim_inter(ep2_t r, const ep2_t p, const bn_t k, const ep2_t q, const bn_t m);


void ep2_mul_sim_joint(ep2_t r, const ep2_t p, const bn_t k, const ep2_t q, const bn_t m);


void ep2_mul_sim_lot(ep2_t r, const ep2_t p[], const bn_t k[], int n);


void ep2_mul_sim_gen(ep2_t r, const bn_t k, const ep2_t q, const bn_t m);


void ep2_mul_sim_dig(ep2_t r, const ep2_t p[], const dig_t k[], int len);


void ep2_norm(ep2_t r, const ep2_t p);


void ep2_norm_sim(ep2_t *r, const ep2_t *t, int n);


void ep2_map_from_field(ep2_t p, const uint8_t *uniform_bytes, int len);


void ep2_map(ep2_t p, const uint8_t *msg, int len);


void ep2_map_dst(ep2_t p, const uint8_t *msg, int len, const uint8_t *dst, int dst_len);


void ep2_frb(ep2_t r, const ep2_t p, int i);


void ep2_pck(ep2_t r, const ep2_t p);


int ep2_upk(ep2_t r, const ep2_t p);


void ep4_curve_init(void);


void ep4_curve_clean(void);


void ep4_curve_get_a(fp4_t a);


void ep4_curve_get_b(fp4_t b);


void ep4_curve_get_vs(bn_t *v);


int ep4_curve_opt_a(void);


int ep4_curve_opt_b(void);


int ep4_curve_is_twist(void);


void ep4_curve_get_gen(ep4_t g);


ep4_t *ep4_curve_get_tab(void);


void ep4_curve_get_ord(bn_t n);


void ep4_curve_get_cof(bn_t h);


void ep4_curve_set(const fp4_t a, const fp4_t b, const ep4_t g, const bn_t r, const bn_t h);


void ep4_curve_set_twist(int type);


int ep4_is_infty(const ep4_t p);


void ep4_set_infty(ep4_t p);


void ep4_copy(ep4_t r, const ep4_t p);


int ep4_cmp(const ep4_t p, const ep4_t q);


void ep4_rand(ep4_t p);


void ep4_blind(ep4_t r, const ep4_t p);


void ep4_rhs(fp4_t rhs, const ep4_t p);


int ep4_on_curve(const ep4_t p);


void ep4_tab(ep4_t *t, const ep4_t p, int w);


void ep4_print(const ep4_t p);


int ep4_size_bin(const ep4_t a, int pack);


void ep4_read_bin(ep4_t a, const uint8_t *bin, int len);


void ep4_write_bin(uint8_t *bin, int len, const ep4_t a, int pack);


void ep4_neg(ep4_t r, const ep4_t p);


void ep4_add_basic(ep4_t r, const ep4_t p, const ep4_t q);


void ep4_add_slp_basic(ep4_t r, fp4_t s, const ep4_t p, const ep4_t q);


void ep4_add_projc(ep4_t r, const ep4_t p, const ep4_t q);

 
void ep4_sub(ep4_t r, const ep4_t p, const ep4_t q);


void ep4_dbl_basic(ep4_t r, const ep4_t p);


void ep4_dbl_slp_basic(ep4_t r, fp4_t s, const ep4_t p);


void ep4_dbl_projc(ep4_t r, const ep4_t p);


void ep4_mul_basic(ep4_t r, const ep4_t p, const bn_t k);


void ep4_mul_slide(ep4_t r, const ep4_t p, const bn_t k);


void ep4_mul_monty(ep4_t r, const ep4_t p, const bn_t k);


void ep4_mul_lwnaf(ep4_t r, const ep4_t p, const bn_t k);


void ep4_mul_lwreg(ep4_t r, const ep4_t p, const bn_t k);


void ep4_mul_gen(ep4_t r, const bn_t k);


void ep4_mul_dig(ep4_t r, const ep4_t p, const dig_t k);



void ep4_mul_cof(ep4_t r, const ep4_t p);


void ep4_mul_pre_basic(ep4_t *t, const ep4_t p);


void ep4_mul_pre_yaowi(ep4_t *t, const ep4_t p);


void ep4_mul_pre_nafwi(ep4_t *t, const ep4_t p);


void ep4_mul_pre_combs(ep4_t *t, const ep4_t p);


void ep4_mul_pre_combd(ep4_t *t, const ep4_t p);


void ep4_mul_pre_lwnaf(ep4_t *t, const ep4_t p);


void ep4_mul_fix_basic(ep4_t r, const ep4_t *t, const bn_t k);


void ep4_mul_fix_yaowi(ep4_t r, const ep4_t *t, const bn_t k);


void ep4_mul_fix_nafwi(ep4_t r, const ep4_t *t, const bn_t k);


void ep4_mul_fix_combs(ep4_t r, const ep4_t *t, const bn_t k);


void ep4_mul_fix_combd(ep4_t r, const ep4_t *t, const bn_t k);


void ep4_mul_fix_lwnaf(ep4_t r, const ep4_t *t, const bn_t k);


void ep4_mul_sim_basic(ep4_t r, const ep4_t p, const bn_t k, const ep4_t q, const bn_t m);


void ep4_mul_sim_trick(ep4_t r, const ep4_t p, const bn_t k, const ep4_t q, const bn_t m);


void ep4_mul_sim_inter(ep4_t r, const ep4_t p, const bn_t k, const ep4_t q, const bn_t m);


void ep4_mul_sim_joint(ep4_t r, const ep4_t p, const bn_t k, const ep4_t q, const bn_t m);


void ep4_mul_sim_lot(ep4_t r, const ep4_t p[], const bn_t k[], int n);


void ep4_mul_sim_gen(ep4_t r, const bn_t k, const ep4_t q, const bn_t m);


void ep4_mul_sim_dig(ep4_t r, const ep4_t p[], const dig_t k[], int len);


void ep4_norm(ep4_t r, const ep4_t p);


void ep4_norm_sim(ep4_t *r, const ep4_t *t, int n);


void ep4_map(ep4_t p, const uint8_t *msg, int len);


void ep4_map_dst(ep4_t p, const uint8_t *msg, int len, const uint8_t *dst, int dst_len);


void ep4_frb(ep4_t r, const ep4_t p, int i);


void ep4_pck(ep4_t r, const ep4_t p);


int ep4_upk(ep4_t r, const ep4_t p);































enum {
	
	PENTA_8 = 1,  PENTA_64,  TRINO_113,  TRINO_127,  PENTA_128,  PENTA_131,  NIST_163,  SQRT_163,  TRINO_193,  NIST_233,  SQRT_233,  SECG_239,  SQRT_239,  SQRT_251,  PENTA_251,  TRINO_257,  TRINO_271,  PENTA_271,  NIST_283,  SQRT_283,  TRINO_353,  TRINO_367,  NIST_409,  TRINO_439,  NIST_571,  SQRT_571,  TRINO_1223 };















































































typedef rlc_align dig_t fb_t[RLC_FB_DIGS + RLC_PAD(RLC_FB_BYTES) / (RLC_DIG / 8)];

typedef dig_t *fb_t;



typedef rlc_align dig_t fb_st[RLC_FB_DIGS + RLC_PAD(RLC_FB_BYTES) / (RLC_DIG / 8)];























































































































		


void fb_poly_init(void);


void fb_poly_clean(void);


dig_t *fb_poly_get(void);


void fb_poly_set_dense(const fb_t f);


void fb_poly_set_trino(int a);


void fb_poly_set_penta(int a, int b, int c);


dig_t *fb_poly_get_srz(void);


const dig_t *fb_poly_tab_srz(int i);


const fb_st *fb_poly_tab_sqr(int i);


const int *fb_poly_get_chain(int *len);


void fb_poly_get_rdc(int *a, int *b, int *c);


void fb_poly_get_trc(int *a, int *b, int *c);


const dig_t *fb_poly_get_slv(void);


void fb_param_set(int param);


void fb_param_set_any(void);


void fb_param_print(void);


void fb_poly_add(fb_t c, const fb_t a);


void fb_copy(fb_t c, const fb_t a);


void fb_neg(fb_t c, const fb_t a);


void fb_zero(fb_t a);


int fb_is_zero(const fb_t a);


int fb_get_bit(const fb_t a, int bit);


void fb_set_bit(fb_t a, int bit, int value);


void fb_set_dig(fb_t c, dig_t a);


int fb_bits(const fb_t a);


void fb_rand(fb_t a);


void fb_print(const fb_t a);


int fb_size_str(const fb_t a, int radix);


void fb_read_str(fb_t a, const char *str, int len, int radix);


void fb_write_str(char *str, int len, const fb_t a, int radix);


void fb_read_bin(fb_t a, const uint8_t *bin, int len);


void fb_write_bin(uint8_t *bin, int len, const fb_t a);


int fb_cmp(const fb_t a, const fb_t b);


int fb_cmp_dig(const fb_t a, dig_t b);


void fb_add(fb_t c, const fb_t a, const fb_t b);


void fb_add_dig(fb_t c, const fb_t a, dig_t b);


void fb_mul_basic(fb_t c, const fb_t a, const fb_t b);


void fb_mul_integ(fb_t c, const fb_t a, const fb_t b);


void fb_mul_lodah(fb_t c, const fb_t a, const fb_t b);


void fb_mul_dig(fb_t c, const fb_t a, dig_t b);


void fb_mul_karat(fb_t c, const fb_t a, const fb_t b);


void fb_sqr_basic(fb_t c, const fb_t a);


void fb_sqr_integ(fb_t c, const fb_t a);


void fb_sqr_quick(fb_t c, const fb_t a);


void fb_lsh(fb_t c, const fb_t a, int bits);


void fb_rsh(fb_t c, const fb_t a, int bits);


void fb_rdc_basic(fb_t c, dv_t a);


void fb_rdc_quick(fb_t c, dv_t a);


void fb_srt_basic(fb_t c, const fb_t a);


void fb_srt_quick(fb_t c, const fb_t a);


dig_t fb_trc_basic(const fb_t a);


dig_t fb_trc_quick(const fb_t a);


void fb_inv_basic(fb_t c, const fb_t a);


void fb_inv_binar(fb_t c, const fb_t a);


void fb_inv_exgcd(fb_t c, const fb_t a);


void fb_inv_almos(fb_t c, const fb_t a);


void fb_inv_itoht(fb_t c, const fb_t a);


void fb_inv_bruch(fb_t c, const fb_t a);


void fb_inv_ctaia(fb_t c, const fb_t a);


void fb_inv_lower(fb_t c, const fb_t a);


void fb_inv_sim(fb_t *c, const fb_t *a, int n);


void fb_exp_2b(fb_t c, const fb_t a, int b);


void fb_exp_basic(fb_t c, const fb_t a, const bn_t b);


void fb_exp_slide(fb_t c, const fb_t a, const bn_t b);


void fb_exp_monty(fb_t c, const fb_t a, const bn_t b);


void fb_slv_basic(fb_t c, const fb_t a);


void fb_slv_quick(fb_t c, const fb_t a);


void fb_itr_basic(fb_t c, const fb_t a, int b);


void fb_itr_pre_quick(fb_st *t, int b);


void fb_itr_quick(fb_t c, const fb_t a, const fb_st *t);



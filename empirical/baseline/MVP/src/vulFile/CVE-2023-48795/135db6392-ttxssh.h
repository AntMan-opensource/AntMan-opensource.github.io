










	#ifndef _WINSOCK_DEPRECATED_NO_WARNINGS
		#define _WINSOCK_DEPRECATED_NO_WARNINGS
	#endif




















typedef struct _TInstVar *PTInstVar;





























extern HANDLE hInst; 



































typedef struct _TS_SSH {
	BOOL Enabled;
	int CompressionLevel; 

	int DefaultUserType;	
	char DefaultUserName[256];

	
	char CipherOrder[SSH_CIPHER_MAX+2];

	char KnownHostsFiles[2048];
	int DefaultAuthMethod;
	char DefaultRhostsLocalUserName[256];
	char DefaultRhostsHostPrivateKeyFile[1024];
	char DefaultRSAPrivateKeyFile[1024];

	char DefaultForwarding[4096];
	BOOL TryDefaultAuth;

	int LogLevel;      
	int WriteBufferSize;

	int ssh_protocol_version; 
	int ssh_heartbeat_overtime; 
	
	int remember_password;

	
	BOOL CheckAuthListFirst;

	
	BOOL EnableRsaShortKeyServer;

	
	BOOL ForwardAgent;

	
	BOOL ForwardAgentConfirm;

	
	BOOL ForwardAgentNotify;

	
	char KexOrder[KEX_DH_MAX+1];
	char HostKeyOrder[KEY_ALGO_MAX+1];
	char MacOrder[HMAC_MAX+1];
	char CompOrder[COMP_MAX+1];

	BOOL VerifyHostKeyDNS;

	int IconID;

	int DisablePopupMessage;

	char X11Display[128];

	int UpdateHostkeys;

	int GexMinimalGroupSize;

	int AuthBanner;

	BOOL KexKeyLogging;
	wchar_t KexKeyLogFile[1024];

	
	
	
	char RSAPubkeySignAlgorithmOrder[RSA_PUBKEY_SIGN_ALGO_MAX+1];
} TS_SSH;

typedef struct _TInstVar {
	PTTSet ts;
	PComVar cv;

	
	TS_SSH *ts_SSH;

	int fatal_error;
	int showing_err;
	char *err_msg;

	Tconnect Pconnect;
	Trecv Precv;
	Tsend Psend;
	TWSAAsyncSelect PWSAAsyncSelect;
	TWSAGetLastError PWSAGetLastError;

	PReadIniFile ReadIniFile;
	PWriteIniFile WriteIniFile;
	PParseParam ParseParam;

	HMENU FileMenu;

	SOCKET socket;
	HWND NotificationWindow;
	unsigned int notification_msg;
	long notification_events;
	HICON OldSmallIcon; 
	HICON OldLargeIcon; 

	BOOL hostdlg_activated;
	BOOL hostdlg_Enabled;

	int protocol_major;
	int protocol_minor;

	PKTState pkt_state;
	SSHState ssh_state;
	AUTHState auth_state;
	CRYPTState crypt_state;
	HOSTSState hosts_state;
	FWDState fwd_state;


	TS_SSH session_settings;


	TS_SSH settings;

	
	DH *kexdh;
	char server_version_string[128];
	char client_version_string[128];
	buffer_t *my_kex;
	buffer_t *peer_kex;
	kex_algorithm kex_type; 
	ssh_keyalgo hostkey_type;
	const struct ssh2cipher *ciphers[MODE_MAX];
	const struct SSH2Mac *macs[MODE_MAX];
	compression_type ctos_compression;
	compression_type stoc_compression;
	int we_need;
	int kex_status;
	char *session_id;
	int session_id_len;
	SSHKeys ssh2_keys[MODE_MAX];
	struct sshcipher_ctx *cc[MODE_MAX];
	int userauth_success;
	int shell_id;
	int session_nego_status;
	
	int client_key_bits;
	int server_key_bits;
	int kexgex_min;
	int kexgex_bits;
	int kexgex_max;
	int ssh2_autologin;
	int ask4passwd;
	SSHAuthMethod ssh2_authmethod;
	char ssh2_username[MAX_PATH];
	char ssh2_password[MAX_PATH];
	char ssh2_keyfile[MAX_PATH];
	time_t ssh_heartbeat_tick;
	HANDLE ssh_heartbeat_thread;
	int keyboard_interactive_password_input;
	int userauth_retry_count;
	buffer_t *decomp_buffer;
	buffer_t *authbanner_buffer;
	char *ssh2_authlist;
	BOOL tryed_ssh2_authlist;
	HWND ssh_hearbeat_dialog;

	
	unsigned char *pageant_key;
	unsigned char *pageant_curkey;
	int pageant_keylistlen;
	int pageant_keycount;
	int pageant_keycurrent;
	BOOL pageant_keyfinal;

	
	BOOL agentfwd_enable;

	BOOL origDisableTCPEchoCR;

	BOOL nocheck_known_hosts;

	EC_KEY *ecdh_client_key;

	int dns_key_check;

	unsigned int server_compat_flag;

	void *hostkey_ctx;

	BOOL use_subsystem;
	char subsystem_name[256];

	BOOL nosession;

	
	HFONT hFontFixed;		

	struct {
		BOOL suspended;  
		
		UINT_PTR timer_id;
		BOOL data_finished;	
		BOOL close_request;
	} recv;

	char *server_sig_algs;

	char UIMsg[MAX_UIMSG];
} TInstVar;

















void notify_established_secure_connection(PTInstVar pvar);
void notify_closed_connection(PTInstVar pvar, char *send_msg);
void notify_nonfatal_error(PTInstVar pvar, char *msg);
void notify_fatal_error(PTInstVar pvar, char *msg, BOOL send_disconnect);
void logputs(int level, char *msg);

void logprintf(int level, _Printf_format_string_ const char *fmt, ...);
void logprintf_hexdump(int level, const char *data, int len, _Printf_format_string_ const char *fmt, ...);

void logprintf(int level, const char *fmt, ...) __attribute__ ((format (printf, 2, 3)));
void logprintf_hexdump(int level, const char *data, int len, const char *fmt, ...) __attribute__ ((format (printf, 4, 5)));

void logprintf(int level, const char *fmt, ...);
void logprintf_hexdump(int level, const char *data, int len, const char *fmt, ...);


void get_teraterm_dir_relative_name(char *buf, int bufsize, char *basename);
wchar_t *get_teraterm_dir_relative_nameW(const wchar_t *basename);
int copy_teraterm_dir_relative_path(char *dest, int destsize, char *basename);
wchar_t *get_home_dir_relative_nameW(const wchar_t *basename);
wchar_t *get_log_dir_relative_nameW(const wchar_t *basename);
int uuencode(unsigned char *src, int srclen, unsigned char *target, int targsize);










struct CdbExplain_ShowStatCtx;  



typedef struct SerializedParamExternData {
	
	Datum		value;			
	bool		isnull;			
	uint16		pflags;			
	Oid			ptype;			

	
	int16		plen;
	bool		pbyval;
} SerializedParamExternData;

typedef struct SerializedParamExecData {
	
	Datum		value;			
	bool		isnull;			

	
	bool		isvalid;

	
	int16		plen;
	bool		pbyval;
} SerializedParamExecData;

typedef struct SerializedParams {
	NodeTag		type;

	int			nExternParams;
	SerializedParamExternData *externParams;

	int			nExecParams;
	SerializedParamExecData *execParams;

	
	List	   *transientTypes;

} SerializedParams;


typedef struct ExecSlice {
	
	int			sliceIndex;

	
	int			rootIndex;

	
	int			parentIndex;

	
	int			planNumSegments;

	
	List	   *children;

	
	GangType	gangType;

	
	List		*segments;

	struct Gang *primaryGang;

	
	List		*primaryProcesses;
	
	Bitmapset	*processesMap;
} ExecSlice;


typedef struct SliceTable {
	NodeTag		type;

	int			localSlice;		
	int			numSlices;
	ExecSlice  *slices;			

	bool		hasMotions;		

	int			instrument_options;	
	uint32		ic_instance_id;
} SliceTable;



typedef struct CursorPosInfo {
	NodeTag type;

	char	   *cursor_name;
	int		 	gp_segment_id;
	ItemPointerData	ctid;
	Oid			table_oid;
} CursorPosInfo;


typedef struct QueryDispatchDesc {
	NodeTag		type;

	
	SerializedParams *paramInfo;

	
	CreateStmt *intoCreateStmt;

	
	List	   *oidAssignments;

	
	SliceTable *sliceTable;

	List	   *cursorPositions;

	
	bool useChangedAOOpts;
} QueryDispatchDesc;


typedef struct {
	NodeTag		type;

	
	Oid			catalog;		
	Oid			namespaceOid;	
	char	   *objname;		
	Oid			keyOid1;		
	Oid			keyOid2;		
	Oid			keyOid3;		
	Oid			keyOid4;		

	Oid			oid;			

} OidAssignment;





typedef struct QueryDesc {
	
	CmdType		operation;		
	PlannedStmt *plannedstmt;	
	const char *sourceText;		
	Snapshot	snapshot;		
	Snapshot	crosscheck_snapshot;	
	DestReceiver *dest;			
	ParamListInfo params;		
	QueryEnvironment *queryEnv; 
	int			instrument_options; 

	
	TupleDesc	tupDesc;		
	EState	   *estate;			
	PlanState  *planstate;		

	
	bool		already_executed;	

	
	uint64		es_processed;	
	bool		extended_query;   
	char		*portal_name;	

	QueryDispatchDesc *ddesc;

	
	struct CdbExplain_ShowStatCtx  *showstatctx;

	
	struct Instrumentation *totaltime;	
} QueryDesc;


extern QueryDesc *CreateQueryDesc(PlannedStmt *plannedstmt, const char *sourceText, Snapshot snapshot, Snapshot crosscheck_snapshot, DestReceiver *dest, ParamListInfo params, QueryEnvironment *queryEnv, int instrument_options);







extern void FreeQueryDesc(QueryDesc *qdesc);



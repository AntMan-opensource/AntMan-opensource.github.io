



namespace mp4v2 {
namespace impl {



MP4SdpAtom::MP4SdpAtom(MP4File &file) : MP4Atom(file, "sdp ")
{
    AddProperty( new MP4StringProperty(*this, "sdpText"));
}

void MP4SdpAtom::Read()
{
    
    uint64_t size = GetEnd() - m_File.GetPosition();
    char* data = (char*)MP4Malloc(size + 1);
    ASSERT(data != NULL);
    m_File.ReadBytes((uint8_t*)data, size);
    data[size] = '\0';
    ((MP4StringProperty*)m_pProperties[0])->SetValue(data);
    MP4Free(data);
}

void MP4SdpAtom::Write()
{
    
    
    MP4StringProperty* pSdp = (MP4StringProperty*)m_pProperties[0];
    const char* sdpText = pSdp->GetValue();
    if (sdpText) {
        pSdp->SetFixedLength((uint32_t)strlen(sdpText));
    }
    MP4Atom::Write();
    pSdp->SetFixedLength(0);
}



}
} 

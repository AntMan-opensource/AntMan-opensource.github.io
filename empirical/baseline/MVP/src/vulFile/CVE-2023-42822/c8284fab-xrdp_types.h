






















struct source_info;
struct list16;


struct xrdp_mod {
    int size; 
    int version; 
    
    int (*mod_start)(struct xrdp_mod *v, int w, int h, int bpp);
    int (*mod_connect)(struct xrdp_mod *v);
    int (*mod_event)(struct xrdp_mod *v, int msg, long param1, long param2, long param3, long param4);
    int (*mod_signal)(struct xrdp_mod *v);
    int (*mod_end)(struct xrdp_mod *v);
    int (*mod_set_param)(struct xrdp_mod *v, const char *name, const char *value);
    int (*mod_session_change)(struct xrdp_mod *v, int, int);
    int (*mod_get_wait_objs)(struct xrdp_mod *v, tbus *read_objs, int *rcount, tbus *write_objs, int *wcount, int *timeout);
    int (*mod_check_wait_objs)(struct xrdp_mod *v);
    int (*mod_frame_ack)(struct xrdp_mod *v, int flags, int frame_id);
    int (*mod_suppress_output)(struct xrdp_mod *v, int suppress, int left, int top, int right, int bottom);
    int (*mod_server_monitor_resize)(struct xrdp_mod *v, int width, int height);
    int (*mod_server_monitor_full_invalidate)(struct xrdp_mod *v, int width, int height);
    int (*mod_server_version_message)(struct xrdp_mod *v);
    tintptr mod_dumby[100 - 14]; 
    
    int (*server_begin_update)(struct xrdp_mod *v);
    int (*server_end_update)(struct xrdp_mod *v);
    int (*server_fill_rect)(struct xrdp_mod *v, int x, int y, int cx, int cy);
    int (*server_screen_blt)(struct xrdp_mod *v, int x, int y, int cx, int cy, int srcx, int srcy);
    int (*server_paint_rect)(struct xrdp_mod *v, int x, int y, int cx, int cy, char *data, int width, int height, int srcx, int srcy);

    int (*server_set_pointer)(struct xrdp_mod *v, int x, int y, char *data, char *mask);
    int (*server_palette)(struct xrdp_mod *v, int *palette);
    int (*server_msg)(struct xrdp_mod *v, const char *msg, int code);
    
    int (*server_is_term)(void);
    int (*server_set_clip)(struct xrdp_mod *v, int x, int y, int cx, int cy);
    int (*server_reset_clip)(struct xrdp_mod *v);
    int (*server_set_fgcolor)(struct xrdp_mod *v, int fgcolor);
    int (*server_set_bgcolor)(struct xrdp_mod *v, int bgcolor);
    int (*server_set_opcode)(struct xrdp_mod *v, int opcode);
    int (*server_set_mixmode)(struct xrdp_mod *v, int mixmode);
    int (*server_set_brush)(struct xrdp_mod *v, int x_origin, int y_origin, int style, char *pattern);
    int (*server_set_pen)(struct xrdp_mod *v, int style, int width);
    int (*server_draw_line)(struct xrdp_mod *v, int x1, int y1, int x2, int y2);
    int (*server_add_char)(struct xrdp_mod *v, int font, int character, int offset, int baseline, int width, int height, char *data);

    int (*server_draw_text)(struct xrdp_mod *v, int font, int flags, int mixmode, int clip_left, int clip_top, int clip_right, int clip_bottom, int box_left, int box_top, int box_right, int box_bottom, int x, int y, char *data, int data_len);




    int (*server_reset)(struct xrdp_mod *v, int width, int height, int bpp);
    int (*server_get_channel_count)(struct xrdp_mod *v);
    int (*server_query_channel)(struct xrdp_mod *v, int index, char *channel_name, int *channel_flags);

    int (*server_get_channel_id)(struct xrdp_mod *v, const char *name);
    int (*server_send_to_channel)(struct xrdp_mod *v, int channel_id, char *data, int data_len, int total_data_len, int flags);

    int (*server_bell_trigger)(struct xrdp_mod *v);
    int (*server_chansrv_in_use)(struct xrdp_mod *v);
    
    int (*server_create_os_surface)(struct xrdp_mod *v, int rdpindex, int width, int height);
    int (*server_switch_os_surface)(struct xrdp_mod *v, int rdpindex);
    int (*server_delete_os_surface)(struct xrdp_mod *v, int rdpindex);
    int (*server_paint_rect_os)(struct xrdp_mod *mod, int x, int y, int cx, int cy, int rdpindex, int srcx, int srcy);

    int (*server_set_hints)(struct xrdp_mod *mod, int hints, int mask);
    
    int (*server_window_new_update)(struct xrdp_mod *mod, int window_id, struct rail_window_state_order *window_state, int flags);

    int (*server_window_delete)(struct xrdp_mod *mod, int window_id);
    int (*server_window_icon)(struct xrdp_mod *mod, int window_id, int cache_entry, int cache_id, struct rail_icon_info *icon_info, int flags);


    int (*server_window_cached_icon)(struct xrdp_mod *mod, int window_id, int cache_entry, int cache_id, int flags);

    int (*server_notify_new_update)(struct xrdp_mod *mod, int window_id, int notify_id, struct rail_notify_state_order *notify_state, int flags);


    int (*server_notify_delete)(struct xrdp_mod *mod, int window_id, int notify_id);
    int (*server_monitored_desktop)(struct xrdp_mod *mod, struct rail_monitored_desktop_order *mdo, int flags);

    int (*server_set_pointer_ex)(struct xrdp_mod *v, int x, int y, char *data, char *mask, int bpp);
    int (*server_add_char_alpha)(struct xrdp_mod *mod, int font, int character, int offset, int baseline, int width, int height, char *data);


    int (*server_create_os_surface_bpp)(struct xrdp_mod *v, int rdpindex, int width, int height, int bpp);
    int (*server_paint_rect_bpp)(struct xrdp_mod *v, int x, int y, int cx, int cy, char *data, int width, int height, int srcx, int srcy, int bpp);

    int (*server_composite)(struct xrdp_mod *v, int srcidx, int srcformat, int srcwidth, int srcrepeat, int *srctransform, int mskflags, int mskidx, int mskformat, int mskwidth, int mskrepeat, int op, int srcx, int srcy, int mskx, int msky, int dstx, int dsty, int width, int height, int dstformat);





    int (*server_paint_rects)(struct xrdp_mod *v, int num_drects, short *drects, int num_crects, short *crects, char *data, int width, int height, int flags, int frame_id);



    int (*server_session_info)(struct xrdp_mod *v, const char *data, int data_bytes);
    int (*server_set_pointer_large)(struct xrdp_mod *v, int x, int y, char *data, char *mask, int bpp, int width, int height);

    int (*server_paint_rects_ex)(struct xrdp_mod *v, int num_drects, short *drects, int num_crects, short *crects, char *data, int left, int top, int width, int height, int flags, int frame_id, void *shmem_ptr, int shmem_bytes);





    tintptr server_dumby[100 - 48]; 
    
    tintptr handle; 
    tintptr wm; 
    tintptr painter;
    struct source_info *si;
};


enum xrdp_bitmap_load_transform {
    XBLT_NONE = 0, XBLT_SCALE, XBLT_ZOOM };




struct xrdp_bmp_header {
    int size;
    int image_width;
    int image_height;
    short planes;
    short bit_count;
    int compression;
    int image_size;
    int x_pels_per_meter;
    int y_pels_per_meter;
    int clr_used;
    int clr_important;
};

struct xrdp_palette_item {
    int stamp;
    int palette[256];
};

struct xrdp_bitmap_item {
    int stamp;
    int lru_index;
    struct xrdp_bitmap *bitmap;
};

struct xrdp_lru_item {
    int next;
    int prev;
};

struct xrdp_os_bitmap_item {
    int id;
    struct xrdp_bitmap *bitmap;
};

struct xrdp_char_item {
    int stamp;
    struct xrdp_font_char font_item;
};

struct xrdp_pointer_item {
    int stamp;
    int x; 
    int y;
    int pad0;
    char data[96 * 96 * 4];
    char mask[96 * 96 / 8];
    int bpp;
    int width;
    int height;
    int pad1;
};

struct xrdp_brush_item {
    int stamp;
    
    char pattern[8];
};




struct xrdp_cache {
    struct xrdp_wm *wm; 
    struct xrdp_session *session;
    
    int palette_stamp;
    struct xrdp_palette_item palette_items[6];
    
    int bitmap_stamp;
    struct xrdp_bitmap_item bitmap_items[XRDP_MAX_BITMAP_CACHE_ID] [XRDP_MAX_BITMAP_CACHE_IDX];

    
    struct xrdp_lru_item bitmap_lrus[XRDP_MAX_BITMAP_CACHE_ID] [XRDP_MAX_BITMAP_CACHE_IDX];
    int lru_head[XRDP_MAX_BITMAP_CACHE_ID];
    int lru_tail[XRDP_MAX_BITMAP_CACHE_ID];
    int lru_reset[XRDP_MAX_BITMAP_CACHE_ID];

    
    struct list16 crc16[XRDP_MAX_BITMAP_CACHE_ID][64 * 1024];

    int use_bitmap_comp;
    int cache1_entries;
    int cache1_size;
    int cache2_entries;
    int cache2_size;
    int cache3_entries;
    int cache3_size;
    int bitmap_cache_persist_enable;
    int bitmap_cache_version;
    
    int char_stamp;
    struct xrdp_char_item char_items[12][256];
    
    int pointer_stamp;
    struct xrdp_pointer_item pointer_items[32];
    int pointer_cache_entries;
    int brush_stamp;
    struct xrdp_brush_item brush_items[64];
    struct xrdp_os_bitmap_item os_bitmap_items[2000];
    struct list *xrdp_os_del_list;
};


struct xrdp_enc_data;


enum mm_connect_state {
    MMCS_CONNECT_TO_SESMAN, MMCS_GATEWAY_LOGIN, MMCS_SESSION_LOGIN, MMCS_CREATE_SESSION, MMCS_CONNECT_TO_SESSION, MMCS_CONNECT_TO_CHANSRV, MMCS_DONE };







enum display_resize_state {
    WMRZ_ENCODER_DELETE = 0, WMRZ_EGFX_DELETE_SURFACE, WMRZ_EGFX_CONN_CLOSE, WMRZ_EGFX_CONN_CLOSING, WMRZ_EGFX_CONN_CLOSED, WRMZ_EGFX_DELETE, WMRZ_SERVER_MONITOR_RESIZE, WMRZ_SERVER_VERSION_MESSAGE, WMRZ_XRDP_CORE_RESIZE, WMRZ_EGFX_INITIALIZE, WMRZ_EGFX_INITALIZING, WMRZ_EGFX_INITIALIZED, WMRZ_ENCODER_CREATE, WMRZ_SERVER_INVALIDATE, WMRZ_COMPLETE, WMRZ_ERROR };



































struct xrdp_mm {
    struct xrdp_wm *wm; 
    enum mm_connect_state connect_state; 
    int mmcs_expecting_msg; 
    
    int use_sesman; 
    int use_gw_login; 
    int use_chansrv; 
    struct trans *sesman_trans; 
    struct trans *chan_trans; 

    
    int delete_sesman_trans;

    struct list *login_names;
    struct list *login_values;
    
    long mod_handle; 
    struct xrdp_mod *(*mod_init)(void);
    int (*mod_exit)(struct xrdp_mod *);
    struct xrdp_mod *mod; 
    int display; 
    struct guid guid; 
    int code; 
    struct xrdp_encoder *encoder;
    int cs2xr_cid_map[256];
    int xr2cr_cid_map[256];
    int dynamic_monitor_chanid;
    struct xrdp_egfx *egfx;
    int egfx_up;

    
    struct display_control_monitor_layout_data *resize_data;
    struct list *resize_queue;
    tbus resize_ready;
};

struct xrdp_key_info {
    int sym;
    int chr;
};

struct xrdp_keymap {
    struct xrdp_key_info keys_noshift[256];
    struct xrdp_key_info keys_shift[256];
    struct xrdp_key_info keys_altgr[256];
    struct xrdp_key_info keys_shiftaltgr[256];
    struct xrdp_key_info keys_capslock[256];
    struct xrdp_key_info keys_capslockaltgr[256];
    struct xrdp_key_info keys_shiftcapslock[256];
    struct xrdp_key_info keys_shiftcapslockaltgr[256];
};




enum wm_login_state {
    
    WMLS_RESET = 0,  WMLS_USER_PROMPT,  WMLS_START_CONNECT,  WMLS_CONNECT_IN_PROGRESS,  WMLS_CLEANUP,  WMLS_INACTIVE };











struct xrdp_wm {
    struct xrdp_process *pro_layer; 
    struct xrdp_bitmap *screen;
    struct xrdp_session *session;
    struct xrdp_painter *painter;
    struct xrdp_cache *cache;
    int palette[256];
    struct xrdp_bitmap *login_window;
    
    int black;
    int grey;
    int dark_grey;
    int blue;
    int dark_blue;
    int white;
    int red;
    int green;
    int background;
    
    int dragging;
    int draggingx;
    int draggingy;
    int draggingcx;
    int draggingcy;
    int draggingdx;
    int draggingdy;
    int draggingorgx;
    int draggingorgy;
    int draggingxorstate;
    struct xrdp_bitmap *dragging_window;
    
    struct xrdp_bitmap *button_down;
    
    struct xrdp_bitmap *popup_wnd;
    
    struct xrdp_bitmap *focused_window;
    
    int current_pointer;
    int mouse_x;
    int mouse_y;
    
    int keys[256]; 
    int caps_lock;
    int scroll_lock;
    int num_lock;
    
    struct xrdp_client_info *client_info;
    
    struct list *log;
    struct xrdp_bitmap *log_wnd;
    enum wm_login_state login_state;
    tbus login_state_event;
    struct xrdp_mm *mm;
    struct xrdp_font *default_font;
    struct xrdp_keymap keymap;
    int hide_log_window;
    int fatal_error_in_log_window;
    struct xrdp_bitmap *target_surface; 
    int current_surface_index;
    int hints;
    char pamerrortxt[256];

    
    struct xrdp_config *xrdp_config;

    struct xrdp_region *screen_dirty_region;
    int last_screen_draw_time;
};


struct xrdp_process {
    int status;
    struct trans *server_trans; 
    tbus self_term_event;
    struct xrdp_listen *lis_layer; 
    struct xrdp_session *session;
    
    struct xrdp_wm *wm;
    
    tbus done_event;
    int session_id;
};


struct xrdp_listen {
    int status;
    struct list *trans_list; 
    struct list *process_list;
    struct list *fork_list;
    tbus pro_done_event;
    struct xrdp_startup_params *startup_params;
};


struct xrdp_region {
    struct xrdp_wm *wm; 
    struct pixman_region16 *reg;
};


struct xrdp_painter {
    int rop;
    struct xrdp_rect *use_clip; 
    struct xrdp_rect clip;
    int clip_children;
    int bg_color;
    int fg_color;
    int mix_mode;
    struct xrdp_brush brush;
    struct xrdp_pen pen;
    struct xrdp_session *session;
    struct xrdp_wm *wm; 
    struct xrdp_font *font;
    void *painter;
    struct xrdp_region *dirty_region;
    int begin_end_level;
};


struct xrdp_bitmap {
    
    int type;
    int width;
    int height;
    struct xrdp_wm *wm;
    
    
    int (*notify)(struct xrdp_bitmap *wnd, struct xrdp_bitmap *sender, int msg, long param1, long param2);
    
    int bpp;
    int line_size; 
    int do_not_free_data;
    char *data;
    
    int left;
    int top;
    int pointer;
    int bg_color;
    int tab_stop;
    int id;
    char *caption1;
    
    struct xrdp_bitmap *modal_dialog;
    struct xrdp_bitmap *focused_control;
    struct xrdp_bitmap *owner; 
    struct xrdp_bitmap *parent; 
    
    struct xrdp_bitmap *default_button; 
    struct xrdp_bitmap *esc_button; 
    
    struct list *child_list;
    
    int edit_pos;
    twchar password_char;
    
    int state; 
    
    struct list *string_list;
    struct list *data_list;
    
    int item_index;
    
    struct xrdp_bitmap *popped_from;
    int item_height;
    
    int crc32;
    int crc16;
};



















struct xrdp_font {
    struct xrdp_wm *wm;
    struct xrdp_font_char font_items[NUM_FONTS];
    char name[32];
    int size;
    
    int body_height;
    int style;
};


struct xrdp_mod_data {
    struct list *names;
    struct list *values;
};

struct xrdp_startup_params {
    
    const char *xrdp_ini;
    char port[1024];
    int kill;
    int no_daemon;
    int help;
    int version;
    int fork;
    int dump_config;
    int license;
    int tcp_send_buffer_bytes;
    int tcp_recv_buffer_bytes;
    int tcp_nodelay;
    int tcp_keepalive;
    int use_vsock;
};



struct xrdp_ls_dimensions {
    int  width;               
    int  height;              
    int  logo_width;          
    int  logo_height;          
    int  logo_x_pos;          
    int  logo_y_pos;          
    int  label_x_pos;         
    int  label_width;         
    int  input_x_pos;         
    int  input_width;         
    int  input_y_pos;         
    int  btn_ok_x_pos;        
    int  btn_ok_y_pos;        
    int  btn_ok_width;        
    int  btn_ok_height;       
    int  btn_cancel_x_pos;    
    int  btn_cancel_y_pos;    
    int  btn_cancel_width;    
    int  btn_cancel_height;   
    int default_btn_height;   
    int log_wnd_width;        
    int log_wnd_height;       
    int edit_height;          
    int combo_height;         
    int help_wnd_width;        
    int help_wnd_height;       
};

struct xrdp_cfg_globals {
    int  ini_version;            
    int  use_bitmap_cache;
    int  use_bitmap_compression;
    int  port;
    int  crypt_level;            
    int  allow_channels;
    int  max_bpp;
    int  fork;
    int  tcp_nodelay;
    int  tcp_keepalive;
    int  tcp_send_buffer_bytes;
    int  tcp_recv_buffer_bytes;
    char autorun[256];
    int  hidelogwindow;
    int  require_credentials;
    int  bulk_compression;
    int  new_cursors;
    int  nego_sec_layer;
    int  allow_multimon;
    int  enable_token_login;

    

    int  grey;
    int  black;
    int  dark_grey;
    int  blue;
    int  dark_blue;
    int  white;
    int  red;
    int  green;
    int  background;

    
    unsigned int  default_dpi;   
    char fv1_select[256];        
    int  ls_top_window_bg_color; 
    int  ls_bg_color;            
    char ls_background_image[256];  
    
    enum xrdp_bitmap_load_transform ls_background_transform;
    char ls_logo_filename[256];  
    
    enum xrdp_bitmap_load_transform ls_logo_transform;
    char ls_title[256];          
    
    struct xrdp_ls_dimensions ls_unscaled;
    
    struct xrdp_ls_dimensions ls_scaled;
};

struct xrdp_cfg_logging {

};

struct xrdp_cfg_channels {

};

struct xrdp_config {
    struct xrdp_cfg_globals   cfg_globals;
    struct xrdp_cfg_logging   cfg_logging;
    struct xrdp_cfg_channels  cfg_channels;
};



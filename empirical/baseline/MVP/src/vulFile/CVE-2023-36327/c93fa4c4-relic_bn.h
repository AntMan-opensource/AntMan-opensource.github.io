











































typedef struct {
	
	int alloc;
	
	int used;
	
	int sign;

	
	dig_t *dp;

	
	rlc_align dig_t dp[RLC_BN_SIZE];

} bn_st;



typedef bn_st bn_t[1];


typedef bn_st *volatile bn_t;

typedef bn_st *bn_t;




typedef struct {
	
	bn_t n;
	
	bn_t p;
	
	bn_t q;
	
	bn_t dp;
	
	bn_t dq;
	
	bn_t qi;
} crt_st;


typedef crt_st crt_t[1];

typedef crt_st *crt_t;




























































































































































































void bn_make(bn_t a, int digits);


void bn_clean(bn_t a);


void bn_grow(bn_t a, int digits);


void bn_trim(bn_t a);


void bn_copy(bn_t c, const bn_t a);


void bn_abs(bn_t c, const bn_t a);


void bn_neg(bn_t c, const bn_t a);


int bn_sign(const bn_t a);


void bn_zero(bn_t a);


int bn_is_zero(const bn_t a);


int bn_is_even(const bn_t a);


int bn_bits(const bn_t a);


int bn_get_bit(const bn_t a, int bit);


void bn_set_bit(bn_t a, int bit, int value);


int bn_ham(const bn_t a);


void bn_get_dig(dig_t *digit, const bn_t a);


void bn_set_dig(bn_t a, dig_t digit);


void bn_set_2b(bn_t a, int b);


void bn_rand(bn_t a, int sign, int bits);


void bn_rand_mod(bn_t a, const bn_t b);


void bn_print(const bn_t a);


int bn_size_str(const bn_t a, int radix);


void bn_read_str(bn_t a, const char *str, int len, int radix);


void bn_write_str(char *str, int len, const bn_t a, int radix);


int bn_size_bin(const bn_t a);


void bn_read_bin(bn_t a, const uint8_t *bin, int len);


void bn_write_bin(uint8_t *bin, int len, const bn_t a);


int bn_size_raw(const bn_t a);


void bn_read_raw(bn_t a, const dig_t *raw, int len);


void bn_write_raw(dig_t *raw, int len, const bn_t a);


int bn_cmp_abs(const bn_t a, const bn_t b);


int bn_cmp_dig(const bn_t a, dig_t b);


int bn_cmp(const bn_t a, const bn_t b);


void bn_add(bn_t c, const bn_t a, const bn_t b);


void bn_add_dig(bn_t c, const bn_t a, dig_t b);


void bn_sub(bn_t c, const bn_t a, const bn_t b);


void bn_sub_dig(bn_t c, const bn_t a, const dig_t b);


void bn_mul_dig(bn_t c, const bn_t a, dig_t b);


void bn_mul_basic(bn_t c, const bn_t a, const bn_t b);


void bn_mul_comba(bn_t c, const bn_t a, const bn_t b);


void bn_mul_karat(bn_t c, const bn_t a, const bn_t b);


void bn_sqr_basic(bn_t c, const bn_t a);


void bn_sqr_comba(bn_t c, const bn_t a);


void bn_sqr_karat(bn_t c, const bn_t a);


void bn_dbl(bn_t c, const bn_t a);


void bn_hlv(bn_t c, const bn_t a);


void bn_lsh(bn_t c, const bn_t a, int bits);


void bn_rsh(bn_t c, const bn_t a, int bits);


void bn_div(bn_t c, const bn_t a, const bn_t b);


void bn_div_rem(bn_t c, bn_t d, const bn_t a, const bn_t b);


void bn_div_dig(bn_t c, const bn_t a, dig_t b);


void bn_div_rem_dig(bn_t c, dig_t *d, const bn_t a, const dig_t b);


void bn_mod_inv(bn_t c, const bn_t a, const bn_t b);


void bn_mod_inv_sim(bn_t *c, const bn_t *a, const bn_t b, int n);


void bn_mod_2b(bn_t c, const bn_t a, int b);


void bn_mod_dig(dig_t *c, const bn_t a, dig_t b);


void bn_mod_basic(bn_t c, const bn_t a, const bn_t m);


void bn_mod_pre_barrt(bn_t u, const bn_t m);


void bn_mod_barrt(bn_t c, const bn_t a, const bn_t m, const bn_t u);


void bn_mod_pre_monty(bn_t u, const bn_t m);


void bn_mod_monty_conv(bn_t c, const bn_t a, const bn_t m);


void bn_mod_monty_back(bn_t c, const bn_t a, const bn_t m);


void bn_mod_monty_basic(bn_t c, const bn_t a, const bn_t m, const bn_t u);


void bn_mod_monty_comba(bn_t c, const bn_t a, const bn_t m, const bn_t u);


void bn_mod_pre_pmers(bn_t u, const bn_t m);


void bn_mod_pmers(bn_t c, const bn_t a, const bn_t m, const bn_t u);


void bn_mxp_basic(bn_t c, const bn_t a, const bn_t b, const bn_t m);


void bn_mxp_slide(bn_t c, const bn_t a, const bn_t b, const bn_t m);


void bn_mxp_monty(bn_t c, const bn_t a, const bn_t b, const bn_t m);


void bn_mxp_dig(bn_t c, const bn_t a, dig_t b, const bn_t m);


void bn_mxp_crt(bn_t d, const bn_t a, const bn_t b, const bn_t c, const crt_t crt, int sqr);


void bn_srt(bn_t c, bn_t a);


void bn_gcd_basic(bn_t c, const bn_t a, const bn_t b);


void bn_gcd_lehme(bn_t c, const bn_t a, const bn_t b);


void bn_gcd_binar(bn_t c, const bn_t a, const bn_t b);


void bn_gcd_dig(bn_t c, const bn_t a, dig_t b);


void bn_gcd_ext_basic(bn_t c, bn_t d, bn_t e, const bn_t a, const bn_t b);


void bn_gcd_ext_lehme(bn_t c, bn_t d, bn_t e, const bn_t a, const bn_t b);


void bn_gcd_ext_binar(bn_t c, bn_t d, bn_t e, const bn_t a, const bn_t b);


void bn_gcd_ext_mid(bn_t c, bn_t d, bn_t e, bn_t f, const bn_t a, const bn_t b);


void bn_gcd_ext_dig(bn_t c, bn_t d, bn_t e, const bn_t a, dig_t b);


void bn_lcm(bn_t c, const bn_t a, const bn_t b);


int bn_smb_leg(const bn_t a, const bn_t b);


int bn_smb_jac(const bn_t a, const bn_t b);


dig_t bn_get_prime(int pos);


int bn_is_prime(const bn_t a);


int bn_is_prime_basic(const bn_t a);


int bn_is_prime_rabin(const bn_t a);


int bn_is_prime_solov(const bn_t a);


void bn_gen_prime_basic(bn_t a, int bits);


void bn_gen_prime_safep(bn_t a, int bits);


void bn_gen_prime_stron(bn_t a, int bits);


int bn_gen_prime_factor(bn_t a, bn_t b, int abits, int bbits);



int bn_factor(bn_t c, const bn_t a);


int bn_is_factor(bn_t c, const bn_t a);


void bn_rec_win(uint8_t *win, int *len, const bn_t k, int w);


void bn_rec_slw(uint8_t *win, int *len, const bn_t k, int w);


void bn_rec_naf(int8_t *naf, int *len, const bn_t k, int w);


void bn_rec_tnaf(int8_t *tnaf, int *len, const bn_t k, int8_t u, int m, int w);


void bn_rec_rtnaf(int8_t *tnaf, int *len, const bn_t k, int8_t u, int m, int w);


void bn_rec_tnaf_get(uint8_t *t, int8_t *beta, int8_t *gama, int8_t u, int w);


void bn_rec_tnaf_mod(bn_t r0, bn_t r1, const bn_t k, int u, int m);


void bn_rec_reg(int8_t *naf, int *len, const bn_t k, int n, int w);


void bn_rec_jsf(int8_t *jsf, int *len, const bn_t k, const bn_t l);


void bn_rec_glv(bn_t k0, bn_t k1, const bn_t k, const bn_t n, const bn_t v1[], const bn_t v2[]);


void bn_rec_frb(bn_t *ki, int sub, const bn_t k, const bn_t x, const bn_t n, int bls);


void bn_lag(bn_t *c, const bn_t *a, const bn_t b, size_t n);


void bn_evl(bn_t c, const bn_t *a, const bn_t x, const bn_t b, size_t n);



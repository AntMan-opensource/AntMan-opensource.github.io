














extern "C" {


struct dsl_pool;
struct dsl_dataset;
struct lwb;




typedef struct zil_header {
	uint64_t zh_claim_txg;	
	uint64_t zh_replay_seq;	
	blkptr_t zh_log;	
	uint64_t zh_claim_blk_seq; 
	uint64_t zh_flags;	
	uint64_t zh_claim_lr_seq; 
	uint64_t zh_pad[3];
} zil_header_t;






typedef struct zil_chain {
	uint64_t zc_pad;
	blkptr_t zc_next_blk;	
	uint64_t zc_nused;	
	zio_eck_t zc_eck;	
} zil_chain_t;












typedef enum zil_create {
	Z_FILE, Z_DIR, Z_XATTRDIR, } zil_create_t;






















































typedef struct {			
	uint64_t	lrc_txtype;	
	uint64_t	lrc_reclen;	
	uint64_t	lrc_txg;	
	uint64_t	lrc_seq;	
} lr_t;


typedef struct {
	lr_t		lr_common;	
	uint64_t	lr_foid;	
} lr_ooo_t;


typedef struct {
	uint32_t	lr_attr_masksize; 
	uint32_t	lr_attr_bitmap; 
	
} lr_attr_t;


typedef struct {
	lr_t		lr_common;	
	uint64_t	lr_doid;	
	uint64_t	lr_foid;	
	uint64_t	lr_mode;	
	uint64_t	lr_uid;		
	uint64_t	lr_gid;		
	uint64_t	lr_gen;		
	uint64_t	lr_crtime[2];	
	uint64_t	lr_rdev;	
	
	
	
} lr_create_t;




typedef struct {
	lr_create_t	lr_create;	
	uint64_t	lr_aclcnt;	
	uint64_t	lr_domcnt;	
	uint64_t	lr_fuidcnt;	
	uint64_t	lr_acl_bytes;	
	uint64_t	lr_acl_flags;	
} lr_acl_create_t;

typedef struct {
	lr_t		lr_common;	
	uint64_t	lr_doid;	
	
} lr_remove_t;

typedef struct {
	lr_t		lr_common;	
	uint64_t	lr_doid;	
	uint64_t	lr_link_obj;	
	
} lr_link_t;

typedef struct {
	lr_t		lr_common;	
	uint64_t	lr_sdoid;	
	uint64_t	lr_tdoid;	
	
} lr_rename_t;

typedef struct {
	lr_t		lr_common;	
	uint64_t	lr_foid;	
	uint64_t	lr_offset;	
	uint64_t	lr_length;	
	uint64_t	lr_blkoff;	
	blkptr_t	lr_blkptr;	
	
} lr_write_t;

typedef struct {
	lr_t		lr_common;	
	uint64_t	lr_foid;	
	uint64_t	lr_offset;	
	uint64_t	lr_length;	
} lr_truncate_t;

typedef struct {
	lr_t		lr_common;	
	uint64_t	lr_foid;	
	uint64_t	lr_mask;	
	uint64_t	lr_mode;	
	uint64_t	lr_uid;		
	uint64_t	lr_gid;		
	uint64_t	lr_size;	
	uint64_t	lr_atime[2];	
	uint64_t	lr_mtime[2];	
	
} lr_setattr_t;

typedef struct {
	lr_t		lr_common;	
	uint64_t	lr_foid;	
	uint64_t	lr_aclcnt;	
	
} lr_acl_v0_t;

typedef struct {
	lr_t		lr_common;	
	uint64_t	lr_foid;	
	uint64_t	lr_aclcnt;	
	uint64_t	lr_domcnt;	
	uint64_t	lr_fuidcnt;	
	uint64_t	lr_acl_bytes;	
	uint64_t	lr_acl_flags;	
	
} lr_acl_t;




typedef enum {
	WR_INDIRECT,	  WR_COPIED, WR_NEED_COPY, WR_NUM_STATES } itx_wr_state_t;





typedef void (*zil_callback_t)(void *data);

typedef struct itx {
	list_node_t	itx_node;	
	void		*itx_private;	
	itx_wr_state_t	itx_wr_state;	
	uint8_t		itx_sync;	
	zil_callback_t	itx_callback;   
	void		*itx_callback_data; 
	size_t		itx_size;	
	uint64_t	itx_oid;	
	uint64_t	itx_gen;	
	lr_t		itx_lr;		
	
} itx_t;


typedef struct zil_stats {
	
	kstat_named_t zil_commit_count;

	
	kstat_named_t zil_commit_writer_count;

	
	kstat_named_t zil_itx_count;

	
	kstat_named_t zil_itx_indirect_count;
	kstat_named_t zil_itx_indirect_bytes;
	kstat_named_t zil_itx_copied_count;
	kstat_named_t zil_itx_copied_bytes;
	kstat_named_t zil_itx_needcopy_count;
	kstat_named_t zil_itx_needcopy_bytes;

	
	kstat_named_t zil_itx_metaslab_normal_count;
	kstat_named_t zil_itx_metaslab_normal_bytes;

	
	kstat_named_t zil_itx_metaslab_slog_count;
	kstat_named_t zil_itx_metaslab_slog_bytes;
} zil_stats_t;

extern zil_stats_t zil_stats;




typedef int zil_parse_blk_func_t(zilog_t *zilog, const blkptr_t *bp, void *arg, uint64_t txg);
typedef int zil_parse_lr_func_t(zilog_t *zilog, const lr_t *lr, void *arg, uint64_t txg);
typedef int zil_replay_func_t(void *arg1, void *arg2, boolean_t byteswap);
typedef int zil_get_data_t(void *arg, uint64_t arg2, lr_write_t *lr, char *dbuf, struct lwb *lwb, zio_t *zio);

extern int zil_parse(zilog_t *zilog, zil_parse_blk_func_t *parse_blk_func, zil_parse_lr_func_t *parse_lr_func, void *arg, uint64_t txg, boolean_t decrypt);


extern void	zil_init(void);
extern void	zil_fini(void);

extern zilog_t	*zil_alloc(objset_t *os, zil_header_t *zh_phys);
extern void	zil_free(zilog_t *zilog);

extern zilog_t	*zil_open(objset_t *os, zil_get_data_t *get_data);
extern void	zil_close(zilog_t *zilog);

extern void	zil_replay(objset_t *os, void *arg, zil_replay_func_t *replay_func[TX_MAX_TYPE]);
extern boolean_t zil_replaying(zilog_t *zilog, dmu_tx_t *tx);
extern void	zil_destroy(zilog_t *zilog, boolean_t keep_first);
extern void	zil_destroy_sync(zilog_t *zilog, dmu_tx_t *tx);

extern itx_t	*zil_itx_create(uint64_t txtype, size_t lrsize);
extern void	zil_itx_destroy(itx_t *itx);
extern void	zil_itx_assign(zilog_t *zilog, itx_t *itx, dmu_tx_t *tx);

extern void	zil_async_to_sync(zilog_t *zilog, uint64_t oid);
extern void	zil_commit(zilog_t *zilog, uint64_t oid);
extern void	zil_commit_impl(zilog_t *zilog, uint64_t oid);
extern void	zil_remove_async(zilog_t *zilog, uint64_t oid);

extern int	zil_reset(const char *osname, void *txarg);
extern int	zil_claim(struct dsl_pool *dp, struct dsl_dataset *ds, void *txarg);
extern int 	zil_check_log_chain(struct dsl_pool *dp, struct dsl_dataset *ds, void *tx);
extern void	zil_sync(zilog_t *zilog, dmu_tx_t *tx);
extern void	zil_clean(zilog_t *zilog, uint64_t synced_txg);

extern int	zil_suspend(const char *osname, void **cookiep);
extern void	zil_resume(void *cookie);

extern void	zil_lwb_add_block(struct lwb *lwb, const blkptr_t *bp);
extern void	zil_lwb_add_txg(struct lwb *lwb, uint64_t txg);
extern int	zil_bp_tree_add(zilog_t *zilog, const blkptr_t *bp);

extern void	zil_set_sync(zilog_t *zilog, uint64_t syncval);

extern void	zil_set_logbias(zilog_t *zilog, uint64_t slogval);

extern uint64_t	zil_max_copied_data(zilog_t *zilog);
extern uint64_t	zil_max_log_data(zilog_t *zilog);

extern int zil_replay_disable;


}




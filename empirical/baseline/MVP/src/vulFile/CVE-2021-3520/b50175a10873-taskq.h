





































typedef enum tq_lock_role {
	TQ_LOCK_GENERAL =	0, TQ_LOCK_DYNAMIC =	1, } tq_lock_role_t;


typedef unsigned long taskqid_t;
typedef void (task_func_t)(void *);

typedef struct taskq {
	spinlock_t		tq_lock;	
	char			*tq_name;	
	int			tq_instance;	
	struct list_head	tq_thread_list;	
	struct list_head	tq_active_list;	
	int			tq_nactive;	
	int			tq_nthreads;	
	int			tq_nspawn;	
	int			tq_maxthreads;	
	
	int			tq_cpu_pct;
	int			tq_pri;		
	int			tq_minalloc;	
	int			tq_maxalloc;	
	int			tq_nalloc;	
	uint_t			tq_flags;	
	taskqid_t		tq_next_id;	
	taskqid_t		tq_lowest_id;	
	struct list_head	tq_free_list;	
	struct list_head	tq_pend_list;	
	struct list_head	tq_prio_list;	
	struct list_head	tq_delay_list;	
	struct list_head	tq_taskqs;	
	spl_wait_queue_head_t	tq_work_waitq;	
	spl_wait_queue_head_t	tq_wait_waitq;	
	tq_lock_role_t		tq_lock_class;	
	
	struct hlist_node	tq_hp_cb_node;
	boolean_t		tq_hp_support;
} taskq_t;

typedef struct taskq_ent {
	spinlock_t		tqent_lock;
	spl_wait_queue_head_t	tqent_waitq;
	struct timer_list	tqent_timer;
	struct list_head	tqent_list;
	taskqid_t		tqent_id;
	task_func_t		*tqent_func;
	void			*tqent_arg;
	taskq_t			*tqent_taskq;
	uintptr_t		tqent_flags;
	unsigned long		tqent_birth;
} taskq_ent_t;




typedef struct taskq_thread {
	struct list_head	tqt_thread_list;
	struct list_head	tqt_active_list;
	struct task_struct	*tqt_thread;
	taskq_t			*tqt_tq;
	taskqid_t		tqt_id;
	taskq_ent_t		*tqt_task;
	uintptr_t		tqt_flags;
} taskq_thread_t;


extern taskq_t *system_taskq;

extern taskq_t *system_delay_taskq;


extern struct list_head tq_list;
extern struct rw_semaphore tq_list_sem;

extern taskqid_t taskq_dispatch(taskq_t *, task_func_t, void *, uint_t);
extern taskqid_t taskq_dispatch_delay(taskq_t *, task_func_t, void *, uint_t, clock_t);
extern void taskq_dispatch_ent(taskq_t *, task_func_t, void *, uint_t, taskq_ent_t *);
extern int taskq_empty_ent(taskq_ent_t *);
extern void taskq_init_ent(taskq_ent_t *);
extern taskq_t *taskq_create(const char *, int, pri_t, int, int, uint_t);
extern void taskq_destroy(taskq_t *);
extern void taskq_wait_id(taskq_t *, taskqid_t);
extern void taskq_wait_outstanding(taskq_t *, taskqid_t);
extern void taskq_wait(taskq_t *);
extern int taskq_cancel_id(taskq_t *, taskqid_t);
extern int taskq_member(taskq_t *, kthread_t *);
extern taskq_t *taskq_of_curthread(void);




int spl_taskq_init(void);
void spl_taskq_fini(void);



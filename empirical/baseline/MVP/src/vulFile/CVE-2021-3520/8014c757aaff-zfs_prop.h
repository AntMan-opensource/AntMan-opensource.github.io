









extern "C" {



typedef enum {
	PROP_TYPE_NUMBER,	 PROP_TYPE_STRING, PROP_TYPE_INDEX } zprop_type_t;



typedef enum {
	PROP_DEFAULT, PROP_READONLY, PROP_INHERIT,  PROP_ONETIME, PROP_ONETIME_DEFAULT } zprop_attr_t;






typedef struct zfs_index {
	const char *pi_name;
	uint64_t pi_value;
} zprop_index_t;

typedef struct {
	const char *pd_name;		
	int pd_propnum;			
	zprop_type_t pd_proptype;	
	const char *pd_strdefault;	
	uint64_t pd_numdefault;		
	zprop_attr_t pd_attr;		
	int pd_types;			
					
	const char *pd_values;		
	const char *pd_colname;		
	boolean_t pd_rightalign;	
	boolean_t pd_visible;		
					
	boolean_t pd_zfs_mod_supported;	
	const zprop_index_t *pd_table;	
					
	size_t pd_table_size;		
} zprop_desc_t;


_ZFS_PROP_H void zfs_prop_init(void);
_ZFS_PROP_H zprop_type_t zfs_prop_get_type(zfs_prop_t);
_ZFS_PROP_H boolean_t zfs_prop_delegatable(zfs_prop_t prop);
_ZFS_PROP_H zprop_desc_t *zfs_prop_get_table(void);


_ZFS_PROP_H void zpool_prop_init(void);
_ZFS_PROP_H zprop_type_t zpool_prop_get_type(zpool_prop_t);
_ZFS_PROP_H zprop_desc_t *zpool_prop_get_table(void);


_ZFS_PROP_H void vdev_prop_init(void);
_ZFS_PROP_H zprop_type_t vdev_prop_get_type(vdev_prop_t prop);
_ZFS_PROP_H zprop_desc_t *vdev_prop_get_table(void);


_ZFS_PROP_H void zprop_register_impl(int, const char *, zprop_type_t, uint64_t, const char *, zprop_attr_t, int, const char *, const char *, boolean_t, boolean_t, const zprop_index_t *);

_ZFS_PROP_H void zprop_register_string(int, const char *, const char *, zprop_attr_t attr, int, const char *, const char *);
_ZFS_PROP_H void zprop_register_number(int, const char *, uint64_t, zprop_attr_t, int, const char *, const char *);
_ZFS_PROP_H void zprop_register_index(int, const char *, uint64_t, zprop_attr_t, int, const char *, const char *, const zprop_index_t *);
_ZFS_PROP_H void zprop_register_hidden(int, const char *, zprop_type_t, zprop_attr_t, int, const char *);


_ZFS_PROP_H int zprop_iter_common(zprop_func, void *, boolean_t, boolean_t, zfs_type_t);
_ZFS_PROP_H int zprop_name_to_prop(const char *, zfs_type_t);
_ZFS_PROP_H int zprop_string_to_index(int, const char *, uint64_t *, zfs_type_t);
_ZFS_PROP_H int zprop_index_to_string(int, uint64_t, const char **, zfs_type_t);
_ZFS_PROP_H uint64_t zprop_random_value(int, uint64_t, zfs_type_t);
_ZFS_PROP_H const char *zprop_values(int, zfs_type_t);
_ZFS_PROP_H size_t zprop_width(int, boolean_t *, zfs_type_t);
_ZFS_PROP_H boolean_t zprop_valid_for_type(int, zfs_type_t, boolean_t);
_ZFS_PROP_H int zprop_valid_char(char c);


}




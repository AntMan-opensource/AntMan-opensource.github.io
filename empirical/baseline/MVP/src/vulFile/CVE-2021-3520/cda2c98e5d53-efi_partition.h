








extern "C" {














typedef struct efi_gpt {
	uint64_t	efi_gpt_Signature;
	uint_t		efi_gpt_Revision;
	uint_t		efi_gpt_HeaderSize;
	uint_t		efi_gpt_HeaderCRC32;
	uint_t		efi_gpt_Reserved1;
	diskaddr_t	efi_gpt_MyLBA;
	diskaddr_t	efi_gpt_AlternateLBA;
	diskaddr_t	efi_gpt_FirstUsableLBA;
	diskaddr_t	efi_gpt_LastUsableLBA;
	struct uuid	efi_gpt_DiskGUID;
	diskaddr_t	efi_gpt_PartitionEntryLBA;
	uint_t		efi_gpt_NumberOfPartitionEntries;
	uint_t		efi_gpt_SizeOfPartitionEntry;
	uint_t		efi_gpt_PartitionEntryArrayCRC32;
	char		efi_gpt_Reserved2[LEN_EFI_PAD];
} efi_gpt_t;


typedef struct efi_gpe_Attrs {
	uint32_t	PartitionAttrs		:16, Reserved2		:16;
	uint32_t	Reserved1		:31, RequiredPartition	:1;
} efi_gpe_Attrs_t;












































































































typedef struct efi_gpe {
	struct uuid	efi_gpe_PartitionTypeGUID;
	struct uuid	efi_gpe_UniquePartitionGUID;
	diskaddr_t	efi_gpe_StartingLBA;
	diskaddr_t	efi_gpe_EndingLBA;
	efi_gpe_Attrs_t	efi_gpe_Attributes;
	ushort_t	efi_gpe_PartitionName[EFI_PART_NAME_LEN];
} efi_gpe_t;



typedef struct dk_part	{
	diskaddr_t	p_start;	
	diskaddr_t	p_size;		
	struct uuid	p_guid;		
	ushort_t	p_tag;		
	ushort_t	p_flag;		
	char		p_name[EFI_PART_NAME_LEN]; 
	struct uuid	p_uguid;	
	uint_t		p_resv[8];	
} dk_part_t;





typedef struct dk_gpt {
	uint_t		efi_version;	
	uint_t		efi_nparts;	
	uint_t		efi_part_size;	
					
	uint_t		efi_lbasize;	
	diskaddr_t	efi_last_lba;	
	diskaddr_t	efi_first_u_lba; 
	diskaddr_t	efi_last_u_lba;	
	struct uuid	efi_disk_uguid;	
	uint_t		efi_flags;
	uint_t		efi_reserved1;	
	diskaddr_t	efi_altern_lba;	
	uint_t		efi_reserved[12]; 
	struct dk_part	efi_parts[1];	
} dk_gpt_t;





typedef struct dk_efi {
	diskaddr_t	 dki_lba;	
	len_t		 dki_length;	
	union {
		efi_gpt_t 	*_dki_data;
		uint64_t	_dki_data_64;
	} dki_un;


} dk_efi_t;

struct partition64 {
	struct uuid	p_type;
	uint_t		p_partno;
	uint_t		p_resv1;
	diskaddr_t	p_start;
	diskaddr_t	p_size;
};









_SYS_EFI_PARTITION_H int efi_debug;
_SYS_EFI_PARTITION_H int efi_alloc_and_init(int, uint32_t, struct dk_gpt **);
_SYS_EFI_PARTITION_H int efi_alloc_and_read(int, struct dk_gpt **);
_SYS_EFI_PARTITION_H int efi_write(int, struct dk_gpt *);
_SYS_EFI_PARTITION_H int efi_rescan(int);
_SYS_EFI_PARTITION_H void efi_free(struct dk_gpt *);
_SYS_EFI_PARTITION_H int efi_type(int);
_SYS_EFI_PARTITION_H void efi_err_check(struct dk_gpt *);
_SYS_EFI_PARTITION_H int efi_use_whole_disk(int fd);



}















extern "C" {


struct modlmisc;
struct modlinkage;


struct mod_ops {
	int	(*modm_install)(struct modlmisc *, struct modlinkage *);
	int	(*modm_remove)(struct modlmisc *, struct modlinkage *);
	int	(*modm_info)(void *, struct modlinkage *, int *);
};


extern struct mod_ops mod_brandops;

extern struct mod_ops mod_cpuops;

extern struct mod_ops mod_cryptoops;
extern struct mod_ops mod_driverops;
extern struct mod_ops mod_execops;
extern struct mod_ops mod_fsops;
extern struct mod_ops mod_miscops;
extern struct mod_ops mod_schedops;
extern struct mod_ops mod_strmodops;
extern struct mod_ops mod_syscallops;
extern struct mod_ops mod_sockmodops;

extern struct mod_ops mod_syscallops32;

extern struct mod_ops mod_dacfops;
extern struct mod_ops mod_ippops;
extern struct mod_ops mod_pcbeops;
extern struct mod_ops mod_devfsops;
extern struct mod_ops mod_kiconvops;




struct modlcrypto {
	struct mod_ops		*crypto_modops;
	char			*crypto_linkinfo;
};


struct modlmisc {
	struct mod_ops		*misc_modops;
	char			*misc_linkinfo;
};





struct modlinkage {
	int		ml_rev;		

	void		*ml_linkage[7];	

	void		*ml_linkage[4];	
					

};


































































struct aliases {
	struct aliases *a_next;
	char *a_name;
	int a_len;
};



struct modconfig {
	char drvname[MAXMODCONFNAME];
	char drvclass[MAXMODCONFNAME];
	int major;
	int flags;
	int num_aliases;
	struct aliases *ap;
};



struct aliases32 {
	caddr32_t a_next;
	caddr32_t a_name;
	int32_t a_len;
};

struct modconfig32 {
	char drvname[MAXMODCONFNAME];
	char drvclass[MAXMODCONFNAME];
	int32_t major;
	int32_t flags;
	int32_t num_aliases;
	caddr32_t ap;
};




















struct modspecific_info {
	char	msi_linkinfo[MODMAXLINKINFOLEN]; 
	int	msi_p0;			
};




struct modinfo {
	int		   mi_info;		
	int		   mi_state;		
	int		   mi_id;		
	int		   mi_nextid;		
	caddr_t		   mi_base;		
	size_t		   mi_size;		
	int		   mi_rev;		
	int		   mi_loadcnt;		
	char		   mi_name[MODMAXNAMELEN]; 
	struct modspecific_info mi_msinfo[MODMAXLINK];
						
};








struct modspecific_info32 {
	char	msi_linkinfo[MODMAXLINKINFOLEN32]; 
	int32_t	msi_p0;			
};

struct modinfo32 {
	int32_t		   mi_info;		
	int32_t		   mi_state;		
	int32_t		   mi_id;		
	int32_t		   mi_nextid;		
	caddr32_t	   mi_base;		
	uint32_t	   mi_size;		
	int32_t		   mi_rev;		
	int32_t		   mi_loadcnt;		
	char		   mi_name[MODMAXNAMELEN32]; 
	struct modspecific_info32 mi_msinfo[MODMAXLINK32];
						
};





















struct mod_stub_info {
	uintptr_t mods_func_adr;
	struct mod_modinfo *mods_modinfo;
	uintptr_t mods_stub_adr;
	int (*mods_errfcn)(void);
	int mods_flag;			
};






struct mod_modinfo {
	char *modm_module_name;
	struct modctl *mp;
	struct mod_stub_info modm_stubs[1];
};

struct modctl_list {
	struct modctl_list *modl_next;
	struct modctl *modl_modp;
};


typedef struct modctl {
	struct modctl	*mod_next;	
	struct modctl	*mod_prev;
	int		mod_id;
	void		*mod_mp;
	kthread_t	*mod_inprogress_thread;
	struct mod_modinfo *mod_modinfo;
	struct modlinkage *mod_linkage;
	char		*mod_filename;
	char		*mod_modname;

	char		mod_busy;	
	char		mod_want;	
	char		mod_prim;	

	int		mod_ref;	

	char		mod_loaded;	
	char		mod_installed;	
	char		mod_loadflags;
	char		mod_delay_unload;	

	struct modctl_list *mod_requisites;	
	void		*____unused;	
					
	int		mod_loadcnt;	
	int		mod_nenabled;	
	char		*mod_text;
	size_t		mod_text_size;

	int		mod_gencount;	
	struct modctl	*mod_requisite_loading;	
} modctl_t;










typedef int modid_t;


extern kmutex_t mod_lock;

extern char *systemfile;
extern char **syscallnames;
extern int moddebug;


extern modctl_t modules;


extern int	mod_install(struct modlinkage *);
extern int	mod_remove(struct modlinkage *);
extern int	mod_info(struct modlinkage *, struct modinfo *);


























}




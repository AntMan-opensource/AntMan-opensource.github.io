



















struct zio_crypt_info;

typedef struct freebsd_crypt_session {
	struct mtx		fs_lock;
	crypto_session_t	fs_sid;
	boolean_t	fs_done;
} freebsd_crypt_session_t;


typedef void *crypto_mechanism_t;
typedef void *crypto_ctx_template_t;

typedef struct crypto_key {
	int	ck_format;	
	void	*ck_data;
	size_t	ck_length;
} crypto_key_t;

typedef struct hmac_ctx {
	SHA512_CTX	innerctx;
	SHA512_CTX	outerctx;
} *crypto_context_t;


void crypto_mac(const crypto_key_t *key, const void *in_data, size_t in_data_size, void *out_data, size_t out_data_size);
void crypto_mac_init(struct hmac_ctx *ctx, const crypto_key_t *key);
void crypto_mac_update(struct hmac_ctx *ctx, const void *data, size_t data_size);
void crypto_mac_final(struct hmac_ctx *ctx, void *out_data, size_t out_data_size);

int freebsd_crypt_newsession(freebsd_crypt_session_t *sessp, struct zio_crypt_info *, crypto_key_t *);
void freebsd_crypt_freesession(freebsd_crypt_session_t *sessp);

int freebsd_crypt_uio(boolean_t, freebsd_crypt_session_t *, struct zio_crypt_info *, zfs_uio_t *, crypto_key_t *, uint8_t *, size_t, size_t);




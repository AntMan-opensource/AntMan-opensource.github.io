





































































  
  




















































  































    
    



























































































































    

























typedef unsigned char	char_u;
typedef unsigned short	short_u;
typedef unsigned int	int_u;





typedef unsigned __int64	long_u;
typedef		 __int64	long_i;




typedef unsigned long		long_u;
typedef		 long		long_i;













typedef __int64 off_T;











typedef long off_T;

typedef off_t off_T;













typedef char_u schar_T;
typedef unsigned short sattr_T;



typedef unsigned int u8char_T;	































































































extern char *(*dyn_libintl_gettext)(const char *msgid);
extern char *(*dyn_libintl_ngettext)(const char *msgid, const char *msgid_plural, unsigned long n);
extern char *(*dyn_libintl_bindtextdomain)(const char *domainname, const char *dirname);
extern char *(*dyn_libintl_bind_textdomain_codeset)(const char *domainname, const char *codeset);
extern char *(*dyn_libintl_textdomain)(const char *domainname);
extern int (*dyn_libintl_wputenv)(const wchar_t *envstring);














































				    

				    












			    


















































				



				









































				
				

				

				
				
















































































































				


















































































				

















































				








































































				















































































































				














































































enum auto_event {
    EVENT_BUFADD = 0,		 EVENT_BUFDELETE, EVENT_BUFENTER, EVENT_BUFFILEPOST, EVENT_BUFFILEPRE, EVENT_BUFHIDDEN, EVENT_BUFLEAVE, EVENT_BUFNEW, EVENT_BUFNEWFILE, EVENT_BUFREADCMD, EVENT_BUFREADPOST, EVENT_BUFREADPRE, EVENT_BUFUNLOAD, EVENT_BUFWINENTER, EVENT_BUFWINLEAVE, EVENT_BUFWIPEOUT, EVENT_BUFWRITECMD, EVENT_BUFWRITEPOST, EVENT_BUFWRITEPRE, EVENT_CMDLINECHANGED, EVENT_CMDLINEENTER, EVENT_CMDLINELEAVE, EVENT_CMDUNDEFINED, EVENT_CMDWINENTER, EVENT_CMDWINLEAVE, EVENT_COLORSCHEME, EVENT_COLORSCHEMEPRE, EVENT_COMPLETECHANGED, EVENT_COMPLETEDONE, EVENT_COMPLETEDONEPRE, EVENT_CURSORHOLD, EVENT_CURSORHOLDI, EVENT_CURSORMOVED, EVENT_CURSORMOVEDI, EVENT_DIFFUPDATED, EVENT_DIRCHANGED, EVENT_ENCODINGCHANGED, EVENT_EXITPRE, EVENT_FILEAPPENDCMD, EVENT_FILEAPPENDPOST, EVENT_FILEAPPENDPRE, EVENT_FILECHANGEDRO, EVENT_FILECHANGEDSHELL, EVENT_FILECHANGEDSHELLPOST, EVENT_FILEREADCMD, EVENT_FILEREADPOST, EVENT_FILEREADPRE, EVENT_FILETYPE, EVENT_FILEWRITECMD, EVENT_FILEWRITEPOST, EVENT_FILEWRITEPRE, EVENT_FILTERREADPOST, EVENT_FILTERREADPRE, EVENT_FILTERWRITEPOST, EVENT_FILTERWRITEPRE, EVENT_FOCUSGAINED, EVENT_FOCUSLOST, EVENT_FUNCUNDEFINED, EVENT_GUIENTER, EVENT_GUIFAILED, EVENT_INSERTCHANGE, EVENT_INSERTCHARPRE, EVENT_INSERTENTER, EVENT_INSERTLEAVEPRE, EVENT_INSERTLEAVE, EVENT_MENUPOPUP, EVENT_MODECHANGED, EVENT_OPTIONSET, EVENT_QUICKFIXCMDPOST, EVENT_QUICKFIXCMDPRE, EVENT_QUITPRE, EVENT_REMOTEREPLY, EVENT_SAFESTATE, EVENT_SAFESTATEAGAIN, EVENT_SESSIONLOADPOST, EVENT_SHELLCMDPOST, EVENT_SHELLFILTERPOST, EVENT_SIGUSR1, EVENT_SOURCECMD, EVENT_SOURCEPRE, EVENT_SOURCEPOST, EVENT_SPELLFILEMISSING, EVENT_STDINREADPOST, EVENT_STDINREADPRE, EVENT_SWAPEXISTS, EVENT_SYNTAX, EVENT_TABCLOSED, EVENT_TABENTER, EVENT_TABLEAVE, EVENT_TABNEW, EVENT_TERMCHANGED, EVENT_TERMINALOPEN, EVENT_TERMINALWINOPEN,  EVENT_TERMRESPONSE, EVENT_TEXTCHANGED, EVENT_TEXTCHANGEDI, EVENT_TEXTCHANGEDP, EVENT_TEXTYANKPOST, EVENT_USER, EVENT_VIMENTER, EVENT_VIMLEAVE, EVENT_VIMLEAVEPRE, EVENT_VIMRESIZED, EVENT_WINENTER, EVENT_WINLEAVE, EVENT_WINNEW, EVENT_WINCLOSED, EVENT_VIMSUSPEND, EVENT_VIMRESUME,  NUM_EVENTS };
















































































































typedef enum auto_event event_T;


typedef enum {
    HLF_8 = 0	      , HLF_EOB , HLF_AT  , HLF_D , HLF_E , HLF_H , HLF_I , HLF_L , HLF_M , HLF_CM , HLF_N , HLF_LNA , HLF_LNB , HLF_CLN , HLF_CLS , HLF_CLF , HLF_R , HLF_S , HLF_SNC , HLF_C , HLF_T , HLF_V , HLF_VNC , HLF_W , HLF_WM , HLF_FL , HLF_FC , HLF_ADD , HLF_CHD , HLF_DED , HLF_TXD , HLF_CONCEAL , HLF_SC , HLF_SPB , HLF_SPC , HLF_SPR , HLF_SPL , HLF_PNI , HLF_PSI , HLF_PSB , HLF_PST , HLF_TP , HLF_TPS , HLF_TPF , HLF_CUC , HLF_CUL , HLF_MC , HLF_QFL , HLF_ST , HLF_STNC , HLF_COUNT } hlf_T;






































































typedef UINT32_TYPEDEF UINT32_T;
































				

				


































					   




























































void *vim_memset(void *, int, size_t);


































































































typedef long	linenr_T;		
typedef int	colnr_T;		
typedef unsigned short disptick_T;	












typedef void	    *vim_acl_T;		






























































typedef LARGE_INTEGER proftime_T;

typedef struct timeval proftime_T;


typedef int proftime_T;	    



typedef enum {
    CT_NONE,	     CT_PROFILE, CT_DEBUG } compiletype_T;

















typedef long  time_T;


typedef __time64_t  time_T;

typedef time_t	    time_T;




typedef __int64 sock_T;

typedef int sock_T;






















































































































































































































































typedef struct {
    int		available;	
    int		owned;		
    pos_T	start;		
    pos_T	end;		
    int		vmode;		

    
    short_u	origin_row;
    short_u	origin_start_col;
    short_u	origin_end_col;
    short_u	word_start_col;
    short_u	word_end_col;

    
    short_u	min_col;
    short_u	max_col;
    short_u	min_row;
    short_u	max_row;


    pos_T	prev;		
    short_u	state;		
    short_u	mode;		


    Atom	sel_atom;	



    GdkAtom     gtk_sel_atom;	



    int_u	format;		
    int_u	format_raw;	


    

} Clipboard_T;

typedef int Clipboard_T;	




typedef struct _stat64 stat_T;

typedef struct stat stat_T;


















typedef enum {
    ASSERT_EQUAL, ASSERT_NOTEQUAL, ASSERT_MATCH, ASSERT_NOTMATCH, ASSERT_OTHER } assert_type_T;






typedef enum {
    PASTE_INSERT,	 PASTE_CMDLINE, PASTE_EX, PASTE_ONE_CHAR } paste_mode_T;





typedef enum {
    FLUSH_MINIMAL, FLUSH_TYPEAHEAD, FLUSH_INPUT } flush_buffers_T;




typedef enum {
    USEPOPUP_NONE, USEPOPUP_NORMAL, USEPOPUP_HIDDEN } use_popup_T;




typedef enum {
    ESTACK_NONE, ESTACK_SFILE, ESTACK_STACK } estack_arg_T;














































































 #pragma warning(disable : 4312)

 #pragma warning(disable : 4131)

 #pragma warning(disable : 4244)

 #pragma warning(disable : 4306)

 #pragma warning(disable : 4100)

 #pragma warning(disable : 4057)

 #pragma warning(disable : 4127)

 #pragma warning(disable : 4706)
















































			    



			    




   
   










































































  





  






  












  
  

































































































































				















































































typedef struct timeval elapsed_T;
long elapsed(struct timeval *start_tv);





typedef int DWORD;

typedef DWORD elapsed_T;

long elapsed(DWORD start_tick);








































































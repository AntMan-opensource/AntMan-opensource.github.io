















namespace tensorflow {

using CPUDevice = Eigen::ThreadPoolDevice;
using GPUDevice = Eigen::GpuDevice;

template <typename Device> class SparseReshapeOp : public OpKernel {
 public:
  explicit SparseReshapeOp(OpKernelConstruction* context) : OpKernel(context) {}

  void Compute(OpKernelContext* context) override {
    ReshapeSparseTensor<Device>(context, context->input(0), context->input(1), context->input(2), 0 , 1 );

  }
};

REGISTER_KERNEL_BUILDER(Name("SparseReshape").Device(DEVICE_CPU), SparseReshapeOp<CPUDevice>)


REGISTER_KERNEL_BUILDER(Name("SparseReshape")
                            .Device(DEVICE_GPU)
                            .HostMemory("input_shape")
                            .HostMemory("new_shape")
                            .HostMemory("output_shape"), SparseReshapeOp<GPUDevice>)


}  
